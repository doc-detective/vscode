/*! For license information please see extension.js.LICENSE.txt */
(()=>{var e={18:(e,t,i)=>{"use strict";var r=i(484),s=i(9714),o=i(1755),n=i(6010),a=i(7434),p=i(483),c=i(2291);function d(e,t,i,r,s,o){const n="block-map"===i.type?a.resolveBlockMap(e,t,i,r,o):"block-seq"===i.type?p.resolveBlockSeq(e,t,i,r,o):c.resolveFlowCollection(e,t,i,r,o),d=n.constructor;return"!"===s||s===d.tagName?(n.tag=d.tagName,n):(s&&(n.tag=s),n)}t.composeCollection=function(e,t,i,a,p){const c=a.tag,u=c?t.directives.tagName(c.source,(e=>p(c,"TAG_RESOLVE_FAILED",e))):null;if("block-seq"===i.type){const{anchor:e,newlineAfterProp:t}=a,i=e&&c?e.offset>c.offset?e:c:e??c;i&&(!t||t.offset<i.offset)&&p(i,"MISSING_CHAR","Missing newline after block sequence props")}const l="block-map"===i.type?"map":"block-seq"===i.type?"seq":"{"===i.start.source?"map":"seq";if(!c||!u||"!"===u||u===o.YAMLMap.tagName&&"map"===l||u===n.YAMLSeq.tagName&&"seq"===l)return d(e,t,i,p,u);let h=t.schema.tags.find((e=>e.tag===u&&e.collection===l));if(!h){const r=t.schema.knownTags[u];if(!r||r.collection!==l)return r?p(c,"BAD_COLLECTION_TYPE",`${r.tag} used for ${l} collection, but expects ${r.collection??"scalar"}`,!0):p(c,"TAG_RESOLVE_FAILED",`Unresolved tag: ${u}`,!0),d(e,t,i,p,u);t.schema.tags.push(Object.assign({},r,{default:!1})),h=r}const m=d(e,t,i,p,u,h),f=h.resolve?.(m,(e=>p(c,"TAG_RESOLVE_FAILED",e)),t.options)??m,y=r.isNode(f)?f:new s.Scalar(f);return y.range=m.range,y.tag=u,h?.format&&(y.format=h.format),y}},24:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(3576)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},28:(e,t,i)=>{var r=i(8051),s=i(9500),o=i(6276);function n(e,t){return e<t?-1:e>t?1:0}e.exports=function(e,t,i,n){var a=s(e,i);return r(e,t,a,(function i(s,o){s?n(s,o):(a.index++,a.index<(a.keyedList||e).length?r(e,t,a,i):n(null,a.results))})),o.bind(a,n)},e.exports.ascending=n,e.exports.descending=function(e,t){return-1*n(e,t)}},32:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=i(7355),s=i(8157);var o=i(8157);function n(e,t,i,o){return(0,s.default)(48,r.default,e,t,i,o)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return o.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return o.URL}}),n.DNS=s.DNS,n.URL=s.URL,t.default=n},56:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.5.0","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')},76:e=>{"use strict";e.exports=Function.prototype.call},81:(e,t,i)=>{"use strict";var r=i(484),s=i(3793),o=i(248);function n({comment:e,items:t},i,{blockItemPrefix:n,flowChars:a,itemIndent:c,onChompKeep:d,onComment:u}){const{indent:l,options:{commentString:h}}=i,m=Object.assign({},i,{indent:c,type:null});let f=!1;const y=[];for(let e=0;e<t.length;++e){const a=t[e];let d=null;if(r.isNode(a))!f&&a.spaceBefore&&y.push(""),p(i,y,a.commentBefore,f),a.comment&&(d=a.comment);else if(r.isPair(a)){const e=r.isNode(a.key)?a.key:null;e&&(!f&&e.spaceBefore&&y.push(""),p(i,y,e.commentBefore,f))}f=!1;let u=s.stringify(a,m,(()=>d=null),(()=>f=!0));d&&(u+=o.lineComment(u,c,h(d))),f&&d&&(f=!1),y.push(n+u)}let g;if(0===y.length)g=a.start+a.end;else{g=y[0];for(let e=1;e<y.length;++e){const t=y[e];g+=t?`\n${l}${t}`:"\n"}}return e?(g+="\n"+o.indentComment(h(e),l),u&&u()):f&&d&&d(),g}function a({items:e},t,{flowChars:i,itemIndent:n}){const{indent:a,indentStep:c,flowCollectionPadding:d,options:{commentString:u}}=t;n+=c;const l=Object.assign({},t,{indent:n,inFlow:!0,type:null});let h=!1,m=0;const f=[];for(let i=0;i<e.length;++i){const a=e[i];let c=null;if(r.isNode(a))a.spaceBefore&&f.push(""),p(t,f,a.commentBefore,!1),a.comment&&(c=a.comment);else if(r.isPair(a)){const e=r.isNode(a.key)?a.key:null;e&&(e.spaceBefore&&f.push(""),p(t,f,e.commentBefore,!1),e.comment&&(h=!0));const i=r.isNode(a.value)?a.value:null;i?(i.comment&&(c=i.comment),i.commentBefore&&(h=!0)):null==a.value&&e?.comment&&(c=e.comment)}c&&(h=!0);let d=s.stringify(a,l,(()=>c=null));i<e.length-1&&(d+=","),c&&(d+=o.lineComment(d,n,u(c))),!h&&(f.length>m||d.includes("\n"))&&(h=!0),f.push(d),m=f.length}const{start:y,end:g}=i;if(0===f.length)return y+g;if(!h){const e=f.reduce(((e,t)=>e+t.length+2),2);h=t.options.lineWidth>0&&e>t.options.lineWidth}if(h){let e=y;for(const t of f)e+=t?`\n${c}${a}${t}`:"\n";return`${e}\n${a}${g}`}return`${y}${d}${f.join(" ")}${d}${g}`}function p({indent:e,options:{commentString:t}},i,r,s){if(r&&s&&(r=r.replace(/^\n+/,"")),r){const s=o.indentComment(t(r),e);i.push(s.trimStart())}}t.stringifyCollection=function(e,t,i){return(t.inFlow??e.flow?a:n)(e,t,i)}},106:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=(0,r(i(3969)).default)("range");t.default=s,e.exports=s},127:(e,t,i)=>{"use strict";var r=i(5388),s=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),o=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new r("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==s.exec(e)||null!==o.exec(e))},construct:function(e){var t,i,r,n,a,p,c,d,u=0,l=null;if(null===(t=s.exec(e))&&(t=o.exec(e)),null===t)throw new Error("Date resolve error");if(i=+t[1],r=+t[2]-1,n=+t[3],!t[4])return new Date(Date.UTC(i,r,n));if(a=+t[4],p=+t[5],c=+t[6],t[7]){for(u=t[7].slice(0,3);u.length<3;)u+="0";u=+u}return t[9]&&(l=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(l=-l)),d=new Date(Date.UTC(i,r,n,a,p,c,u)),l&&d.setTime(d.getTime()-l),d},instanceOf:Date,represent:function(e){return e.toISOString()}})},130:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(8343);r.code='require("ajv/dist/runtime/uri").default',t.default=r},156:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(2654),o={message:({params:{missingPattern:e}})=>r.str`should have property matching pattern '${e}'`,params:({params:{missingPattern:e}})=>r._`{missingPattern: ${e}}`};function n(){return{keyword:"patternRequired",type:"object",schemaType:"array",error:o,code(e){const{gen:t,schema:i,data:o}=e;if(0===i.length)return;const n=t.let("valid",!0);for(const e of i)a(e);function a(i){const a=t.let("matched",!1);t.forIn("key",o,(o=>{t.assign(a,r._`${(0,s.usePattern)(e,i)}.test(${o})`),t.if(a,(()=>t.break()))})),e.setParams({missingPattern:i}),t.assign(n,(0,r.and)(n,a)),e.pass(n)}},metaSchema:{type:"array",items:{type:"string",format:"regex"},uniqueItems:!0}}}t.default=n,e.exports=n},181:e=>{"use strict";e.exports=require("buffer")},187:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o={keyword:"propertyNames",type:"object",schemaType:["object","boolean"],error:{message:"property name must be valid",params:({params:e})=>r._`{propertyName: ${e.propertyName}}`},code(e){const{gen:t,schema:i,data:o,it:n}=e;if((0,s.alwaysValidSchema)(n,i))return;const a=t.name("valid");t.forIn("key",o,(i=>{e.setParams({propertyName:i}),e.subschema({keyword:"propertyNames",data:i,dataTypes:["string"],propertyName:i,compositeRule:!0},a),t.if((0,r.not)(a),(()=>{e.error(!0),n.allErrors||t.break()}))})),e.ok(a)}};t.default=o},248:(e,t)=>{"use strict";function i(e,t){return/^\n+$/.test(e)?e.substring(1):t?e.replace(/^(?! *$)/gm,t):e}t.indentComment=i,t.lineComment=(e,t,r)=>e.endsWith("\n")?i(r,t):r.includes("\n")?"\n"+i(r,t):(e.endsWith(" ")?"":" ")+r,t.stringifyComment=e=>e.replace(/^(?!$)(?: $)?/gm,"#")},263:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getJsonSchemaRefParserDefaultOptions=t.jsonSchemaParserNormalizeArgs=t.dereferenceInternal=t.JSONParserErrorGroup=t.isHandledError=t.UnmatchedParserError=t.ParserError=t.ResolverError=t.MissingPointerError=t.InvalidPointerError=t.JSONParserError=t.UnmatchedResolverError=t.dereference=t.bundle=t.resolve=t.parse=t.$RefParser=void 0;const p=a(i(8801)),c=a(i(7888)),d=a(i(1404));t.jsonSchemaParserNormalizeArgs=d.default;const u=a(i(2131)),l=a(i(8763)),h=a(i(5459));t.dereferenceInternal=h.default;const m=n(i(6385)),f=i(2270);Object.defineProperty(t,"JSONParserError",{enumerable:!0,get:function(){return f.JSONParserError}}),Object.defineProperty(t,"InvalidPointerError",{enumerable:!0,get:function(){return f.InvalidPointerError}}),Object.defineProperty(t,"MissingPointerError",{enumerable:!0,get:function(){return f.MissingPointerError}}),Object.defineProperty(t,"ResolverError",{enumerable:!0,get:function(){return f.ResolverError}}),Object.defineProperty(t,"ParserError",{enumerable:!0,get:function(){return f.ParserError}}),Object.defineProperty(t,"UnmatchedParserError",{enumerable:!0,get:function(){return f.UnmatchedParserError}}),Object.defineProperty(t,"UnmatchedResolverError",{enumerable:!0,get:function(){return f.UnmatchedResolverError}}),Object.defineProperty(t,"isHandledError",{enumerable:!0,get:function(){return f.isHandledError}}),Object.defineProperty(t,"JSONParserErrorGroup",{enumerable:!0,get:function(){return f.JSONParserErrorGroup}});const y=i(7184),g=a(i(552)),x=i(6333);Object.defineProperty(t,"getJsonSchemaRefParserDefaultOptions",{enumerable:!0,get:function(){return x.getJsonSchemaRefParserDefaultOptions}});class b{constructor(){this.schema=null,this.$refs=new p.default}async parse(){const e=(0,d.default)(arguments);let t;if(!e.path&&!e.schema){const t=(0,y.ono)(`Expected a file path, URL, or object. Got ${e.path||e.schema}`);return(0,g.default)(e.callback,Promise.reject(t))}this.schema=null,this.$refs=new p.default;let i="http";if(m.isFileSystemPath(e.path))e.path=m.fromFileSystemPath(e.path),i="file";else if(!e.path&&e.schema&&"$id"in e.schema&&e.schema.$id){const t=m.parse(e.schema.$id),i="https:"===t.protocol?443:80;e.path=`${t.protocol}//${t.hostname}:${i}`}if(e.path=m.resolve(m.cwd(),e.path),e.schema&&"object"==typeof e.schema){const r=this.$refs._add(e.path);r.value=e.schema,r.pathType=i,t=Promise.resolve(e.schema)}else t=(0,c.default)(e.path,this.$refs,e.options);try{const i=await t;if(null===i||"object"!=typeof i||Buffer.isBuffer(i)){if(e.options.continueOnError)return this.schema=null,(0,g.default)(e.callback,Promise.resolve(this.schema));throw y.ono.syntax(`"${this.$refs._root$Ref.path||i}" is not a valid JSON Schema`)}return this.schema=i,(0,g.default)(e.callback,Promise.resolve(this.schema))}catch(t){return e.options.continueOnError&&(0,f.isHandledError)(t)?(this.$refs._$refs[m.stripHash(e.path)]&&this.$refs._$refs[m.stripHash(e.path)].addError(t),(0,g.default)(e.callback,Promise.resolve(null))):(0,g.default)(e.callback,Promise.reject(t))}}static parse(){const e=new b;return e.parse.apply(e,arguments)}async resolve(){const e=(0,d.default)(arguments);try{return await this.parse(e.path,e.schema,e.options),await(0,u.default)(this,e.options),v(this),(0,g.default)(e.callback,Promise.resolve(this.$refs))}catch(t){return(0,g.default)(e.callback,Promise.reject(t))}}static resolve(){const e=new b;return e.resolve.apply(e,arguments)}static bundle(){const e=new b;return e.bundle.apply(e,arguments)}async bundle(){const e=(0,d.default)(arguments);try{return await this.resolve(e.path,e.schema,e.options),(0,l.default)(this,e.options),v(this),(0,g.default)(e.callback,Promise.resolve(this.schema))}catch(t){return(0,g.default)(e.callback,Promise.reject(t))}}static dereference(){const e=new b;return e.dereference.apply(e,arguments)}async dereference(){const e=(0,d.default)(arguments);try{return await this.resolve(e.path,e.schema,e.options),(0,h.default)(this,e.options),v(this),(0,g.default)(e.callback,Promise.resolve(this.schema))}catch(t){return(0,g.default)(e.callback,Promise.reject(t))}}}function v(e){if(f.JSONParserErrorGroup.getParserErrors(e).length>0)throw new f.JSONParserErrorGroup(e)}t.$RefParser=b,t.default=b,t.parse=b.parse,t.resolve=b.resolve,t.bundle=b.bundle,t.dereference=b.dereference},270:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.nullSymbol=void 0;const p=a(i(7906)),c=n(i(6385)),d=i(2270);t.nullSymbol=Symbol("null");const u=/\//g,l=/~/g,h=/~1/g,m=/~0/g,f=e=>{try{return decodeURIComponent(e)}catch{return e}};class y{constructor(e,t,i){this.$ref=e,this.path=t,this.originalPath=i||t,this.value=void 0,this.circular=!1,this.indirections=0}resolve(e,i,r){const s=y.parse(this.path,this.originalPath),o=[];this.value=b(e);for(let e=0;e<s.length;e++){g(this,i,r)&&(this.path=y.join(this.path,s.slice(e)));const n=s[e];if(void 0===this.value[n]||null===this.value[n]&&e===s.length-1){let i=!1;for(let t=s.length-1;t>e;t--){const r=s.slice(e,t+1).join("/");if(void 0!==this.value[r]){this.value=this.value[r],e=t,i=!0;break}}if(i)continue;if(n in this.value&&null===this.value[n]){this.value=t.nullSymbol;continue}this.value=null;const a=this.$ref.path||"",p=this.path.replace(a,""),c=y.join("",o),u=r?.replace(a,"");throw new d.MissingPointerError(n,decodeURI(this.originalPath),p,c,u)}this.value=this.value[n],o.push(n)}return(!this.value||this.value.$ref&&c.resolve(this.path,this.value.$ref)!==r)&&g(this,i,r),this}set(e,t,i){const r=y.parse(this.path);let s;if(0===r.length)return this.value=t,t;this.value=b(e);for(let e=0;e<r.length-1;e++)g(this,i),s=r[e],this.value&&void 0!==this.value[s]?this.value=this.value[s]:this.value=x(this,s,{});return g(this,i),s=r[r.length-1],x(this,s,t),e}static parse(e,t){const i=c.getHash(e).substring(1);if(!i)return[];const r=i.split("/");for(let e=0;e<r.length;e++)r[e]=f(r[e].replace(h,"/").replace(m,"~"));if(""!==r[0])throw new d.InvalidPointerError(i,void 0===t?e:t);return r.slice(1)}static join(e,t){-1===e.indexOf("#")&&(e+="#"),t=Array.isArray(t)?t:[t];for(let i=0;i<t.length;i++){const r=t[i];e+="/"+encodeURIComponent(r.replace(l,"~0").replace(u,"~1"))}return e}}function g(e,t,i){if(p.default.isAllowed$Ref(e.value,t)){const r=c.resolve(e.path,e.value.$ref);if(r!==e.path||function(e){return"string"==typeof e&&0==y.parse(e).length}(i)){const i=e.$ref.$refs._resolve(r,e.path,t);return null!==i&&(e.indirections+=i.indirections+1,p.default.isExtended$Ref(e.value)?(e.value=p.default.dereference(e.value,i.value),!1):(e.$ref=i.$ref,e.path=i.path,e.value=i.value,!0))}e.circular=!0}}function x(e,t,i){if(!e.value||"object"!=typeof e.value)throw new d.JSONParserError(`Error assigning $ref pointer "${e.path}". \nCannot set "${t}" of a non-object.`);return"-"===t&&Array.isArray(e.value)?e.value.push(i):e.value[t]=i,i}function b(e){if((0,d.isHandledError)(e))throw e;return e}t.default=y},343:e=>{"use strict";const t=/^[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}$/iu,i=/([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu;function r(e){return"boolean"==typeof e.secure?e.secure:"wss"===String(e.scheme).toLowerCase()}function s(e){return e.host||(e.error=e.error||"HTTP URIs must have a host."),e}function o(e){const t="https"===String(e.scheme).toLowerCase();return e.port!==(t?443:80)&&""!==e.port||(e.port=void 0),e.path||(e.path="/"),e}const n={scheme:"http",domainHost:!0,parse:s,serialize:o},a={scheme:"ws",domainHost:!0,parse:function(e){return e.secure=r(e),e.resourceName=(e.path||"/")+(e.query?"?"+e.query:""),e.path=void 0,e.query=void 0,e},serialize:function(e){if(e.port!==(r(e)?443:80)&&""!==e.port||(e.port=void 0),"boolean"==typeof e.secure&&(e.scheme=e.secure?"wss":"ws",e.secure=void 0),e.resourceName){const[t,i]=e.resourceName.split("?");e.path=t&&"/"!==t?t:void 0,e.query=i,e.resourceName=void 0}return e.fragment=void 0,e}},p={http:n,https:{scheme:"https",domainHost:n.domainHost,parse:s,serialize:o},ws:a,wss:{scheme:"wss",domainHost:a.domainHost,parse:a.parse,serialize:a.serialize},urn:{scheme:"urn",parse:function(e,t){if(!e.path)return e.error="URN can not be parsed",e;const r=e.path.match(i);if(r){const i=t.scheme||e.scheme||"urn";e.nid=r[1].toLowerCase(),e.nss=r[2];const s=`${i}:${t.nid||e.nid}`,o=p[s];e.path=void 0,o&&(e=o.parse(e,t))}else e.error=e.error||"URN can not be parsed.";return e},serialize:function(e,t){const i=t.scheme||e.scheme||"urn",r=e.nid.toLowerCase(),s=`${i}:${t.nid||r}`,o=p[s];o&&(e=o.serialize(e,t));const n=e,a=e.nss;return n.path=`${r||t.nid}:${a}`,t.skipEscape=!0,n},skipNormalize:!0},"urn:uuid":{scheme:"urn:uuid",parse:function(e,i){const r=e;return r.uuid=r.nss,r.nss=void 0,i.tolerant||r.uuid&&t.test(r.uuid)||(r.error=r.error||"UUID is not valid."),r},serialize:function(e){const t=e;return t.nss=(e.uuid||"").toLowerCase(),t},skipNormalize:!0}};e.exports=p},405:e=>{e.exports=function(e){var t="function"==typeof setImmediate?setImmediate:"object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:null;t?t(e):setTimeout(e,0)}},414:e=>{"use strict";e.exports=Math.round},453:(e,t,i)=>{"use strict";var r,s=i(9612),o=i(9383),n=i(1237),a=i(9290),p=i(9538),c=i(8068),d=i(9675),u=i(5345),l=i(1514),h=i(8968),m=i(6188),f=i(8002),y=i(5880),g=i(414),x=i(3093),b=Function,v=function(e){try{return b('"use strict"; return ('+e+").constructor;")()}catch(e){}},w=i(5795),I=i(655),k=function(){throw new d},P=w?function(){try{return k}catch(e){try{return w(arguments,"callee").get}catch(e){return k}}}():k,j=i(4039)(),A=i(3628),O=i(1064),E=i(8648),S=i(1002),D=i(76),T={},q="undefined"!=typeof Uint8Array&&A?A(Uint8Array):r,C={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?r:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?r:ArrayBuffer,"%ArrayIteratorPrototype%":j&&A?A([][Symbol.iterator]()):r,"%AsyncFromSyncIteratorPrototype%":r,"%AsyncFunction%":T,"%AsyncGenerator%":T,"%AsyncGeneratorFunction%":T,"%AsyncIteratorPrototype%":T,"%Atomics%":"undefined"==typeof Atomics?r:Atomics,"%BigInt%":"undefined"==typeof BigInt?r:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?r:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?r:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?r:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":o,"%eval%":eval,"%EvalError%":n,"%Float16Array%":"undefined"==typeof Float16Array?r:Float16Array,"%Float32Array%":"undefined"==typeof Float32Array?r:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?r:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?r:FinalizationRegistry,"%Function%":b,"%GeneratorFunction%":T,"%Int8Array%":"undefined"==typeof Int8Array?r:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?r:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?r:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":j&&A?A(A([][Symbol.iterator]())):r,"%JSON%":"object"==typeof JSON?JSON:r,"%Map%":"undefined"==typeof Map?r:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&j&&A?A((new Map)[Symbol.iterator]()):r,"%Math%":Math,"%Number%":Number,"%Object%":s,"%Object.getOwnPropertyDescriptor%":w,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?r:Promise,"%Proxy%":"undefined"==typeof Proxy?r:Proxy,"%RangeError%":a,"%ReferenceError%":p,"%Reflect%":"undefined"==typeof Reflect?r:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?r:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&j&&A?A((new Set)[Symbol.iterator]()):r,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?r:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":j&&A?A(""[Symbol.iterator]()):r,"%Symbol%":j?Symbol:r,"%SyntaxError%":c,"%ThrowTypeError%":P,"%TypedArray%":q,"%TypeError%":d,"%Uint8Array%":"undefined"==typeof Uint8Array?r:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?r:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?r:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?r:Uint32Array,"%URIError%":u,"%WeakMap%":"undefined"==typeof WeakMap?r:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?r:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?r:WeakSet,"%Function.prototype.call%":D,"%Function.prototype.apply%":S,"%Object.defineProperty%":I,"%Object.getPrototypeOf%":O,"%Math.abs%":l,"%Math.floor%":h,"%Math.max%":m,"%Math.min%":f,"%Math.pow%":y,"%Math.round%":g,"%Math.sign%":x,"%Reflect.getPrototypeOf%":E};if(A)try{null.error}catch(e){var $=A(A(e));C["%Error.prototype%"]=$}var _=function e(t){var i;if("%AsyncFunction%"===t)i=v("async function () {}");else if("%GeneratorFunction%"===t)i=v("function* () {}");else if("%AsyncGeneratorFunction%"===t)i=v("async function* () {}");else if("%AsyncGenerator%"===t){var r=e("%AsyncGeneratorFunction%");r&&(i=r.prototype)}else if("%AsyncIteratorPrototype%"===t){var s=e("%AsyncGenerator%");s&&A&&(i=A(s.prototype))}return C[t]=i,i},R={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},N=i(6743),U=i(9957),F=N.call(D,Array.prototype.concat),L=N.call(S,Array.prototype.splice),V=N.call(D,String.prototype.replace),M=N.call(D,String.prototype.slice),z=N.call(D,RegExp.prototype.exec),B=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,K=/\\(\\)?/g,H=function(e,t){var i,r=e;if(U(R,r)&&(r="%"+(i=R[r])[0]+"%"),U(C,r)){var s=C[r];if(s===T&&(s=_(r)),void 0===s&&!t)throw new d("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:i,name:r,value:s}}throw new c("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new d("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new d('"allowMissing" argument must be a boolean');if(null===z(/^%?[^%]*%?$/,e))throw new c("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var i=function(e){var t=M(e,0,1),i=M(e,-1);if("%"===t&&"%"!==i)throw new c("invalid intrinsic syntax, expected closing `%`");if("%"===i&&"%"!==t)throw new c("invalid intrinsic syntax, expected opening `%`");var r=[];return V(e,B,(function(e,t,i,s){r[r.length]=i?V(s,K,"$1"):t||e})),r}(e),r=i.length>0?i[0]:"",s=H("%"+r+"%",t),o=s.name,n=s.value,a=!1,p=s.alias;p&&(r=p[0],L(i,F([0,1],p)));for(var u=1,l=!0;u<i.length;u+=1){var h=i[u],m=M(h,0,1),f=M(h,-1);if(('"'===m||"'"===m||"`"===m||'"'===f||"'"===f||"`"===f)&&m!==f)throw new c("property names with quotes must have matching quotes");if("constructor"!==h&&l||(a=!0),U(C,o="%"+(r+="."+h)+"%"))n=C[o];else if(null!=n){if(!(h in n)){if(!t)throw new d("base intrinsic for "+e+" exists, but the property is not available.");return}if(w&&u+1>=i.length){var y=w(n,h);n=(l=!!y)&&"get"in y&&!("originalValue"in y.get)?y.get:n[h]}else l=U(n,h),n=n[h];l&&!a&&(C[o]=n)}}return n}},458:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV1State=void 0;const r=i(9942),s=i(3202),o={};function n(e,t,i){return e.msecs??=-1/0,e.nsecs??=0,t===e.msecs?(e.nsecs++,e.nsecs>=1e4&&(e.node=void 0,e.nsecs=0)):t>e.msecs?e.nsecs=0:t<e.msecs&&(e.node=void 0),e.node||(e.node=i.slice(10,16),e.node[0]|=1,e.clockseq=16383&(i[8]<<8|i[9])),e.msecs=t,e}function a(e,t,i,r,s,o,n=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(o){if(n<0||n+16>o.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`)}else o=new Uint8Array(16),n=0;t??=Date.now(),i??=0,r??=16383&(e[8]<<8|e[9]),s??=e.slice(10,16);const a=(1e4*(268435455&(t+=122192928e5))+i)%4294967296;o[n++]=a>>>24&255,o[n++]=a>>>16&255,o[n++]=a>>>8&255,o[n++]=255&a;const p=t/4294967296*1e4&268435455;o[n++]=p>>>8&255,o[n++]=255&p,o[n++]=p>>>24&15|16,o[n++]=p>>>16&255,o[n++]=r>>>8|128,o[n++]=255&r;for(let e=0;e<6;++e)o[n++]=s[e];return o}t.updateV1State=n,t.default=function(e,t,i){let p;const c=e?._v6??!1;if(e){const t=Object.keys(e);1===t.length&&"_v6"===t[0]&&(e=void 0)}if(e)p=a(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.nsecs,e.clockseq,e.node,t,i);else{const e=Date.now(),s=(0,r.default)();n(o,e,s),p=a(s,o.msecs,o.nsecs,c?void 0:o.clockseq,c?void 0:o.node,t,i)}return t??(0,s.unsafeStringify)(p)}},483:(e,t,i)=>{"use strict";var r=i(6010),s=i(1386),o=i(8644);t.resolveBlockSeq=function({composeNode:e,composeEmptyNode:t},i,n,a,p){const c=new(p?.nodeClass??r.YAMLSeq)(i.schema);i.atRoot&&(i.atRoot=!1),i.atKey&&(i.atKey=!1);let d=n.offset,u=null;for(const{start:r,value:p}of n.items){const l=s.resolveProps(r,{indicator:"seq-item-ind",next:p,offset:d,onError:a,parentIndent:n.indent,startOnNewline:!0});if(!l.found){if(!(l.anchor||l.tag||p)){u=l.end,l.comment&&(c.comment=l.comment);continue}p&&"block-seq"===p.type?a(l.end,"BAD_INDENT","All sequence items must start at the same column"):a(d,"MISSING_CHAR","Sequence item without - indicator")}const h=p?e(i,p,l,a):t(i,l.end,r,null,l,a);i.schema.compat&&o.flowIndentCheck(n.indent,p,a),d=h.range[2],c.items.push(h)}return c.range=[n.offset,d,u??d],c}},484:(e,t)=>{"use strict";const i=Symbol.for("yaml.alias"),r=Symbol.for("yaml.document"),s=Symbol.for("yaml.map"),o=Symbol.for("yaml.pair"),n=Symbol.for("yaml.scalar"),a=Symbol.for("yaml.seq"),p=Symbol.for("yaml.node.type"),c=e=>!!e&&"object"==typeof e&&e[p]===n;function d(e){if(e&&"object"==typeof e)switch(e[p]){case s:case a:return!0}return!1}t.ALIAS=i,t.DOC=r,t.MAP=s,t.NODE_TYPE=p,t.PAIR=o,t.SCALAR=n,t.SEQ=a,t.hasAnchor=e=>(c(e)||d(e))&&!!e.anchor,t.isAlias=e=>!!e&&"object"==typeof e&&e[p]===i,t.isCollection=d,t.isDocument=e=>!!e&&"object"==typeof e&&e[p]===r,t.isMap=e=>!!e&&"object"==typeof e&&e[p]===s,t.isNode=function(e){if(e&&"object"==typeof e)switch(e[p]){case i:case s:case n:case a:return!0}return!1},t.isPair=e=>!!e&&"object"==typeof e&&e[p]===o,t.isScalar=c,t.isSeq=e=>!!e&&"object"==typeof e&&e[p]===a},552:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return e?void t.then((function(t){(0,s.default)((function(){e(null,t)}))}),(function(t){(0,s.default)((function(){e(t)}))})):t};const s=r(i(8335))},613:(e,t,i)=>{"use strict";i.r(t),i.d(t,{createSupportsColor:()=>c,default:()=>d});const r=require("node:process"),s=require("node:os"),o=require("node:tty");function n(e,t=(globalThis.Deno?globalThis.Deno.args:r.argv)){const i=e.startsWith("-")?"":1===e.length?"-":"--",s=t.indexOf(i+e),o=t.indexOf("--");return-1!==s&&(-1===o||s<o)}const{env:a}=r;let p;function c(e,t={}){return 0!==(i=function(e,{streamIsTTY:t,sniffFlags:i=!0}={}){const o=function(){if("FORCE_COLOR"in a)return"true"===a.FORCE_COLOR?1:"false"===a.FORCE_COLOR?0:0===a.FORCE_COLOR.length?1:Math.min(Number.parseInt(a.FORCE_COLOR,10),3)}();void 0!==o&&(p=o);const c=i?p:o;if(0===c)return 0;if(i){if(n("color=16m")||n("color=full")||n("color=truecolor"))return 3;if(n("color=256"))return 2}if("TF_BUILD"in a&&"AGENT_NAME"in a)return 1;if(e&&!t&&void 0===c)return 0;const d=c||0;if("dumb"===a.TERM)return d;if("win32"===r.platform){const e=s.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in a)return"GITHUB_ACTIONS"in a||"GITEA_ACTIONS"in a?3:["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some((e=>e in a))||"codeship"===a.CI_NAME?1:d;if("TEAMCITY_VERSION"in a)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(a.TEAMCITY_VERSION)?1:0;if("truecolor"===a.COLORTERM)return 3;if("xterm-kitty"===a.TERM)return 3;if("TERM_PROGRAM"in a){const e=Number.parseInt((a.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(a.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(a.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(a.TERM)||"COLORTERM"in a?1:d}(e,{streamIsTTY:e&&e.isTTY,...t}))&&{level:i,hasBasic:!0,has256:i>=2,has16m:i>=3};var i}n("no-color")||n("no-colors")||n("color=false")||n("color=never")?p=0:(n("color")||n("colors")||n("color=true")||n("color=always"))&&(p=1);const d={stdout:c({isTTY:o.isatty(1)}),stderr:c({isTTY:o.isatty(2)})}},625:(e,t,i)=>{"use strict";var r=i(484),s=i(3334),o=i(1919),n=i(8531),a=i(975);const p=(e,t)=>e.key<t.key?-1:e.key>t.key?1:0;class c{constructor({compat:e,customTags:t,merge:i,resolveKnownTags:c,schema:d,sortMapEntries:u,toStringDefaults:l}){this.compat=Array.isArray(e)?a.getTags(e,"compat"):e?a.getTags(null,e):null,this.name="string"==typeof d&&d||"core",this.knownTags=c?a.coreKnownTags:{},this.tags=a.getTags(t,this.name,i),this.toStringOptions=l??null,Object.defineProperty(this,r.MAP,{value:s.map}),Object.defineProperty(this,r.SCALAR,{value:n.string}),Object.defineProperty(this,r.SEQ,{value:o.seq}),this.sortMapEntries="function"==typeof u?u:!0===u?p:null}clone(){const e=Object.create(c.prototype,Object.getOwnPropertyDescriptors(this));return e.tags=this.tags.slice(),e}}t.Schema=c},629:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o={keyword:"if",schemaType:["object","boolean"],trackErrors:!0,error:{message:({params:e})=>r.str`must match "${e.ifClause}" schema`,params:({params:e})=>r._`{failingKeyword: ${e.ifClause}}`},code(e){const{gen:t,parentSchema:i,it:o}=e;void 0===i.then&&void 0===i.else&&(0,s.checkStrictMode)(o,'"if" without "then" and "else" is ignored');const a=n(o,"then"),p=n(o,"else");if(!a&&!p)return;const c=t.let("valid",!0),d=t.name("_valid");if(function(){const t=e.subschema({keyword:"if",compositeRule:!0,createErrors:!1,allErrors:!1},d);e.mergeEvaluated(t)}(),e.reset(),a&&p){const i=t.let("ifClause");e.setParams({ifClause:i}),t.if(d,u("then",i),u("else",i))}else a?t.if(d,u("then")):t.if((0,r.not)(d),u("else"));function u(i,s){return()=>{const o=e.subschema({keyword:i},d);t.assign(c,d),e.mergeValidEvaluated(o,c),s?t.assign(s,r._`${i}`):e.setParams({ifClause:i})}}e.pass(c,(()=>e.error(!0)))}};function n(e,t){const i=e.schema[t];return void 0!==i&&!(0,s.alwaysValidSchema)(e,i)}t.default=o},649:(e,t,i)=>{const r=i(9896),s=i(1198),o=i(9329),{URL:n}=i(7016);e.exports={readFile:async function({fileURLOrPath:e}){if(!e)throw new Error("fileURLOrPath is required");if("string"!=typeof e)throw new Error("fileURLOrPath must be a string");if(""===e.trim())throw new Error("fileURLOrPath cannot be an empty string");let t,i=!1;try{const t=new n(e);i="http:"===t.protocol||"https:"===t.protocol}catch(e){}if(i)try{t=(await o.get(e)).data}catch(t){return console.warn(`Error reading remote file from ${e}: ${t.message}`),null}else try{t=await r.promises.readFile(e,"utf8")}catch(t){return"ENOENT"===t.code?console.warn(`File not found: ${e}`):console.warn(`Error reading file: ${t.message}`),null}try{return JSON.parse(t)}catch(e){try{return s.parse(t)}catch(e){return t}}}}},655:e=>{"use strict";var t=Object.defineProperty||!1;if(t)try{t({},"a",{value:1})}catch(e){t=!1}e.exports=t},689:(e,t,i)=>{const r=i(5102);t.schemas=r},692:(e,t,i)=>{"use strict";var r=i(484),s=i(3732),o=i(1755),n=i(6010),a=i(8416);class p extends n.YAMLSeq{constructor(){super(),this.add=o.YAMLMap.prototype.add.bind(this),this.delete=o.YAMLMap.prototype.delete.bind(this),this.get=o.YAMLMap.prototype.get.bind(this),this.has=o.YAMLMap.prototype.has.bind(this),this.set=o.YAMLMap.prototype.set.bind(this),this.tag=p.tag}toJSON(e,t){if(!t)return super.toJSON(e);const i=new Map;t?.onCreate&&t.onCreate(i);for(const e of this.items){let o,n;if(r.isPair(e)?(o=s.toJS(e.key,"",t),n=s.toJS(e.value,o,t)):o=s.toJS(e,"",t),i.has(o))throw new Error("Ordered maps must not include duplicate keys");i.set(o,n)}return i}static from(e,t,i){const r=a.createPairs(e,t,i),s=new this;return s.items=r.items,s}}p.tag="tag:yaml.org,2002:omap";const c={collection:"seq",identify:e=>e instanceof Map,nodeClass:p,default:!1,tag:"tag:yaml.org,2002:omap",resolve(e,t){const i=a.resolvePairs(e,t),s=[];for(const{key:e}of i.items)r.isScalar(e)&&(s.includes(e.value)?t(`Ordered maps must not include duplicate keys: ${e.value}`):s.push(e.value));return Object.assign(new p,i)},createNode:(e,t,i)=>p.from(e,t,i)};t.YAMLOMap=p,t.omap=c},736:(e,t,i)=>{e.exports=function(e){function t(e){let i,s,o,n=null;function a(...e){if(!a.enabled)return;const r=a,s=Number(new Date),o=s-(i||s);r.diff=o,r.prev=i,r.curr=s,i=s,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let n=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((i,s)=>{if("%%"===i)return"%";n++;const o=t.formatters[s];if("function"==typeof o){const t=e[n];i=o.call(r,t),e.splice(n,1),n--}return i})),t.formatArgs.call(r,e),(r.log||t.log).apply(r,e)}return a.namespace=e,a.useColors=t.useColors(),a.color=t.selectColor(e),a.extend=r,a.destroy=t.destroy,Object.defineProperty(a,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==n?n:(s!==t.namespaces&&(s=t.namespaces,o=t.enabled(e)),o),set:e=>{n=e}}),"function"==typeof t.init&&t.init(a),a}function r(e,i){const r=t(this.namespace+(void 0===i?":":i)+e);return r.log=this.log,r}function s(e,t){let i=0,r=0,s=-1,o=0;for(;i<e.length;)if(r<t.length&&(t[r]===e[i]||"*"===t[r]))"*"===t[r]?(s=r,o=i,r++):(i++,r++);else{if(-1===s)return!1;r=s+1,o++,i=o}for(;r<t.length&&"*"===t[r];)r++;return r===t.length}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names,...t.skips.map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){t.save(e),t.namespaces=e,t.names=[],t.skips=[];const i=("string"==typeof e?e:"").trim().replace(/\s+/g,",").split(",").filter(Boolean);for(const e of i)"-"===e[0]?t.skips.push(e.slice(1)):t.names.push(e)},t.enabled=function(e){for(const i of t.skips)if(s(e,i))return!1;for(const i of t.names)if(s(e,i))return!0;return!1},t.humanize=i(6585),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((i=>{t[i]=e[i]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let i=0;for(let t=0;t<e.length;t++)i=(i<<5)-i+e.charCodeAt(t),i|=0;return t.colors[Math.abs(i)%t.colors.length]},t.enable(t.load()),t}},737:(e,t,i)=>{var r=i(801),s=i(9023),o=i(6928),n=i(8611),a=i(5692),p=i(7016).parse,c=i(9896),d=i(2203).Stream,u=i(6466),l=i(1873),h=i(9605),m=i(1362);function f(e){if(!(this instanceof f))return new f(e);for(var t in this._overheadLength=0,this._valueLength=0,this._valuesToMeasure=[],r.call(this),e=e||{})this[t]=e[t]}e.exports=f,s.inherits(f,r),f.LINE_BREAK="\r\n",f.DEFAULT_CONTENT_TYPE="application/octet-stream",f.prototype.append=function(e,t,i){"string"==typeof(i=i||{})&&(i={filename:i});var s=r.prototype.append.bind(this);if("number"==typeof t&&(t=""+t),Array.isArray(t))this._error(new Error("Arrays are not supported."));else{var o=this._multiPartHeader(e,t,i),n=this._multiPartFooter();s(o),s(t),s(n),this._trackLength(o,t,i)}},f.prototype._trackLength=function(e,t,i){var r=0;null!=i.knownLength?r+=+i.knownLength:Buffer.isBuffer(t)?r=t.length:"string"==typeof t&&(r=Buffer.byteLength(t)),this._valueLength+=r,this._overheadLength+=Buffer.byteLength(e)+f.LINE_BREAK.length,t&&(t.path||t.readable&&Object.prototype.hasOwnProperty.call(t,"httpVersion")||t instanceof d)&&(i.knownLength||this._valuesToMeasure.push(t))},f.prototype._lengthRetriever=function(e,t){Object.prototype.hasOwnProperty.call(e,"fd")?null!=e.end&&e.end!=1/0&&null!=e.start?t(null,e.end+1-(e.start?e.start:0)):c.stat(e.path,(function(i,r){var s;i?t(i):(s=r.size-(e.start?e.start:0),t(null,s))})):Object.prototype.hasOwnProperty.call(e,"httpVersion")?t(null,+e.headers["content-length"]):Object.prototype.hasOwnProperty.call(e,"httpModule")?(e.on("response",(function(i){e.pause(),t(null,+i.headers["content-length"])})),e.resume()):t("Unknown stream")},f.prototype._multiPartHeader=function(e,t,i){if("string"==typeof i.header)return i.header;var r,s=this._getContentDisposition(t,i),o=this._getContentType(t,i),n="",a={"Content-Disposition":["form-data",'name="'+e+'"'].concat(s||[]),"Content-Type":[].concat(o||[])};for(var p in"object"==typeof i.header&&m(a,i.header),a)if(Object.prototype.hasOwnProperty.call(a,p)){if(null==(r=a[p]))continue;Array.isArray(r)||(r=[r]),r.length&&(n+=p+": "+r.join("; ")+f.LINE_BREAK)}return"--"+this.getBoundary()+f.LINE_BREAK+n+f.LINE_BREAK},f.prototype._getContentDisposition=function(e,t){var i,r;return"string"==typeof t.filepath?i=o.normalize(t.filepath).replace(/\\/g,"/"):t.filename||e.name||e.path?i=o.basename(t.filename||e.name||e.path):e.readable&&Object.prototype.hasOwnProperty.call(e,"httpVersion")&&(i=o.basename(e.client._httpMessage.path||"")),i&&(r='filename="'+i+'"'),r},f.prototype._getContentType=function(e,t){var i=t.contentType;return!i&&e.name&&(i=u.lookup(e.name)),!i&&e.path&&(i=u.lookup(e.path)),!i&&e.readable&&Object.prototype.hasOwnProperty.call(e,"httpVersion")&&(i=e.headers["content-type"]),i||!t.filepath&&!t.filename||(i=u.lookup(t.filepath||t.filename)),i||"object"!=typeof e||(i=f.DEFAULT_CONTENT_TYPE),i},f.prototype._multiPartFooter=function(){return function(e){var t=f.LINE_BREAK;0===this._streams.length&&(t+=this._lastBoundary()),e(t)}.bind(this)},f.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+f.LINE_BREAK},f.prototype.getHeaders=function(e){var t,i={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(t in e)Object.prototype.hasOwnProperty.call(e,t)&&(i[t.toLowerCase()]=e[t]);return i},f.prototype.setBoundary=function(e){this._boundary=e},f.prototype.getBoundary=function(){return this._boundary||this._generateBoundary(),this._boundary},f.prototype.getBuffer=function(){for(var e=new Buffer.alloc(0),t=this.getBoundary(),i=0,r=this._streams.length;i<r;i++)"function"!=typeof this._streams[i]&&(e=Buffer.isBuffer(this._streams[i])?Buffer.concat([e,this._streams[i]]):Buffer.concat([e,Buffer.from(this._streams[i])]),"string"==typeof this._streams[i]&&this._streams[i].substring(2,t.length+2)===t||(e=Buffer.concat([e,Buffer.from(f.LINE_BREAK)])));return Buffer.concat([e,Buffer.from(this._lastBoundary())])},f.prototype._generateBoundary=function(){for(var e="--------------------------",t=0;t<24;t++)e+=Math.floor(10*Math.random()).toString(16);this._boundary=e},f.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;return this._streams.length&&(e+=this._lastBoundary().length),this.hasKnownLength()||this._error(new Error("Cannot calculate proper length in synchronous way.")),e},f.prototype.hasKnownLength=function(){var e=!0;return this._valuesToMeasure.length&&(e=!1),e},f.prototype.getLength=function(e){var t=this._overheadLength+this._valueLength;this._streams.length&&(t+=this._lastBoundary().length),this._valuesToMeasure.length?l.parallel(this._valuesToMeasure,this._lengthRetriever,(function(i,r){i?e(i):(r.forEach((function(e){t+=e})),e(null,t))})):process.nextTick(e.bind(this,null,t))},f.prototype.submit=function(e,t){var i,r,s={method:"post"};return"string"==typeof e?(e=p(e),r=m({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},s)):(r=m(e,s)).port||(r.port="https:"==r.protocol?443:80),r.headers=this.getHeaders(e.headers),i="https:"==r.protocol?a.request(r):n.request(r),this.getLength(function(e,r){if(e&&"Unknown stream"!==e)this._error(e);else if(r&&i.setHeader("Content-Length",r),this.pipe(i),t){var s,o=function(e,r){return i.removeListener("error",o),i.removeListener("response",s),t.call(this,e,r)};s=o.bind(this,null),i.on("error",o),i.on("response",s)}}.bind(this)),i},f.prototype._error=function(e){this.error||(this.error=e,this.pause(),this.emit("error",e))},f.prototype.toString=function(){return"[object FormData]"},h(f,"FormData")},743:(e,t,i)=>{"use strict";var r=i(8300),s=Object.prototype.hasOwnProperty;e.exports=new r("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,i=e;for(t in i)if(s.call(i,t)&&null!==i[t])return!1;return!0},construct:function(e){return null!==e?e:{}}})},749:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkStrictMode=t.getErrorPath=t.Type=t.useFunc=t.setEvaluated=t.evaluatedPropsToName=t.mergeEvaluated=t.eachItem=t.unescapeJsonPointer=t.escapeJsonPointer=t.escapeFragment=t.unescapeFragment=t.schemaRefOrVal=t.schemaHasRulesButRef=t.schemaHasRules=t.checkUnknownRules=t.alwaysValidSchema=t.toHash=void 0;const r=i(6675),s=i(2958);function o(e,t=e.schema){const{opts:i,self:r}=e;if(!i.strictSchema)return;if("boolean"==typeof t)return;const s=r.RULES.keywords;for(const i in t)s[i]||m(e,`unknown keyword: "${i}"`)}function n(e,t){if("boolean"==typeof e)return!e;for(const i in e)if(t[i])return!0;return!1}function a(e){return"number"==typeof e?`${e}`:e.replace(/~/g,"~0").replace(/\//g,"~1")}function p(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}function c({mergeNames:e,mergeToName:t,mergeValues:i,resultToName:s}){return(o,n,a,p)=>{const c=void 0===a?n:a instanceof r.Name?(n instanceof r.Name?e(o,n,a):t(o,n,a),a):n instanceof r.Name?(t(o,a,n),n):i(n,a);return p!==r.Name||c instanceof r.Name?c:s(o,c)}}function d(e,t){if(!0===t)return e.var("props",!0);const i=e.var("props",r._`{}`);return void 0!==t&&u(e,i,t),i}function u(e,t,i){Object.keys(i).forEach((i=>e.assign(r._`${t}${(0,r.getProperty)(i)}`,!0)))}t.toHash=function(e){const t={};for(const i of e)t[i]=!0;return t},t.alwaysValidSchema=function(e,t){return"boolean"==typeof t?t:0===Object.keys(t).length||(o(e,t),!n(t,e.self.RULES.all))},t.checkUnknownRules=o,t.schemaHasRules=n,t.schemaHasRulesButRef=function(e,t){if("boolean"==typeof e)return!e;for(const i in e)if("$ref"!==i&&t.all[i])return!0;return!1},t.schemaRefOrVal=function({topSchemaRef:e,schemaPath:t},i,s,o){if(!o){if("number"==typeof i||"boolean"==typeof i)return i;if("string"==typeof i)return r._`${i}`}return r._`${e}${t}${(0,r.getProperty)(s)}`},t.unescapeFragment=function(e){return p(decodeURIComponent(e))},t.escapeFragment=function(e){return encodeURIComponent(a(e))},t.escapeJsonPointer=a,t.unescapeJsonPointer=p,t.eachItem=function(e,t){if(Array.isArray(e))for(const i of e)t(i);else t(e)},t.mergeEvaluated={props:c({mergeNames:(e,t,i)=>e.if(r._`${i} !== true && ${t} !== undefined`,(()=>{e.if(r._`${t} === true`,(()=>e.assign(i,!0)),(()=>e.assign(i,r._`${i} || {}`).code(r._`Object.assign(${i}, ${t})`)))})),mergeToName:(e,t,i)=>e.if(r._`${i} !== true`,(()=>{!0===t?e.assign(i,!0):(e.assign(i,r._`${i} || {}`),u(e,i,t))})),mergeValues:(e,t)=>!0===e||{...e,...t},resultToName:d}),items:c({mergeNames:(e,t,i)=>e.if(r._`${i} !== true && ${t} !== undefined`,(()=>e.assign(i,r._`${t} === true ? true : ${i} > ${t} ? ${i} : ${t}`))),mergeToName:(e,t,i)=>e.if(r._`${i} !== true`,(()=>e.assign(i,!0===t||r._`${i} > ${t} ? ${i} : ${t}`))),mergeValues:(e,t)=>!0===e||Math.max(e,t),resultToName:(e,t)=>e.var("items",t)})},t.evaluatedPropsToName=d,t.setEvaluated=u;const l={};var h;function m(e,t,i=e.opts.strictSchema){if(i){if(t=`strict mode: ${t}`,!0===i)throw new Error(t);e.self.logger.warn(t)}}t.useFunc=function(e,t){return e.scopeValue("func",{ref:t,code:l[t.code]||(l[t.code]=new s._Code(t.code))})},function(e){e[e.Num=0]="Num",e[e.Str=1]="Str"}(h||(t.Type=h={})),t.getErrorPath=function(e,t,i){if(e instanceof r.Name){const s=t===h.Num;return i?s?r._`"[" + ${e} + "]"`:r._`"['" + ${e} + "']"`:s?r._`"/" + ${e}`:r._`"/" + ${e}.replace(/~/g, "~0").replace(/\\//g, "~1")`}return i?(0,r.getProperty)(e).toString():"/"+a(e)},t.checkStrictMode=m},801:(e,t,i)=>{var r=i(9023),s=i(2203).Stream,o=i(8069);function n(){this.writable=!1,this.readable=!0,this.dataSize=0,this.maxDataSize=2097152,this.pauseStreams=!0,this._released=!1,this._streams=[],this._currentStream=null,this._insideLoop=!1,this._pendingNext=!1}e.exports=n,r.inherits(n,s),n.create=function(e){var t=new this;for(var i in e=e||{})t[i]=e[i];return t},n.isStreamLike=function(e){return"function"!=typeof e&&"string"!=typeof e&&"boolean"!=typeof e&&"number"!=typeof e&&!Buffer.isBuffer(e)},n.prototype.append=function(e){if(n.isStreamLike(e)){if(!(e instanceof o)){var t=o.create(e,{maxDataSize:1/0,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this)),e=t}this._handleErrors(e),this.pauseStreams&&e.pause()}return this._streams.push(e),this},n.prototype.pipe=function(e,t){return s.prototype.pipe.call(this,e,t),this.resume(),e},n.prototype._getNext=function(){if(this._currentStream=null,this._insideLoop)this._pendingNext=!0;else{this._insideLoop=!0;try{do{this._pendingNext=!1,this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=!1}}},n.prototype._realGetNext=function(){var e=this._streams.shift();void 0!==e?"function"==typeof e?e(function(e){n.isStreamLike(e)&&(e.on("data",this._checkDataSize.bind(this)),this._handleErrors(e)),this._pipeNext(e)}.bind(this)):this._pipeNext(e):this.end()},n.prototype._pipeNext=function(e){if(this._currentStream=e,n.isStreamLike(e))return e.on("end",this._getNext.bind(this)),void e.pipe(this,{end:!1});var t=e;this.write(t),this._getNext()},n.prototype._handleErrors=function(e){var t=this;e.on("error",(function(e){t._emitError(e)}))},n.prototype.write=function(e){this.emit("data",e)},n.prototype.pause=function(){this.pauseStreams&&(this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.pause&&this._currentStream.pause(),this.emit("pause"))},n.prototype.resume=function(){this._released||(this._released=!0,this.writable=!0,this._getNext()),this.pauseStreams&&this._currentStream&&"function"==typeof this._currentStream.resume&&this._currentStream.resume(),this.emit("resume")},n.prototype.end=function(){this._reset(),this.emit("end")},n.prototype.destroy=function(){this._reset(),this.emit("close")},n.prototype._reset=function(){this.writable=!1,this._streams=[],this._currentStream=null},n.prototype._checkDataSize=function(){if(this._updateDataSize(),!(this.dataSize<=this.maxDataSize)){var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))}},n.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(t){t.dataSize&&(e.dataSize+=t.dataSize)})),this._currentStream&&this._currentStream.dataSize&&(this.dataSize+=this._currentStream.dataSize)},n.prototype._emitError=function(e){this._reset(),this.emit("error",e)}},857:e=>{"use strict";e.exports=require("os")},868:(e,t,i)=>{"use strict";var r=i(9154);class s{static get version(){return"1.4.0"}static toString(){return"JavaScript Expression Parser (JSEP) v"+s.version}static addUnaryOp(e){return s.max_unop_len=Math.max(e.length,s.max_unop_len),s.unary_ops[e]=1,s}static addBinaryOp(e,t,i){return s.max_binop_len=Math.max(e.length,s.max_binop_len),s.binary_ops[e]=t,i?s.right_associative.add(e):s.right_associative.delete(e),s}static addIdentifierChar(e){return s.additional_identifier_chars.add(e),s}static addLiteral(e,t){return s.literals[e]=t,s}static removeUnaryOp(e){return delete s.unary_ops[e],e.length===s.max_unop_len&&(s.max_unop_len=s.getMaxKeyLen(s.unary_ops)),s}static removeAllUnaryOps(){return s.unary_ops={},s.max_unop_len=0,s}static removeIdentifierChar(e){return s.additional_identifier_chars.delete(e),s}static removeBinaryOp(e){return delete s.binary_ops[e],e.length===s.max_binop_len&&(s.max_binop_len=s.getMaxKeyLen(s.binary_ops)),s.right_associative.delete(e),s}static removeAllBinaryOps(){return s.binary_ops={},s.max_binop_len=0,s}static removeLiteral(e){return delete s.literals[e],s}static removeAllLiterals(){return s.literals={},s}get char(){return this.expr.charAt(this.index)}get code(){return this.expr.charCodeAt(this.index)}constructor(e){this.expr=e,this.index=0}static parse(e){return new s(e).parse()}static getMaxKeyLen(e){return Math.max(0,...Object.keys(e).map((e=>e.length)))}static isDecimalDigit(e){return e>=48&&e<=57}static binaryPrecedence(e){return s.binary_ops[e]||0}static isIdentifierStart(e){return e>=65&&e<=90||e>=97&&e<=122||e>=128&&!s.binary_ops[String.fromCharCode(e)]||s.additional_identifier_chars.has(String.fromCharCode(e))}static isIdentifierPart(e){return s.isIdentifierStart(e)||s.isDecimalDigit(e)}throwError(e){const t=new Error(e+" at character "+this.index);throw t.index=this.index,t.description=e,t}runHook(e,t){if(s.hooks[e]){const i={context:this,node:t};return s.hooks.run(e,i),i.node}return t}searchHook(e){if(s.hooks[e]){const t={context:this};return s.hooks[e].find((function(e){return e.call(t.context,t),t.node})),t.node}}gobbleSpaces(){let e=this.code;for(;e===s.SPACE_CODE||e===s.TAB_CODE||e===s.LF_CODE||e===s.CR_CODE;)e=this.expr.charCodeAt(++this.index);this.runHook("gobble-spaces")}parse(){this.runHook("before-all");const e=this.gobbleExpressions(),t=1===e.length?e[0]:{type:s.COMPOUND,body:e};return this.runHook("after-all",t)}gobbleExpressions(e){let t,i,r=[];for(;this.index<this.expr.length;)if(t=this.code,t===s.SEMCOL_CODE||t===s.COMMA_CODE)this.index++;else if(i=this.gobbleExpression())r.push(i);else if(this.index<this.expr.length){if(t===e)break;this.throwError('Unexpected "'+this.char+'"')}return r}gobbleExpression(){const e=this.searchHook("gobble-expression")||this.gobbleBinaryExpression();return this.gobbleSpaces(),this.runHook("after-expression",e)}gobbleBinaryOp(){this.gobbleSpaces();let e=this.expr.substr(this.index,s.max_binop_len),t=e.length;for(;t>0;){if(s.binary_ops.hasOwnProperty(e)&&(!s.isIdentifierStart(this.code)||this.index+e.length<this.expr.length&&!s.isIdentifierPart(this.expr.charCodeAt(this.index+e.length))))return this.index+=t,e;e=e.substr(0,--t)}return!1}gobbleBinaryExpression(){let e,t,i,r,o,n,a,p,c;if(n=this.gobbleToken(),!n)return n;if(t=this.gobbleBinaryOp(),!t)return n;for(o={value:t,prec:s.binaryPrecedence(t),right_a:s.right_associative.has(t)},a=this.gobbleToken(),a||this.throwError("Expected expression after "+t),r=[n,o,a];t=this.gobbleBinaryOp();){if(i=s.binaryPrecedence(t),0===i){this.index-=t.length;break}o={value:t,prec:i,right_a:s.right_associative.has(t)},c=t;const p=e=>o.right_a&&e.right_a?i>e.prec:i<=e.prec;for(;r.length>2&&p(r[r.length-2]);)a=r.pop(),t=r.pop().value,n=r.pop(),e={type:s.BINARY_EXP,operator:t,left:n,right:a},r.push(e);e=this.gobbleToken(),e||this.throwError("Expected expression after "+c),r.push(o,e)}for(p=r.length-1,e=r[p];p>1;)e={type:s.BINARY_EXP,operator:r[p-1].value,left:r[p-2],right:e},p-=2;return e}gobbleToken(){let e,t,i,r;if(this.gobbleSpaces(),r=this.searchHook("gobble-token"),r)return this.runHook("after-token",r);if(e=this.code,s.isDecimalDigit(e)||e===s.PERIOD_CODE)return this.gobbleNumericLiteral();if(e===s.SQUOTE_CODE||e===s.DQUOTE_CODE)r=this.gobbleStringLiteral();else if(e===s.OBRACK_CODE)r=this.gobbleArray();else{for(t=this.expr.substr(this.index,s.max_unop_len),i=t.length;i>0;){if(s.unary_ops.hasOwnProperty(t)&&(!s.isIdentifierStart(this.code)||this.index+t.length<this.expr.length&&!s.isIdentifierPart(this.expr.charCodeAt(this.index+t.length)))){this.index+=i;const e=this.gobbleToken();return e||this.throwError("missing unaryOp argument"),this.runHook("after-token",{type:s.UNARY_EXP,operator:t,argument:e,prefix:!0})}t=t.substr(0,--i)}s.isIdentifierStart(e)?(r=this.gobbleIdentifier(),s.literals.hasOwnProperty(r.name)?r={type:s.LITERAL,value:s.literals[r.name],raw:r.name}:r.name===s.this_str&&(r={type:s.THIS_EXP})):e===s.OPAREN_CODE&&(r=this.gobbleGroup())}return r?(r=this.gobbleTokenProperty(r),this.runHook("after-token",r)):this.runHook("after-token",!1)}gobbleTokenProperty(e){this.gobbleSpaces();let t=this.code;for(;t===s.PERIOD_CODE||t===s.OBRACK_CODE||t===s.OPAREN_CODE||t===s.QUMARK_CODE;){let i;if(t===s.QUMARK_CODE){if(this.expr.charCodeAt(this.index+1)!==s.PERIOD_CODE)break;i=!0,this.index+=2,this.gobbleSpaces(),t=this.code}this.index++,t===s.OBRACK_CODE?((e={type:s.MEMBER_EXP,computed:!0,object:e,property:this.gobbleExpression()}).property||this.throwError('Unexpected "'+this.char+'"'),this.gobbleSpaces(),t=this.code,t!==s.CBRACK_CODE&&this.throwError("Unclosed ["),this.index++):t===s.OPAREN_CODE?e={type:s.CALL_EXP,arguments:this.gobbleArguments(s.CPAREN_CODE),callee:e}:(t===s.PERIOD_CODE||i)&&(i&&this.index--,this.gobbleSpaces(),e={type:s.MEMBER_EXP,computed:!1,object:e,property:this.gobbleIdentifier()}),i&&(e.optional=!0),this.gobbleSpaces(),t=this.code}return e}gobbleNumericLiteral(){let e,t,i="";for(;s.isDecimalDigit(this.code);)i+=this.expr.charAt(this.index++);if(this.code===s.PERIOD_CODE)for(i+=this.expr.charAt(this.index++);s.isDecimalDigit(this.code);)i+=this.expr.charAt(this.index++);if(e=this.char,"e"===e||"E"===e){for(i+=this.expr.charAt(this.index++),e=this.char,"+"!==e&&"-"!==e||(i+=this.expr.charAt(this.index++));s.isDecimalDigit(this.code);)i+=this.expr.charAt(this.index++);s.isDecimalDigit(this.expr.charCodeAt(this.index-1))||this.throwError("Expected exponent ("+i+this.char+")")}return t=this.code,s.isIdentifierStart(t)?this.throwError("Variable names cannot start with a number ("+i+this.char+")"):(t===s.PERIOD_CODE||1===i.length&&i.charCodeAt(0)===s.PERIOD_CODE)&&this.throwError("Unexpected period"),{type:s.LITERAL,value:parseFloat(i),raw:i}}gobbleStringLiteral(){let e="";const t=this.index,i=this.expr.charAt(this.index++);let r=!1;for(;this.index<this.expr.length;){let t=this.expr.charAt(this.index++);if(t===i){r=!0;break}if("\\"===t)switch(t=this.expr.charAt(this.index++),t){case"n":e+="\n";break;case"r":e+="\r";break;case"t":e+="\t";break;case"b":e+="\b";break;case"f":e+="\f";break;case"v":e+="\v";break;default:e+=t}else e+=t}return r||this.throwError('Unclosed quote after "'+e+'"'),{type:s.LITERAL,value:e,raw:this.expr.substring(t,this.index)}}gobbleIdentifier(){let e=this.code,t=this.index;for(s.isIdentifierStart(e)?this.index++:this.throwError("Unexpected "+this.char);this.index<this.expr.length&&(e=this.code,s.isIdentifierPart(e));)this.index++;return{type:s.IDENTIFIER,name:this.expr.slice(t,this.index)}}gobbleArguments(e){const t=[];let i=!1,r=0;for(;this.index<this.expr.length;){this.gobbleSpaces();let o=this.code;if(o===e){i=!0,this.index++,e===s.CPAREN_CODE&&r&&r>=t.length&&this.throwError("Unexpected token "+String.fromCharCode(e));break}if(o===s.COMMA_CODE){if(this.index++,r++,r!==t.length)if(e===s.CPAREN_CODE)this.throwError("Unexpected token ,");else if(e===s.CBRACK_CODE)for(let e=t.length;e<r;e++)t.push(null)}else if(t.length!==r&&0!==r)this.throwError("Expected comma");else{const e=this.gobbleExpression();e&&e.type!==s.COMPOUND||this.throwError("Expected comma"),t.push(e)}}return i||this.throwError("Expected "+String.fromCharCode(e)),t}gobbleGroup(){this.index++;let e=this.gobbleExpressions(s.CPAREN_CODE);if(this.code===s.CPAREN_CODE)return this.index++,1===e.length?e[0]:!!e.length&&{type:s.SEQUENCE_EXP,expressions:e};this.throwError("Unclosed (")}gobbleArray(){return this.index++,{type:s.ARRAY_EXP,elements:this.gobbleArguments(s.CBRACK_CODE)}}}const o=new class{add(e,t,i){if("string"!=typeof arguments[0])for(let e in arguments[0])this.add(e,arguments[0][e],arguments[1]);else(Array.isArray(e)?e:[e]).forEach((function(e){this[e]=this[e]||[],t&&this[e][i?"unshift":"push"](t)}),this)}run(e,t){this[e]=this[e]||[],this[e].forEach((function(e){e.call(t&&t.context?t.context:t,t)}))}};Object.assign(s,{hooks:o,plugins:new class{constructor(e){this.jsep=e,this.registered={}}register(...e){e.forEach((e=>{if("object"!=typeof e||!e.name||!e.init)throw new Error("Invalid JSEP plugin format");this.registered[e.name]||(e.init(this.jsep),this.registered[e.name]=e)}))}}(s),COMPOUND:"Compound",SEQUENCE_EXP:"SequenceExpression",IDENTIFIER:"Identifier",MEMBER_EXP:"MemberExpression",LITERAL:"Literal",THIS_EXP:"ThisExpression",CALL_EXP:"CallExpression",UNARY_EXP:"UnaryExpression",BINARY_EXP:"BinaryExpression",ARRAY_EXP:"ArrayExpression",TAB_CODE:9,LF_CODE:10,CR_CODE:13,SPACE_CODE:32,PERIOD_CODE:46,COMMA_CODE:44,SQUOTE_CODE:39,DQUOTE_CODE:34,OPAREN_CODE:40,CPAREN_CODE:41,OBRACK_CODE:91,CBRACK_CODE:93,QUMARK_CODE:63,SEMCOL_CODE:59,COLON_CODE:58,unary_ops:{"-":1,"!":1,"~":1,"+":1},binary_ops:{"||":1,"??":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":10,"/":10,"%":10,"**":11},right_associative:new Set(["**"]),additional_identifier_chars:new Set(["$","_"]),literals:{true:!0,false:!1,null:null},this_str:"this"}),s.max_unop_len=s.getMaxKeyLen(s.unary_ops),s.max_binop_len=s.getMaxKeyLen(s.binary_ops);const n=e=>new s(e).parse(),a=Object.getOwnPropertyNames(class{});Object.getOwnPropertyNames(s).filter((e=>!a.includes(e)&&void 0===n[e])).forEach((e=>{n[e]=s[e]})),n.Jsep=s;var p={name:"ternary",init(e){e.hooks.add("after-expression",(function(t){if(t.node&&this.code===e.QUMARK_CODE){this.index++;const i=t.node,r=this.gobbleExpression();if(r||this.throwError("Expected expression"),this.gobbleSpaces(),this.code===e.COLON_CODE){this.index++;const s=this.gobbleExpression();if(s||this.throwError("Expected expression"),t.node={type:"ConditionalExpression",test:i,consequent:r,alternate:s},i.operator&&e.binary_ops[i.operator]<=.9){let r=i;for(;r.right.operator&&e.binary_ops[r.right.operator]<=.9;)r=r.right;t.node.test=r.right,r.right=t.node,t.node=i}}else this.throwError("Expected :")}}))}};n.plugins.register(p);var c={name:"regex",init(e){e.hooks.add("gobble-token",(function(t){if(47===this.code){const i=++this.index;let r=!1;for(;this.index<this.expr.length;){if(47===this.code&&!r){const r=this.expr.slice(i,this.index);let s,o="";for(;++this.index<this.expr.length;){const e=this.code;if(!(e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57))break;o+=this.char}try{s=new RegExp(r,o)}catch(e){this.throwError(e.message)}return t.node={type:e.LITERAL,value:s,raw:this.expr.slice(i-1,this.index)},t.node=this.gobbleTokenProperty(t.node),t.node}this.code===e.OBRACK_CODE?r=!0:r&&this.code===e.CBRACK_CODE&&(r=!1),this.index+=92===this.code?2:1}this.throwError("Unclosed Regex")}}))}};const d={name:"assignment",assignmentOperators:new Set(["=","*=","**=","/=","%=","+=","-=","<<=",">>=",">>>=","&=","^=","|=","||=","&&=","??="]),updateOperators:[43,45],assignmentPrecedence:.9,init(e){const t=[e.IDENTIFIER,e.MEMBER_EXP];function i(e){d.assignmentOperators.has(e.operator)?(e.type="AssignmentExpression",i(e.left),i(e.right)):e.operator||Object.values(e).forEach((e=>{e&&"object"==typeof e&&i(e)}))}d.assignmentOperators.forEach((t=>e.addBinaryOp(t,d.assignmentPrecedence,!0))),e.hooks.add("gobble-token",(function(e){const i=this.code;d.updateOperators.some((e=>e===i&&e===this.expr.charCodeAt(this.index+1)))&&(this.index+=2,e.node={type:"UpdateExpression",operator:43===i?"++":"--",argument:this.gobbleTokenProperty(this.gobbleIdentifier()),prefix:!0},e.node.argument&&t.includes(e.node.argument.type)||this.throwError(`Unexpected ${e.node.operator}`))})),e.hooks.add("after-token",(function(e){if(e.node){const i=this.code;d.updateOperators.some((e=>e===i&&e===this.expr.charCodeAt(this.index+1)))&&(t.includes(e.node.type)||this.throwError(`Unexpected ${e.node.operator}`),this.index+=2,e.node={type:"UpdateExpression",operator:43===i?"++":"--",argument:e.node,prefix:!1})}})),e.hooks.add("after-expression",(function(e){e.node&&i(e.node)}))}};n.plugins.register(c,d),n.addUnaryOp("typeof"),n.addLiteral("null",null),n.addLiteral("undefined",void 0);const u=new Set(["constructor","__proto__","__defineGetter__","__defineSetter__"]),l={evalAst(e,t){switch(e.type){case"BinaryExpression":case"LogicalExpression":return l.evalBinaryExpression(e,t);case"Compound":return l.evalCompound(e,t);case"ConditionalExpression":return l.evalConditionalExpression(e,t);case"Identifier":return l.evalIdentifier(e,t);case"Literal":return l.evalLiteral(e,t);case"MemberExpression":return l.evalMemberExpression(e,t);case"UnaryExpression":return l.evalUnaryExpression(e,t);case"ArrayExpression":return l.evalArrayExpression(e,t);case"CallExpression":return l.evalCallExpression(e,t);case"AssignmentExpression":return l.evalAssignmentExpression(e,t);default:throw SyntaxError("Unexpected expression",e)}},evalBinaryExpression:(e,t)=>({"||":(e,t)=>e||t(),"&&":(e,t)=>e&&t(),"|":(e,t)=>e|t(),"^":(e,t)=>e^t(),"&":(e,t)=>e&t(),"==":(e,t)=>e==t(),"!=":(e,t)=>e!=t(),"===":(e,t)=>e===t(),"!==":(e,t)=>e!==t(),"<":(e,t)=>e<t(),">":(e,t)=>e>t(),"<=":(e,t)=>e<=t(),">=":(e,t)=>e>=t(),"<<":(e,t)=>e<<t(),">>":(e,t)=>e>>t(),">>>":(e,t)=>e>>>t(),"+":(e,t)=>e+t(),"-":(e,t)=>e-t(),"*":(e,t)=>e*t(),"/":(e,t)=>e/t(),"%":(e,t)=>e%t()}[e.operator](l.evalAst(e.left,t),(()=>l.evalAst(e.right,t)))),evalCompound(e,t){let i;for(let r=0;r<e.body.length;r++){"Identifier"===e.body[r].type&&["var","let","const"].includes(e.body[r].name)&&e.body[r+1]&&"AssignmentExpression"===e.body[r+1].type&&(r+=1);const s=e.body[r];i=l.evalAst(s,t)}return i},evalConditionalExpression:(e,t)=>l.evalAst(e.test,t)?l.evalAst(e.consequent,t):l.evalAst(e.alternate,t),evalIdentifier(e,t){if(Object.hasOwn(t,e.name))return t[e.name];throw ReferenceError(`${e.name} is not defined`)},evalLiteral:e=>e.value,evalMemberExpression(e,t){const i=String(e.computed?l.evalAst(e.property):e.property.name),r=l.evalAst(e.object,t);if(null==r)throw TypeError(`Cannot read properties of ${r} (reading '${i}')`);if(!Object.hasOwn(r,i)&&u.has(i))throw TypeError(`Cannot read properties of ${r} (reading '${i}')`);const s=r[i];return"function"==typeof s?s.bind(r):s},evalUnaryExpression:(e,t)=>({"-":e=>-l.evalAst(e,t),"!":e=>!l.evalAst(e,t),"~":e=>~l.evalAst(e,t),"+":e=>+l.evalAst(e,t),typeof:e=>typeof l.evalAst(e,t)}[e.operator](e.argument)),evalArrayExpression:(e,t)=>e.elements.map((e=>l.evalAst(e,t))),evalCallExpression(e,t){const i=e.arguments.map((e=>l.evalAst(e,t)));return l.evalAst(e.callee,t)(...i)},evalAssignmentExpression(e,t){if("Identifier"!==e.left.type)throw SyntaxError("Invalid left-hand side in assignment");const i=e.left.name,r=l.evalAst(e.right,t);return t[i]=r,t[i]}};function h(e,t){return(e=e.slice()).push(t),e}function m(e,t){return(t=t.slice()).unshift(e),t}class f extends Error{constructor(e){super('JSONPath should not be called with "new" (it prevents return of (unwrapped) scalar values)'),this.avoidNew=!0,this.value=e,this.name="NewError"}}function y(e,t,i,r,s){if(!(this instanceof y))try{return new y(e,t,i,r,s)}catch(e){if(!e.avoidNew)throw e;return e.value}"string"==typeof e&&(s=r,r=i,i=t,t=e,e=null);const o=e&&"object"==typeof e;if(e=e||{},this.json=e.json||i,this.path=e.path||t,this.resultType=e.resultType||"value",this.flatten=e.flatten||!1,this.wrap=!Object.hasOwn(e,"wrap")||e.wrap,this.sandbox=e.sandbox||{},this.eval=void 0===e.eval?"safe":e.eval,this.ignoreEvalErrors=void 0!==e.ignoreEvalErrors&&e.ignoreEvalErrors,this.parent=e.parent||null,this.parentProperty=e.parentProperty||null,this.callback=e.callback||r||null,this.otherTypeCallback=e.otherTypeCallback||s||function(){throw new TypeError("You must supply an otherTypeCallback callback option with the @other() operator.")},!1!==e.autostart){const r={path:o?e.path:t};o?"json"in e&&(r.json=e.json):r.json=i;const s=this.evaluate(r);if(!s||"object"!=typeof s)throw new f(s);return s}}y.prototype.evaluate=function(e,t,i,r){let s=this.parent,o=this.parentProperty,{flatten:n,wrap:a}=this;if(this.currResultType=this.resultType,this.currEval=this.eval,this.currSandbox=this.sandbox,i=i||this.callback,this.currOtherTypeCallback=r||this.otherTypeCallback,t=t||this.json,(e=e||this.path)&&"object"==typeof e&&!Array.isArray(e)){if(!e.path&&""!==e.path)throw new TypeError('You must supply a "path" property when providing an object argument to JSONPath.evaluate().');if(!Object.hasOwn(e,"json"))throw new TypeError('You must supply a "json" property when providing an object argument to JSONPath.evaluate().');({json:t}=e),n=Object.hasOwn(e,"flatten")?e.flatten:n,this.currResultType=Object.hasOwn(e,"resultType")?e.resultType:this.currResultType,this.currSandbox=Object.hasOwn(e,"sandbox")?e.sandbox:this.currSandbox,a=Object.hasOwn(e,"wrap")?e.wrap:a,this.currEval=Object.hasOwn(e,"eval")?e.eval:this.currEval,i=Object.hasOwn(e,"callback")?e.callback:i,this.currOtherTypeCallback=Object.hasOwn(e,"otherTypeCallback")?e.otherTypeCallback:this.currOtherTypeCallback,s=Object.hasOwn(e,"parent")?e.parent:s,o=Object.hasOwn(e,"parentProperty")?e.parentProperty:o,e=e.path}if(s=s||null,o=o||null,Array.isArray(e)&&(e=y.toPathString(e)),!e&&""!==e||!t)return;const p=y.toPathArray(e);"$"===p[0]&&p.length>1&&p.shift(),this._hasParentSelector=null;const c=this._trace(p,t,["$"],s,o,i).filter((function(e){return e&&!e.isParentSelector}));return c.length?a||1!==c.length||c[0].hasArrExpr?c.reduce(((e,t)=>{const i=this._getPreferredOutput(t);return n&&Array.isArray(i)?e=e.concat(i):e.push(i),e}),[]):this._getPreferredOutput(c[0]):a?[]:void 0},y.prototype._getPreferredOutput=function(e){const t=this.currResultType;switch(t){case"all":{const t=Array.isArray(e.path)?e.path:y.toPathArray(e.path);return e.pointer=y.toPointer(t),e.path="string"==typeof e.path?e.path:y.toPathString(e.path),e}case"value":case"parent":case"parentProperty":return e[t];case"path":return y.toPathString(e[t]);case"pointer":return y.toPointer(e.path);default:throw new TypeError("Unknown result type")}},y.prototype._handleCallback=function(e,t,i){if(t){const r=this._getPreferredOutput(e);e.path="string"==typeof e.path?e.path:y.toPathString(e.path),t(r,i,e)}},y.prototype._trace=function(e,t,i,r,s,o,n,a){let p;if(!e.length)return p={path:i,value:t,parent:r,parentProperty:s,hasArrExpr:n},this._handleCallback(p,o,"value"),p;const c=e[0],d=e.slice(1),u=[];function l(e){Array.isArray(e)?e.forEach((e=>{u.push(e)})):u.push(e)}if(("string"!=typeof c||a)&&t&&Object.hasOwn(t,c))l(this._trace(d,t[c],h(i,c),t,c,o,n));else if("*"===c)this._walk(t,(e=>{l(this._trace(d,t[e],h(i,e),t,e,o,!0,!0))}));else if(".."===c)l(this._trace(d,t,i,r,s,o,n)),this._walk(t,(r=>{"object"==typeof t[r]&&l(this._trace(e.slice(),t[r],h(i,r),t,r,o,!0))}));else{if("^"===c)return this._hasParentSelector=!0,{path:i.slice(0,-1),expr:d,isParentSelector:!0};if("~"===c)return p={path:h(i,c),value:s,parent:r,parentProperty:null},this._handleCallback(p,o,"property"),p;if("$"===c)l(this._trace(d,t,i,null,null,o,n));else if(/^(-?\d*):(-?\d*):?(\d*)$/u.test(c))l(this._slice(c,d,t,i,r,s,o));else if(0===c.indexOf("?(")){if(!1===this.currEval)throw new Error("Eval [?(expr)] prevented in JSONPath expression.");const e=c.replace(/^\?\((.*?)\)$/u,"$1"),n=/@.?([^?]*)[['](\??\(.*?\))(?!.\)\])[\]']/gu.exec(e);n?this._walk(t,(e=>{const a=[n[2]],p=n[1]?t[e][n[1]]:t[e];this._trace(a,p,i,r,s,o,!0).length>0&&l(this._trace(d,t[e],h(i,e),t,e,o,!0))})):this._walk(t,(n=>{this._eval(e,t[n],n,i,r,s)&&l(this._trace(d,t[n],h(i,n),t,n,o,!0))}))}else if("("===c[0]){if(!1===this.currEval)throw new Error("Eval [(expr)] prevented in JSONPath expression.");l(this._trace(m(this._eval(c,t,i.at(-1),i.slice(0,-1),r,s),d),t,i,r,s,o,n))}else if("@"===c[0]){let e=!1;const n=c.slice(1,-2);switch(n){case"scalar":t&&["object","function"].includes(typeof t)||(e=!0);break;case"boolean":case"string":case"undefined":case"function":typeof t===n&&(e=!0);break;case"integer":!Number.isFinite(t)||t%1||(e=!0);break;case"number":Number.isFinite(t)&&(e=!0);break;case"nonFinite":"number"!=typeof t||Number.isFinite(t)||(e=!0);break;case"object":t&&typeof t===n&&(e=!0);break;case"array":Array.isArray(t)&&(e=!0);break;case"other":e=this.currOtherTypeCallback(t,i,r,s);break;case"null":null===t&&(e=!0);break;default:throw new TypeError("Unknown value type "+n)}if(e)return p={path:i,value:t,parent:r,parentProperty:s},this._handleCallback(p,o,"value"),p}else if("`"===c[0]&&t&&Object.hasOwn(t,c.slice(1))){const e=c.slice(1);l(this._trace(d,t[e],h(i,e),t,e,o,n,!0))}else if(c.includes(",")){const e=c.split(",");for(const n of e)l(this._trace(m(n,d),t,i,r,s,o,!0))}else!a&&t&&Object.hasOwn(t,c)&&l(this._trace(d,t[c],h(i,c),t,c,o,n,!0))}if(this._hasParentSelector)for(let e=0;e<u.length;e++){const i=u[e];if(i&&i.isParentSelector){const a=this._trace(i.expr,t,i.path,r,s,o,n);if(Array.isArray(a)){u[e]=a[0];const t=a.length;for(let i=1;i<t;i++)e++,u.splice(e,0,a[i])}else u[e]=a}}return u},y.prototype._walk=function(e,t){if(Array.isArray(e)){const i=e.length;for(let e=0;e<i;e++)t(e)}else e&&"object"==typeof e&&Object.keys(e).forEach((e=>{t(e)}))},y.prototype._slice=function(e,t,i,r,s,o,n){if(!Array.isArray(i))return;const a=i.length,p=e.split(":"),c=p[2]&&Number.parseInt(p[2])||1;let d=p[0]&&Number.parseInt(p[0])||0,u=p[1]&&Number.parseInt(p[1])||a;d=d<0?Math.max(0,d+a):Math.min(a,d),u=u<0?Math.max(0,u+a):Math.min(a,u);const l=[];for(let e=d;e<u;e+=c)this._trace(m(e,t),i,r,s,o,n,!0).forEach((e=>{l.push(e)}));return l},y.prototype._eval=function(e,t,i,r,s,o){this.currSandbox._$_parentProperty=o,this.currSandbox._$_parent=s,this.currSandbox._$_property=i,this.currSandbox._$_root=this.json,this.currSandbox._$_v=t;const n=e.includes("@path");n&&(this.currSandbox._$_path=y.toPathString(r.concat([i])));const a=this.currEval+"Script:"+e;if(!y.cache[a]){let t=e.replaceAll("@parentProperty","_$_parentProperty").replaceAll("@parent","_$_parent").replaceAll("@property","_$_property").replaceAll("@root","_$_root").replaceAll(/@([.\s)[])/gu,"_$_v$1");if(n&&(t=t.replaceAll("@path","_$_path")),"safe"===this.currEval||!0===this.currEval||void 0===this.currEval)y.cache[a]=new this.safeVm.Script(t);else if("native"===this.currEval)y.cache[a]=new this.vm.Script(t);else if("function"==typeof this.currEval&&this.currEval.prototype&&Object.hasOwn(this.currEval.prototype,"runInNewContext")){const e=this.currEval;y.cache[a]=new e(t)}else{if("function"!=typeof this.currEval)throw new TypeError(`Unknown "eval" property "${this.currEval}"`);y.cache[a]={runInNewContext:e=>this.currEval(t,e)}}}try{return y.cache[a].runInNewContext(this.currSandbox)}catch(t){if(this.ignoreEvalErrors)return!1;throw new Error("jsonPath: "+t.message+": "+e)}},y.cache={},y.toPathString=function(e){const t=e,i=t.length;let r="$";for(let e=1;e<i;e++)/^(~|\^|@.*?\(\))$/u.test(t[e])||(r+=/^[0-9*]+$/u.test(t[e])?"["+t[e]+"]":"['"+t[e]+"']");return r},y.toPointer=function(e){const t=e,i=t.length;let r="";for(let e=1;e<i;e++)/^(~|\^|@.*?\(\))$/u.test(t[e])||(r+="/"+t[e].toString().replaceAll("~","~0").replaceAll("/","~1"));return r},y.toPathArray=function(e){const{cache:t}=y;if(t[e])return t[e].concat();const i=[],r=e.replaceAll(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\(\)/gu,";$&;").replaceAll(/[['](\??\(.*?\))[\]'](?!.\])/gu,(function(e,t){return"[#"+(i.push(t)-1)+"]"})).replaceAll(/\[['"]([^'\]]*)['"]\]/gu,(function(e,t){return"['"+t.replaceAll(".","%@%").replaceAll("~","%%@@%%")+"']"})).replaceAll("~",";~;").replaceAll(/['"]?\.['"]?(?![^[]*\])|\[['"]?/gu,";").replaceAll("%@%",".").replaceAll("%%@@%%","~").replaceAll(/(?:;)?(\^+)(?:;)?/gu,(function(e,t){return";"+t.split("").join(";")+";"})).replaceAll(/;;;|;;/gu,";..;").replaceAll(/;$|'?\]|'$/gu,"").split(";").map((function(e){const t=e.match(/#(\d+)/u);return t&&t[1]?i[t[1]]:e}));return t[e]=r,t[e].concat()},y.prototype.safeVm={Script:class{constructor(e){this.code=e,this.ast=n(this.code)}runInNewContext(e){const t=Object.assign(Object.create(null),e);return l.evalAst(this.ast,t)}}},y.prototype.vm=r,t.JSONPath=y},928:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateTuple=void 0;const r=i(6675),s=i(749),o=i(2883),n={keyword:"items",type:"array",schemaType:["object","array","boolean"],before:"uniqueItems",code(e){const{schema:t,it:i}=e;if(Array.isArray(t))return a(e,"additionalItems",t);i.items=!0,(0,s.alwaysValidSchema)(i,t)||e.ok((0,o.validateArray)(e))}};function a(e,t,i=e.schema){const{gen:o,parentSchema:n,data:a,keyword:p,it:c}=e;!function(e){const{opts:r,errSchemaPath:o}=c,n=i.length,a=n===e.minItems&&(n===e.maxItems||!1===e[t]);if(r.strictTuples&&!a){const e=`"${p}" is ${n}-tuple, but minItems or maxItems/${t} are not specified or different at path "${o}"`;(0,s.checkStrictMode)(c,e,r.strictTuples)}}(n),c.opts.unevaluated&&i.length&&!0!==c.items&&(c.items=s.mergeEvaluated.items(o,i.length,c.items));const d=o.name("valid"),u=o.const("len",r._`${a}.length`);i.forEach(((t,i)=>{(0,s.alwaysValidSchema)(c,t)||(o.if(r._`${u} > ${i}`,(()=>e.subschema({keyword:p,schemaProp:i,dataProp:i},d))),e.ok(d))}))}t.validateTuple=a,t.default=n},932:e=>{"use strict";e.exports=require("process")},948:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2654);function s(e){return{keyword:"deepProperties",type:"object",schemaType:"object",macro:function(e){const t=[];for(const i in e)t.push(o(i,e[i]));return{allOf:t}},metaSchema:{type:"object",propertyNames:{type:"string",format:"json-pointer"},additionalProperties:(0,r.metaSchemaRef)(e)}}}function o(e,t){const i=e.split("/"),r={};let s=r;for(let e=1;e<i.length;e++){let r=i[e];const o=e===i.length-1;r=r.replace(/~1/g,"/").replace(/~0/g,"~");const n=s.properties={};let a;if(/[0-9]+/.test(r)){let e=+r;for(a=s.items=[],s.type=["object","array"];e--;)a.push({})}else s.type="object";s=o?t:{},n[r]=s,a&&a.push(s)}return r}t.default=s,e.exports=s},958:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"})},975:(e,t,i)=>{"use strict";var r=i(3334),s=i(6055),o=i(1919),n=i(8531),a=i(5132),p=i(988),c=i(2891),d=i(8523),u=i(4988),l=i(8080),h=i(9637),m=i(692),f=i(8416),y=i(5822),g=i(2557),x=i(5437);const b=new Map([["core",d.schema],["failsafe",[r.map,o.seq,n.string]],["json",u.schema],["yaml11",y.schema],["yaml-1.1",y.schema]]),v={binary:l.binary,bool:a.boolTag,float:p.float,floatExp:p.floatExp,floatNaN:p.floatNaN,floatTime:x.floatTime,int:c.int,intHex:c.intHex,intOct:c.intOct,intTime:x.intTime,map:r.map,merge:h.merge,null:s.nullTag,omap:m.omap,pairs:f.pairs,seq:o.seq,set:g.set,timestamp:x.timestamp},w={"tag:yaml.org,2002:binary":l.binary,"tag:yaml.org,2002:merge":h.merge,"tag:yaml.org,2002:omap":m.omap,"tag:yaml.org,2002:pairs":f.pairs,"tag:yaml.org,2002:set":g.set,"tag:yaml.org,2002:timestamp":x.timestamp};t.coreKnownTags=w,t.getTags=function(e,t,i){const r=b.get(t);if(r&&!e)return i&&!r.includes(h.merge)?r.concat(h.merge):r.slice();let s=r;if(!s){if(!Array.isArray(e)){const e=Array.from(b.keys()).filter((e=>"yaml11"!==e)).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown schema "${t}"; use one of ${e} or define customTags array`)}s=[]}if(Array.isArray(e))for(const t of e)s=s.concat(t);else"function"==typeof e&&(s=e(s.slice()));return i&&(s=s.concat(h.merge)),s.reduce(((e,t)=>{const i="string"==typeof t?v[t]:t;if(!i){const e=JSON.stringify(t),i=Object.keys(v).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown custom tag ${e}; use one of ${i}`)}return e.includes(i)||e.push(i),e}),[])}},988:(e,t,i)=>{"use strict";var r=i(9714),s=i(3144);const o={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:e=>"nan"===e.slice(-3).toLowerCase()?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:s.stringifyNumber},n={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e),stringify(e){const t=Number(e.value);return isFinite(t)?t.toExponential():s.stringifyNumber(e)}},a={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(e){const t=new r.Scalar(parseFloat(e)),i=e.indexOf(".");return-1!==i&&"0"===e[e.length-1]&&(t.minFractionDigits=e.length-i-1),t},stringify:s.stringifyNumber};t.float=a,t.floatExp=n,t.floatNaN=o},998:(e,t,i)=>{const r=i(9896),s=i(6928),o=i(857),n=i(6982),a=i(56).version,p=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function c(e){console.log(`[dotenv@${a}][DEBUG] ${e}`)}function d(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function u(e,t){let i;try{i=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const r=i.password;if(!r){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const s=i.searchParams.get("environment");if(!s){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const o=`DOTENV_VAULT_${s.toUpperCase()}`,n=e.parsed[o];if(!n){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:n,key:r}}function l(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const i of e.path)r.existsSync(i)&&(t=i.endsWith(".vault")?i:`${i}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=s.resolve(process.cwd(),".env.vault");return r.existsSync(t)?t:null}function h(e){return"~"===e[0]?s.join(o.homedir(),e.slice(1)):e}const m={configDotenv:function(e){const t=s.resolve(process.cwd(),".env");let i="utf8";const o=Boolean(e&&e.debug);e&&e.encoding?i=e.encoding:o&&c("No encoding is specified. UTF-8 is used by default");let n,a=[t];if(e&&e.path)if(Array.isArray(e.path)){a=[];for(const t of e.path)a.push(h(t))}else a=[h(e.path)];const p={};for(const t of a)try{const s=m.parse(r.readFileSync(t,{encoding:i}));m.populate(p,s,e)}catch(e){o&&c(`Failed to load ${t} ${e.message}`),n=e}let d=process.env;return e&&null!=e.processEnv&&(d=e.processEnv),m.populate(d,p,e),n?{parsed:p,error:n}:{parsed:p}},_configVault:function(e){Boolean(e&&e.debug)&&c("Loading env from encrypted .env.vault");const t=m._parseVault(e);let i=process.env;return e&&null!=e.processEnv&&(i=e.processEnv),m.populate(i,t,e),{parsed:t}},_parseVault:function(e){const t=l(e),i=m.configDotenv({path:t});if(!i.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const r=d(e).split(","),s=r.length;let o;for(let e=0;e<s;e++)try{const t=u(i,r[e].trim());o=m.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=s)throw t}return m.parse(o)},config:function(e){if(0===d(e).length)return m.configDotenv(e);const t=l(e);return t?m._configVault(e):(i=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${a}][WARN] ${i}`),m.configDotenv(e));var i},decrypt:function(e,t){const i=Buffer.from(t.slice(-64),"hex");let r=Buffer.from(e,"base64");const s=r.subarray(0,12),o=r.subarray(-16);r=r.subarray(12,-16);try{const e=n.createDecipheriv("aes-256-gcm",i,s);return e.setAuthTag(o),`${e.update(r)}${e.final()}`}catch(e){const t=e instanceof RangeError,i="Invalid key length"===e.message,r="Unsupported state or unable to authenticate data"===e.message;if(t||i){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(r){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let i,r=e.toString();for(r=r.replace(/\r\n?/gm,"\n");null!=(i=p.exec(r));){const e=i[1];let r=i[2]||"";r=r.trim();const s=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===s&&(r=r.replace(/\\n/g,"\n"),r=r.replace(/\\r/g,"\r")),t[e]=r}return t},populate:function(e,t,i={}){const r=Boolean(i&&i.debug),s=Boolean(i&&i.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const i of Object.keys(t))Object.prototype.hasOwnProperty.call(e,i)?(!0===s&&(e[i]=t[i]),r&&c(!0===s?`"${i}" is already defined and WAS overwritten`:`"${i}" is already defined and was NOT overwritten`)):e[i]=t[i]}};e.exports.configDotenv=m.configDotenv,e.exports._configVault=m._configVault,e.exports._parseVault=m._parseVault,e.exports.config=m.config,e.exports.decrypt=m.decrypt,e.exports.parse=m.parse,e.exports.populate=m.populate,e.exports=m},1002:e=>{"use strict";e.exports=Function.prototype.apply},1040:(e,t)=>{"use strict";t.emptyScalarPosition=function(e,t,i){if(t){i??(i=t.length);for(let r=i-1;r>=0;--r){let i=t[r];switch(i.type){case"space":case"comment":case"newline":e-=i.source.length;continue}for(i=t[++r];"space"===i?.type;)e+=i.source.length,i=t[++r];break}}return e}},1064:(e,t,i)=>{"use strict";var r=i(9612);e.exports=r.getPrototypeOf||null},1107:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2883),s=i(6675),o=i(749),n=i(749),a={keyword:"patternProperties",type:"object",schemaType:"object",code(e){const{gen:t,schema:i,data:a,parentSchema:p,it:c}=e,{opts:d}=c,u=(0,r.allSchemaProperties)(i),l=u.filter((e=>(0,o.alwaysValidSchema)(c,i[e])));if(0===u.length||l.length===u.length&&(!c.opts.unevaluated||!0===c.props))return;const h=d.strictSchema&&!d.allowMatchingProperties&&p.properties,m=t.name("valid");!0===c.props||c.props instanceof s.Name||(c.props=(0,n.evaluatedPropsToName)(t,c.props));const{props:f}=c;function y(e){for(const t in h)new RegExp(e).test(t)&&(0,o.checkStrictMode)(c,`property ${t} matches pattern ${e} (use allowMatchingProperties)`)}function g(i){t.forIn("key",a,(o=>{t.if(s._`${(0,r.usePattern)(e,i)}.test(${o})`,(()=>{const r=l.includes(i);r||e.subschema({keyword:"patternProperties",schemaProp:i,dataProp:o,dataPropType:n.Type.Str},m),c.opts.unevaluated&&!0!==f?t.assign(s._`${f}[${o}]`,!0):r||c.allErrors||t.if((0,s.not)(m),(()=>t.break()))}))}))}!function(){for(const e of u)h&&y(e),c.allErrors?g(e):(t.var(m,!0),g(e),t.if(m))}()}};t.default=a},1113:(e,t,i)=>{"use strict";var r=i(3479);e.exports=new r({include:[i(5528)]})},1137:e=>{"use strict";e.exports="object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:"function"==typeof setImmediate?setImmediate:function(e){setTimeout(e,0)}},1152:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6982);t.default={randomUUID:r.randomUUID}},1164:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(4524)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},1177:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.boolOrEmptySchema=t.topBoolOrEmptySchema=void 0;const r=i(5250),s=i(6675),o=i(3701),n={message:"boolean schema is false"};function a(e,t){const{gen:i,data:s}=e,o={gen:i,keyword:"false schema",data:s,schema:!1,schemaCode:!1,schemaValue:!1,params:{},it:e};(0,r.reportError)(o,n,void 0,t)}t.topBoolOrEmptySchema=function(e){const{gen:t,schema:i,validateName:r}=e;!1===i?a(e,!1):"object"==typeof i&&!0===i.$async?t.return(o.default.data):(t.assign(s._`${r}.errors`,null),t.return(!0))},t.boolOrEmptySchema=function(e,t){const{gen:i,schema:r}=e;!1===r?(i.var(t,!1),a(e)):i.var(t,!0)}},1198:(e,t,i)=>{"use strict";var r=i(4927),s=i(9046),o=i(625),n=i(4355),a=i(1736),p=i(484),c=i(7902),d=i(9714),u=i(1755),l=i(6010),h=i(9112),m=i(5752),f=i(2864),y=i(6247),g=i(1332),x=i(9125);t.Composer=r.Composer,t.Document=s.Document,t.Schema=o.Schema,t.YAMLError=n.YAMLError,t.YAMLParseError=n.YAMLParseError,t.YAMLWarning=n.YAMLWarning,t.Alias=a.Alias,t.isAlias=p.isAlias,t.isCollection=p.isCollection,t.isDocument=p.isDocument,t.isMap=p.isMap,t.isNode=p.isNode,t.isPair=p.isPair,t.isScalar=p.isScalar,t.isSeq=p.isSeq,t.Pair=c.Pair,t.Scalar=d.Scalar,t.YAMLMap=u.YAMLMap,t.YAMLSeq=l.YAMLSeq,t.CST=h,t.Lexer=m.Lexer,t.LineCounter=f.LineCounter,t.Parser=y.Parser,t.parse=g.parse,t.parseAllDocuments=g.parseAllDocuments,t.parseDocument=g.parseDocument,t.stringify=g.stringify,t.visit=x.visit,t.visitAsync=x.visitAsync},1206:function(e){var t;t=function(){return function(e){var t={};function i(r){if(t[r])return t[r].exports;var s=t[r]={exports:{},id:r,loaded:!1};return e[r].call(s.exports,s,s.exports,i),s.loaded=!0,s.exports}return i.m=e,i.c=t,i.p="",i(0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(1),s=i(3),o=i(8),n=i(15);function a(e,t,i){var n=null,a=function(e,t){i&&i(e,t),n&&n.visit(e,t)},p="function"==typeof i?a:null,c=!1;if(t){c="boolean"==typeof t.comment&&t.comment;var d="boolean"==typeof t.attachComment&&t.attachComment;(c||d)&&((n=new r.CommentHandler).attach=d,t.comment=!0,p=a)}var u,l=!1;t&&"string"==typeof t.sourceType&&(l="module"===t.sourceType),u=t&&"boolean"==typeof t.jsx&&t.jsx?new s.JSXParser(e,t,p):new o.Parser(e,t,p);var h=l?u.parseModule():u.parseScript();return c&&n&&(h.comments=n.comments),u.config.tokens&&(h.tokens=u.tokens),u.config.tolerant&&(h.errors=u.errorHandler.errors),h}t.parse=a,t.parseModule=function(e,t,i){var r=t||{};return r.sourceType="module",a(e,r,i)},t.parseScript=function(e,t,i){var r=t||{};return r.sourceType="script",a(e,r,i)},t.tokenize=function(e,t,i){var r,s=new n.Tokenizer(e,t);r=[];try{for(;;){var o=s.getNextToken();if(!o)break;i&&(o=i(o)),r.push(o)}}catch(e){s.errorHandler.tolerate(e)}return s.errorHandler.tolerant&&(r.errors=s.errors()),r};var p=i(2);t.Syntax=p.Syntax,t.version="4.0.1"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(2),s=function(){function e(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return e.prototype.insertInnerComments=function(e,t){if(e.type===r.Syntax.BlockStatement&&0===e.body.length){for(var i=[],s=this.leading.length-1;s>=0;--s){var o=this.leading[s];t.end.offset>=o.start&&(i.unshift(o.comment),this.leading.splice(s,1),this.trailing.splice(s,1))}i.length&&(e.innerComments=i)}},e.prototype.findTrailingComments=function(e){var t=[];if(this.trailing.length>0){for(var i=this.trailing.length-1;i>=0;--i){var r=this.trailing[i];r.start>=e.end.offset&&t.unshift(r.comment)}return this.trailing.length=0,t}var s=this.stack[this.stack.length-1];if(s&&s.node.trailingComments){var o=s.node.trailingComments[0];o&&o.range[0]>=e.end.offset&&(t=s.node.trailingComments,delete s.node.trailingComments)}return t},e.prototype.findLeadingComments=function(e){for(var t,i=[];this.stack.length>0&&(o=this.stack[this.stack.length-1])&&o.start>=e.start.offset;)t=o.node,this.stack.pop();if(t){for(var r=(t.leadingComments?t.leadingComments.length:0)-1;r>=0;--r){var s=t.leadingComments[r];s.range[1]<=e.start.offset&&(i.unshift(s),t.leadingComments.splice(r,1))}return t.leadingComments&&0===t.leadingComments.length&&delete t.leadingComments,i}for(r=this.leading.length-1;r>=0;--r){var o;(o=this.leading[r]).start<=e.start.offset&&(i.unshift(o.comment),this.leading.splice(r,1))}return i},e.prototype.visitNode=function(e,t){if(!(e.type===r.Syntax.Program&&e.body.length>0)){this.insertInnerComments(e,t);var i=this.findTrailingComments(t),s=this.findLeadingComments(t);s.length>0&&(e.leadingComments=s),i.length>0&&(e.trailingComments=i),this.stack.push({node:e,start:t.start.offset})}},e.prototype.visitComment=function(e,t){var i="L"===e.type[0]?"Line":"Block",r={type:i,value:e.value};if(e.range&&(r.range=e.range),e.loc&&(r.loc=e.loc),this.comments.push(r),this.attach){var s={comment:{type:i,value:e.value,range:[t.start.offset,t.end.offset]},start:t.start.offset};e.loc&&(s.comment.loc=e.loc),e.type=i,this.leading.push(s),this.trailing.push(s)}},e.prototype.visit=function(e,t){"LineComment"===e.type||"BlockComment"===e.type?this.visitComment(e,t):this.attach&&this.visitNode(e,t)},e}();t.CommentHandler=s},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForOfStatement:"ForOfStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"}},function(e,t,i){"use strict";var r,s=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});Object.defineProperty(t,"__esModule",{value:!0});var o=i(4),n=i(5),a=i(6),p=i(7),c=i(8),d=i(13),u=i(14);function l(e){var t;switch(e.type){case a.JSXSyntax.JSXIdentifier:t=e.name;break;case a.JSXSyntax.JSXNamespacedName:var i=e;t=l(i.namespace)+":"+l(i.name);break;case a.JSXSyntax.JSXMemberExpression:var r=e;t=l(r.object)+"."+l(r.property)}return t}d.TokenName[100]="JSXIdentifier",d.TokenName[101]="JSXText";var h=function(e){function t(t,i,r){return e.call(this,t,i,r)||this}return s(t,e),t.prototype.parsePrimaryExpression=function(){return this.match("<")?this.parseJSXRoot():e.prototype.parsePrimaryExpression.call(this)},t.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},t.prototype.finishJSX=function(){this.nextToken()},t.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX("}"),this.config.tokens&&this.tokens.pop()},t.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.scanXHTMLEntity=function(e){for(var t="&",i=!0,r=!1,s=!1,n=!1;!this.scanner.eof()&&i&&!r;){var a=this.scanner.source[this.scanner.index];if(a===e)break;if(r=";"===a,t+=a,++this.scanner.index,!r)switch(t.length){case 2:s="#"===a;break;case 3:s&&(i=(n="x"===a)||o.Character.isDecimalDigit(a.charCodeAt(0)),s=s&&!n);break;default:i=(i=i&&!(s&&!o.Character.isDecimalDigit(a.charCodeAt(0))))&&!(n&&!o.Character.isHexDigit(a.charCodeAt(0)))}}if(i&&r&&t.length>2){var p=t.substr(1,t.length-2);s&&p.length>1?t=String.fromCharCode(parseInt(p.substr(1),10)):n&&p.length>2?t=String.fromCharCode(parseInt("0"+p.substr(1),16)):s||n||!u.XHTMLEntities[p]||(t=u.XHTMLEntities[p])}return t},t.prototype.lexJSX=function(){var e=this.scanner.source.charCodeAt(this.scanner.index);if(60===e||62===e||47===e||58===e||61===e||123===e||125===e)return{type:7,value:a=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===e||39===e){for(var t=this.scanner.index,i=this.scanner.source[this.scanner.index++],r="";!this.scanner.eof()&&(p=this.scanner.source[this.scanner.index++])!==i;)r+="&"===p?this.scanXHTMLEntity(i):p;return{type:8,value:r,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(46===e){var s=this.scanner.source.charCodeAt(this.scanner.index+1),n=this.scanner.source.charCodeAt(this.scanner.index+2),a=46===s&&46===n?"...":".";return t=this.scanner.index,this.scanner.index+=a.length,{type:7,value:a,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(96===e)return{type:10,value:"",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(o.Character.isIdentifierStart(e)&&92!==e){for(t=this.scanner.index,++this.scanner.index;!this.scanner.eof();){var p=this.scanner.source.charCodeAt(this.scanner.index);if(o.Character.isIdentifierPart(p)&&92!==p)++this.scanner.index;else{if(45!==p)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(t,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}return this.scanner.lex()},t.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var e=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(e)),e},t.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var e=this.scanner.index,t="";!this.scanner.eof();){var i=this.scanner.source[this.scanner.index];if("{"===i||"<"===i)break;++this.scanner.index,t+=i,o.Character.isLineTerminator(i.charCodeAt(0))&&(++this.scanner.lineNumber,"\r"===i&&"\n"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var r={type:101,value:t,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:e,end:this.scanner.index};return t.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(r)),r},t.prototype.peekJSXToken=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.lexJSX();return this.scanner.restoreState(e),t},t.prototype.expectJSX=function(e){var t=this.nextJSXToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},t.prototype.matchJSX=function(e){var t=this.peekJSXToken();return 7===t.type&&t.value===e},t.prototype.parseJSXIdentifier=function(){var e=this.createJSXNode(),t=this.nextJSXToken();return 100!==t.type&&this.throwUnexpectedToken(t),this.finalize(e,new n.JSXIdentifier(t.value))},t.prototype.parseJSXElementName=function(){var e=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(":")){var i=t;this.expectJSX(":");var r=this.parseJSXIdentifier();t=this.finalize(e,new n.JSXNamespacedName(i,r))}else if(this.matchJSX("."))for(;this.matchJSX(".");){var s=t;this.expectJSX(".");var o=this.parseJSXIdentifier();t=this.finalize(e,new n.JSXMemberExpression(s,o))}return t},t.prototype.parseJSXAttributeName=function(){var e,t=this.createJSXNode(),i=this.parseJSXIdentifier();if(this.matchJSX(":")){var r=i;this.expectJSX(":");var s=this.parseJSXIdentifier();e=this.finalize(t,new n.JSXNamespacedName(r,s))}else e=i;return e},t.prototype.parseJSXStringLiteralAttribute=function(){var e=this.createJSXNode(),t=this.nextJSXToken();8!==t.type&&this.throwUnexpectedToken(t);var i=this.getTokenRaw(t);return this.finalize(e,new p.Literal(t.value,i))},t.prototype.parseJSXExpressionAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.finishJSX(),this.match("}")&&this.tolerateError("JSX attributes must only be assigned a non-empty expression");var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new n.JSXExpressionContainer(t))},t.prototype.parseJSXAttributeValue=function(){return this.matchJSX("{")?this.parseJSXExpressionAttribute():this.matchJSX("<")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},t.prototype.parseJSXNameValueAttribute=function(){var e=this.createJSXNode(),t=this.parseJSXAttributeName(),i=null;return this.matchJSX("=")&&(this.expectJSX("="),i=this.parseJSXAttributeValue()),this.finalize(e,new n.JSXAttribute(t,i))},t.prototype.parseJSXSpreadAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.expectJSX("..."),this.finishJSX();var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new n.JSXSpreadAttribute(t))},t.prototype.parseJSXAttributes=function(){for(var e=[];!this.matchJSX("/")&&!this.matchJSX(">");){var t=this.matchJSX("{")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();e.push(t)}return e},t.prototype.parseJSXOpeningElement=function(){var e=this.createJSXNode();this.expectJSX("<");var t=this.parseJSXElementName(),i=this.parseJSXAttributes(),r=this.matchJSX("/");return r&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new n.JSXOpeningElement(t,r,i))},t.prototype.parseJSXBoundaryElement=function(){var e=this.createJSXNode();if(this.expectJSX("<"),this.matchJSX("/")){this.expectJSX("/");var t=this.parseJSXElementName();return this.expectJSX(">"),this.finalize(e,new n.JSXClosingElement(t))}var i=this.parseJSXElementName(),r=this.parseJSXAttributes(),s=this.matchJSX("/");return s&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new n.JSXOpeningElement(i,s,r))},t.prototype.parseJSXEmptyExpression=function(){var e=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(e,new n.JSXEmptyExpression)},t.prototype.parseJSXExpressionContainer=function(){var e,t=this.createJSXNode();return this.expectJSX("{"),this.matchJSX("}")?(e=this.parseJSXEmptyExpression(),this.expectJSX("}")):(this.finishJSX(),e=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(t,new n.JSXExpressionContainer(e))},t.prototype.parseJSXChildren=function(){for(var e=[];!this.scanner.eof();){var t=this.createJSXChildNode(),i=this.nextJSXText();if(i.start<i.end){var r=this.getTokenRaw(i),s=this.finalize(t,new n.JSXText(i.value,r));e.push(s)}if("{"!==this.scanner.source[this.scanner.index])break;var o=this.parseJSXExpressionContainer();e.push(o)}return e},t.prototype.parseComplexJSXElement=function(e){for(var t=[];!this.scanner.eof();){e.children=e.children.concat(this.parseJSXChildren());var i=this.createJSXChildNode(),r=this.parseJSXBoundaryElement();if(r.type===a.JSXSyntax.JSXOpeningElement){var s=r;if(s.selfClosing){var o=this.finalize(i,new n.JSXElement(s,[],null));e.children.push(o)}else t.push(e),e={node:i,opening:s,closing:null,children:[]}}if(r.type===a.JSXSyntax.JSXClosingElement){e.closing=r;var p=l(e.opening.name);if(p!==l(e.closing.name)&&this.tolerateError("Expected corresponding JSX closing tag for %0",p),!(t.length>0))break;o=this.finalize(e.node,new n.JSXElement(e.opening,e.children,e.closing)),(e=t[t.length-1]).children.push(o),t.pop()}}return e},t.prototype.parseJSXElement=function(){var e=this.createJSXNode(),t=this.parseJSXOpeningElement(),i=[],r=null;if(!t.selfClosing){var s=this.parseComplexJSXElement({node:e,opening:t,closing:r,children:i});i=s.children,r=s.closing}return this.finalize(e,new n.JSXElement(t,i,r))},t.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var e=this.parseJSXElement();return this.finishJSX(),e},t.prototype.isStartOfExpression=function(){return e.prototype.isStartOfExpression.call(this)||this.match("<")},t}(c.Parser);t.JSXParser=h},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};t.Character={fromCodePoint:function(e){return e<65536?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10))+String.fromCharCode(56320+(e-65536&1023))},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&i.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e))},isIdentifierPart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&i.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e))},isDecimalDigit:function(e){return e>=48&&e<=57},isHexDigit:function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},isOctalDigit:function(e){return e>=48&&e<=55}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(6);t.JSXClosingElement=function(e){this.type=r.JSXSyntax.JSXClosingElement,this.name=e};t.JSXElement=function(e,t,i){this.type=r.JSXSyntax.JSXElement,this.openingElement=e,this.children=t,this.closingElement=i};t.JSXEmptyExpression=function(){this.type=r.JSXSyntax.JSXEmptyExpression};t.JSXExpressionContainer=function(e){this.type=r.JSXSyntax.JSXExpressionContainer,this.expression=e};t.JSXIdentifier=function(e){this.type=r.JSXSyntax.JSXIdentifier,this.name=e};t.JSXMemberExpression=function(e,t){this.type=r.JSXSyntax.JSXMemberExpression,this.object=e,this.property=t};t.JSXAttribute=function(e,t){this.type=r.JSXSyntax.JSXAttribute,this.name=e,this.value=t};t.JSXNamespacedName=function(e,t){this.type=r.JSXSyntax.JSXNamespacedName,this.namespace=e,this.name=t};t.JSXOpeningElement=function(e,t,i){this.type=r.JSXSyntax.JSXOpeningElement,this.name=e,this.selfClosing=t,this.attributes=i};t.JSXSpreadAttribute=function(e){this.type=r.JSXSyntax.JSXSpreadAttribute,this.argument=e};t.JSXText=function(e,t){this.type=r.JSXSyntax.JSXText,this.value=e,this.raw=t}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JSXSyntax={JSXAttribute:"JSXAttribute",JSXClosingElement:"JSXClosingElement",JSXElement:"JSXElement",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXIdentifier:"JSXIdentifier",JSXMemberExpression:"JSXMemberExpression",JSXNamespacedName:"JSXNamespacedName",JSXOpeningElement:"JSXOpeningElement",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(2);t.ArrayExpression=function(e){this.type=r.Syntax.ArrayExpression,this.elements=e};t.ArrayPattern=function(e){this.type=r.Syntax.ArrayPattern,this.elements=e};t.ArrowFunctionExpression=function(e,t,i){this.type=r.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!1};t.AssignmentExpression=function(e,t,i){this.type=r.Syntax.AssignmentExpression,this.operator=e,this.left=t,this.right=i};t.AssignmentPattern=function(e,t){this.type=r.Syntax.AssignmentPattern,this.left=e,this.right=t};t.AsyncArrowFunctionExpression=function(e,t,i){this.type=r.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!0};t.AsyncFunctionDeclaration=function(e,t,i){this.type=r.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionExpression=function(e,t,i){this.type=r.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0};t.AwaitExpression=function(e){this.type=r.Syntax.AwaitExpression,this.argument=e};t.BinaryExpression=function(e,t,i){var s="||"===e||"&&"===e;this.type=s?r.Syntax.LogicalExpression:r.Syntax.BinaryExpression,this.operator=e,this.left=t,this.right=i};t.BlockStatement=function(e){this.type=r.Syntax.BlockStatement,this.body=e};t.BreakStatement=function(e){this.type=r.Syntax.BreakStatement,this.label=e};t.CallExpression=function(e,t){this.type=r.Syntax.CallExpression,this.callee=e,this.arguments=t};t.CatchClause=function(e,t){this.type=r.Syntax.CatchClause,this.param=e,this.body=t};t.ClassBody=function(e){this.type=r.Syntax.ClassBody,this.body=e};t.ClassDeclaration=function(e,t,i){this.type=r.Syntax.ClassDeclaration,this.id=e,this.superClass=t,this.body=i};t.ClassExpression=function(e,t,i){this.type=r.Syntax.ClassExpression,this.id=e,this.superClass=t,this.body=i};t.ComputedMemberExpression=function(e,t){this.type=r.Syntax.MemberExpression,this.computed=!0,this.object=e,this.property=t};t.ConditionalExpression=function(e,t,i){this.type=r.Syntax.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=i};t.ContinueStatement=function(e){this.type=r.Syntax.ContinueStatement,this.label=e};t.DebuggerStatement=function(){this.type=r.Syntax.DebuggerStatement};t.Directive=function(e,t){this.type=r.Syntax.ExpressionStatement,this.expression=e,this.directive=t};t.DoWhileStatement=function(e,t){this.type=r.Syntax.DoWhileStatement,this.body=e,this.test=t};t.EmptyStatement=function(){this.type=r.Syntax.EmptyStatement};t.ExportAllDeclaration=function(e){this.type=r.Syntax.ExportAllDeclaration,this.source=e};t.ExportDefaultDeclaration=function(e){this.type=r.Syntax.ExportDefaultDeclaration,this.declaration=e};t.ExportNamedDeclaration=function(e,t,i){this.type=r.Syntax.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=i};t.ExportSpecifier=function(e,t){this.type=r.Syntax.ExportSpecifier,this.exported=t,this.local=e};t.ExpressionStatement=function(e){this.type=r.Syntax.ExpressionStatement,this.expression=e};t.ForInStatement=function(e,t,i){this.type=r.Syntax.ForInStatement,this.left=e,this.right=t,this.body=i,this.each=!1};t.ForOfStatement=function(e,t,i){this.type=r.Syntax.ForOfStatement,this.left=e,this.right=t,this.body=i};t.ForStatement=function(e,t,i,s){this.type=r.Syntax.ForStatement,this.init=e,this.test=t,this.update=i,this.body=s};t.FunctionDeclaration=function(e,t,i,s){this.type=r.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=s,this.expression=!1,this.async=!1};t.FunctionExpression=function(e,t,i,s){this.type=r.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=s,this.expression=!1,this.async=!1};t.Identifier=function(e){this.type=r.Syntax.Identifier,this.name=e};t.IfStatement=function(e,t,i){this.type=r.Syntax.IfStatement,this.test=e,this.consequent=t,this.alternate=i};t.ImportDeclaration=function(e,t){this.type=r.Syntax.ImportDeclaration,this.specifiers=e,this.source=t};t.ImportDefaultSpecifier=function(e){this.type=r.Syntax.ImportDefaultSpecifier,this.local=e};t.ImportNamespaceSpecifier=function(e){this.type=r.Syntax.ImportNamespaceSpecifier,this.local=e};t.ImportSpecifier=function(e,t){this.type=r.Syntax.ImportSpecifier,this.local=e,this.imported=t};t.LabeledStatement=function(e,t){this.type=r.Syntax.LabeledStatement,this.label=e,this.body=t};t.Literal=function(e,t){this.type=r.Syntax.Literal,this.value=e,this.raw=t};t.MetaProperty=function(e,t){this.type=r.Syntax.MetaProperty,this.meta=e,this.property=t};t.MethodDefinition=function(e,t,i,s,o){this.type=r.Syntax.MethodDefinition,this.key=e,this.computed=t,this.value=i,this.kind=s,this.static=o};t.Module=function(e){this.type=r.Syntax.Program,this.body=e,this.sourceType="module"};t.NewExpression=function(e,t){this.type=r.Syntax.NewExpression,this.callee=e,this.arguments=t};t.ObjectExpression=function(e){this.type=r.Syntax.ObjectExpression,this.properties=e};t.ObjectPattern=function(e){this.type=r.Syntax.ObjectPattern,this.properties=e};t.Property=function(e,t,i,s,o,n){this.type=r.Syntax.Property,this.key=t,this.computed=i,this.value=s,this.kind=e,this.method=o,this.shorthand=n};t.RegexLiteral=function(e,t,i,s){this.type=r.Syntax.Literal,this.value=e,this.raw=t,this.regex={pattern:i,flags:s}};t.RestElement=function(e){this.type=r.Syntax.RestElement,this.argument=e};t.ReturnStatement=function(e){this.type=r.Syntax.ReturnStatement,this.argument=e};t.Script=function(e){this.type=r.Syntax.Program,this.body=e,this.sourceType="script"};t.SequenceExpression=function(e){this.type=r.Syntax.SequenceExpression,this.expressions=e};t.SpreadElement=function(e){this.type=r.Syntax.SpreadElement,this.argument=e};t.StaticMemberExpression=function(e,t){this.type=r.Syntax.MemberExpression,this.computed=!1,this.object=e,this.property=t};t.Super=function(){this.type=r.Syntax.Super};t.SwitchCase=function(e,t){this.type=r.Syntax.SwitchCase,this.test=e,this.consequent=t};t.SwitchStatement=function(e,t){this.type=r.Syntax.SwitchStatement,this.discriminant=e,this.cases=t};t.TaggedTemplateExpression=function(e,t){this.type=r.Syntax.TaggedTemplateExpression,this.tag=e,this.quasi=t};t.TemplateElement=function(e,t){this.type=r.Syntax.TemplateElement,this.value=e,this.tail=t};t.TemplateLiteral=function(e,t){this.type=r.Syntax.TemplateLiteral,this.quasis=e,this.expressions=t};t.ThisExpression=function(){this.type=r.Syntax.ThisExpression};t.ThrowStatement=function(e){this.type=r.Syntax.ThrowStatement,this.argument=e};t.TryStatement=function(e,t,i){this.type=r.Syntax.TryStatement,this.block=e,this.handler=t,this.finalizer=i};t.UnaryExpression=function(e,t){this.type=r.Syntax.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0};t.UpdateExpression=function(e,t,i){this.type=r.Syntax.UpdateExpression,this.operator=e,this.argument=t,this.prefix=i};t.VariableDeclaration=function(e,t){this.type=r.Syntax.VariableDeclaration,this.declarations=e,this.kind=t};t.VariableDeclarator=function(e,t){this.type=r.Syntax.VariableDeclarator,this.id=e,this.init=t};t.WhileStatement=function(e,t){this.type=r.Syntax.WhileStatement,this.test=e,this.body=t};t.WithStatement=function(e,t){this.type=r.Syntax.WithStatement,this.object=e,this.body=t};t.YieldExpression=function(e,t){this.type=r.Syntax.YieldExpression,this.argument=e,this.delegate=t}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(9),s=i(10),o=i(11),n=i(7),a=i(12),p=i(2),c=i(13),d="ArrowParameterPlaceHolder",u=function(){function e(e,t,i){void 0===t&&(t={}),this.config={range:"boolean"==typeof t.range&&t.range,loc:"boolean"==typeof t.loc&&t.loc,source:null,tokens:"boolean"==typeof t.tokens&&t.tokens,comment:"boolean"==typeof t.comment&&t.comment,tolerant:"boolean"==typeof t.tolerant&&t.tolerant},this.config.loc&&t.source&&null!==t.source&&(this.config.source=String(t.source)),this.delegate=i,this.errorHandler=new s.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new a.Scanner(e,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={")":0,";":0,",":0,"=":0,"]":0,"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":11,"/":11,"%":11},this.lookahead={type:2,value:"",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return e.prototype.throwError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var s=Array.prototype.slice.call(arguments,1),o=e.replace(/%(\d)/g,(function(e,t){return r.assert(t<s.length,"Message reference must be in range"),s[t]})),n=this.lastMarker.index,a=this.lastMarker.line,p=this.lastMarker.column+1;throw this.errorHandler.createError(n,a,p,o)},e.prototype.tolerateError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var s=Array.prototype.slice.call(arguments,1),o=e.replace(/%(\d)/g,(function(e,t){return r.assert(t<s.length,"Message reference must be in range"),s[t]})),n=this.lastMarker.index,a=this.scanner.lineNumber,p=this.lastMarker.column+1;this.errorHandler.tolerateError(n,a,p,o)},e.prototype.unexpectedTokenError=function(e,t){var i,r=t||o.Messages.UnexpectedToken;if(e?(t||(r=2===e.type?o.Messages.UnexpectedEOS:3===e.type?o.Messages.UnexpectedIdentifier:6===e.type?o.Messages.UnexpectedNumber:8===e.type?o.Messages.UnexpectedString:10===e.type?o.Messages.UnexpectedTemplate:o.Messages.UnexpectedToken,4===e.type&&(this.scanner.isFutureReservedWord(e.value)?r=o.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(e.value)&&(r=o.Messages.StrictReservedWord))),i=e.value):i="ILLEGAL",r=r.replace("%0",i),e&&"number"==typeof e.lineNumber){var s=e.start,n=e.lineNumber,a=this.lastMarker.index-this.lastMarker.column,p=e.start-a+1;return this.errorHandler.createError(s,n,p,r)}return s=this.lastMarker.index,n=this.lastMarker.line,p=this.lastMarker.column+1,this.errorHandler.createError(s,n,p,r)},e.prototype.throwUnexpectedToken=function(e,t){throw this.unexpectedTokenError(e,t)},e.prototype.tolerateUnexpectedToken=function(e,t){this.errorHandler.tolerate(this.unexpectedTokenError(e,t))},e.prototype.collectComments=function(){if(this.config.comment){var e=this.scanner.scanComments();if(e.length>0&&this.delegate)for(var t=0;t<e.length;++t){var i=e[t],r=void 0;r={type:i.multiLine?"BlockComment":"LineComment",value:this.scanner.source.slice(i.slice[0],i.slice[1])},this.config.range&&(r.range=i.range),this.config.loc&&(r.loc=i.loc);var s={start:{line:i.loc.start.line,column:i.loc.start.column,offset:i.range[0]},end:{line:i.loc.end.line,column:i.loc.end.column,offset:i.range[1]}};this.delegate(r,s)}}else this.scanner.scanComments()},e.prototype.getTokenRaw=function(e){return this.scanner.source.slice(e.start,e.end)},e.prototype.convertToken=function(e){var t={type:c.TokenName[e.type],value:this.getTokenRaw(e)};if(this.config.range&&(t.range=[e.start,e.end]),this.config.loc&&(t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===e.type){var i=e.pattern,r=e.flags;t.regex={pattern:i,flags:r}}return t},e.prototype.nextToken=function(){var e=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var t=this.scanner.lex();return this.hasLineTerminator=e.lineNumber!==t.lineNumber,t&&this.context.strict&&3===t.type&&this.scanner.isStrictModeReservedWord(t.value)&&(t.type=4),this.lookahead=t,this.config.tokens&&2!==t.type&&this.tokens.push(this.convertToken(t)),e},e.prototype.nextRegexToken=function(){this.collectComments();var e=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(e))),this.lookahead=e,this.nextToken(),e},e.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},e.prototype.startNode=function(e,t){void 0===t&&(t=0);var i=e.start-e.lineStart,r=e.lineNumber;return i<0&&(i+=t,r--),{index:e.start,line:r,column:i}},e.prototype.finalize=function(e,t){if(this.config.range&&(t.range=[e.index,this.lastMarker.index]),this.config.loc&&(t.loc={start:{line:e.line,column:e.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(t.loc.source=this.config.source)),this.delegate){var i={start:{line:e.line,column:e.column,offset:e.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(t,i)}return t},e.prototype.expect=function(e){var t=this.nextToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var e=this.lookahead;7===e.type&&","===e.value?this.nextToken():7===e.type&&";"===e.value?(this.nextToken(),this.tolerateUnexpectedToken(e)):this.tolerateUnexpectedToken(e,o.Messages.UnexpectedToken)}else this.expect(",")},e.prototype.expectKeyword=function(e){var t=this.nextToken();4===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.match=function(e){return 7===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchKeyword=function(e){return 4===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchContextualKeyword=function(e){return 3===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var e=this.lookahead.value;return"="===e||"*="===e||"**="===e||"/="===e||"%="===e||"+="===e||"-="===e||"<<="===e||">>="===e||">>>="===e||"&="===e||"^="===e||"|="===e},e.prototype.isolateCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,r=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var s=e.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=t,this.context.isAssignmentTarget=i,this.context.firstCoverInitializedNameError=r,s},e.prototype.inheritCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,r=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var s=e.call(this);return this.context.isBindingElement=this.context.isBindingElement&&t,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&i,this.context.firstCoverInitializedNameError=r||this.context.firstCoverInitializedNameError,s},e.prototype.consumeSemicolon=function(){this.match(";")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match("}")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},e.prototype.parsePrimaryExpression=function(){var e,t,i,r=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&"await"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),e=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(r,new n.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,o.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(r,new n.Literal(t.value,i));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(r,new n.Literal("true"===t.value,i));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(r,new n.Literal(null,i));break;case 10:e=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case"(":this.context.isBindingElement=!1,e=this.inheritCoverGrammar(this.parseGroupExpression);break;case"[":e=this.inheritCoverGrammar(this.parseArrayInitializer);break;case"{":e=this.inheritCoverGrammar(this.parseObjectInitializer);break;case"/":case"/=":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,t=this.nextRegexToken(),i=this.getTokenRaw(t),e=this.finalize(r,new n.RegexLiteral(t.regex,i,t.pattern,t.flags));break;default:e=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword("yield")?e=this.parseIdentifierName():!this.context.strict&&this.matchKeyword("let")?e=this.finalize(r,new n.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword("function")?e=this.parseFunctionExpression():this.matchKeyword("this")?(this.nextToken(),e=this.finalize(r,new n.ThisExpression)):e=this.matchKeyword("class")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:e=this.throwUnexpectedToken(this.nextToken())}return e},e.prototype.parseSpreadElement=function(){var e=this.createNode();this.expect("...");var t=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(e,new n.SpreadElement(t))},e.prototype.parseArrayInitializer=function(){var e=this.createNode(),t=[];for(this.expect("[");!this.match("]");)if(this.match(","))this.nextToken(),t.push(null);else if(this.match("...")){var i=this.parseSpreadElement();this.match("]")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(",")),t.push(i)}else t.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match("]")||this.expect(",");return this.expect("]"),this.finalize(e,new n.ArrayExpression(t))},e.prototype.parsePropertyMethod=function(e){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=this.context.strict,i=this.context.allowStrictDirective;this.context.allowStrictDirective=e.simple;var r=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&e.firstRestricted&&this.tolerateUnexpectedToken(e.firstRestricted,e.message),this.context.strict&&e.stricted&&this.tolerateUnexpectedToken(e.stricted,e.message),this.context.strict=t,this.context.allowStrictDirective=i,r},e.prototype.parsePropertyMethodFunction=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters(),r=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new n.FunctionExpression(null,i.params,r,!1))},e.prototype.parsePropertyMethodAsyncFunction=function(){var e=this.createNode(),t=this.context.allowYield,i=this.context.await;this.context.allowYield=!1,this.context.await=!0;var r=this.parseFormalParameters(),s=this.parsePropertyMethod(r);return this.context.allowYield=t,this.context.await=i,this.finalize(e,new n.AsyncFunctionExpression(null,r.params,s))},e.prototype.parseObjectPropertyKey=function(){var e,t=this.createNode(),i=this.nextToken();switch(i.type){case 8:case 6:this.context.strict&&i.octal&&this.tolerateUnexpectedToken(i,o.Messages.StrictOctalLiteral);var r=this.getTokenRaw(i);e=this.finalize(t,new n.Literal(i.value,r));break;case 3:case 1:case 5:case 4:e=this.finalize(t,new n.Identifier(i.value));break;case 7:"["===i.value?(e=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect("]")):e=this.throwUnexpectedToken(i);break;default:e=this.throwUnexpectedToken(i)}return e},e.prototype.isPropertyKey=function(e,t){return e.type===p.Syntax.Identifier&&e.name===t||e.type===p.Syntax.Literal&&e.value===t},e.prototype.parseObjectProperty=function(e){var t,i=this.createNode(),r=this.lookahead,s=null,a=null,p=!1,c=!1,d=!1,u=!1;if(3===r.type){var l=r.value;this.nextToken(),p=this.match("["),s=(u=!(this.hasLineTerminator||"async"!==l||this.match(":")||this.match("(")||this.match("*")||this.match(",")))?this.parseObjectPropertyKey():this.finalize(i,new n.Identifier(l))}else this.match("*")?this.nextToken():(p=this.match("["),s=this.parseObjectPropertyKey());var h=this.qualifiedPropertyName(this.lookahead);if(3===r.type&&!u&&"get"===r.value&&h)t="get",p=this.match("["),s=this.parseObjectPropertyKey(),this.context.allowYield=!1,a=this.parseGetterMethod();else if(3===r.type&&!u&&"set"===r.value&&h)t="set",p=this.match("["),s=this.parseObjectPropertyKey(),a=this.parseSetterMethod();else if(7===r.type&&"*"===r.value&&h)t="init",p=this.match("["),s=this.parseObjectPropertyKey(),a=this.parseGeneratorMethod(),c=!0;else if(s||this.throwUnexpectedToken(this.lookahead),t="init",this.match(":")&&!u)!p&&this.isPropertyKey(s,"__proto__")&&(e.value&&this.tolerateError(o.Messages.DuplicateProtoProperty),e.value=!0),this.nextToken(),a=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match("("))a=u?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),c=!0;else if(3===r.type)if(l=this.finalize(i,new n.Identifier(r.value)),this.match("=")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),d=!0;var m=this.isolateCoverGrammar(this.parseAssignmentExpression);a=this.finalize(i,new n.AssignmentPattern(l,m))}else d=!0,a=l;else this.throwUnexpectedToken(this.nextToken());return this.finalize(i,new n.Property(t,s,p,a,c,d))},e.prototype.parseObjectInitializer=function(){var e=this.createNode();this.expect("{");for(var t=[],i={value:!1};!this.match("}");)t.push(this.parseObjectProperty(i)),this.match("}")||this.expectCommaSeparator();return this.expect("}"),this.finalize(e,new n.ObjectExpression(t))},e.prototype.parseTemplateHead=function(){r.assert(this.lookahead.head,"Template literal must start with a template head");var e=this.createNode(),t=this.nextToken(),i=t.value,s=t.cooked;return this.finalize(e,new n.TemplateElement({raw:i,cooked:s},t.tail))},e.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var e=this.createNode(),t=this.nextToken(),i=t.value,r=t.cooked;return this.finalize(e,new n.TemplateElement({raw:i,cooked:r},t.tail))},e.prototype.parseTemplateLiteral=function(){var e=this.createNode(),t=[],i=[],r=this.parseTemplateHead();for(i.push(r);!r.tail;)t.push(this.parseExpression()),r=this.parseTemplateElement(),i.push(r);return this.finalize(e,new n.TemplateLiteral(i,t))},e.prototype.reinterpretExpressionAsPattern=function(e){switch(e.type){case p.Syntax.Identifier:case p.Syntax.MemberExpression:case p.Syntax.RestElement:case p.Syntax.AssignmentPattern:break;case p.Syntax.SpreadElement:e.type=p.Syntax.RestElement,this.reinterpretExpressionAsPattern(e.argument);break;case p.Syntax.ArrayExpression:e.type=p.Syntax.ArrayPattern;for(var t=0;t<e.elements.length;t++)null!==e.elements[t]&&this.reinterpretExpressionAsPattern(e.elements[t]);break;case p.Syntax.ObjectExpression:for(e.type=p.Syntax.ObjectPattern,t=0;t<e.properties.length;t++)this.reinterpretExpressionAsPattern(e.properties[t].value);break;case p.Syntax.AssignmentExpression:e.type=p.Syntax.AssignmentPattern,delete e.operator,this.reinterpretExpressionAsPattern(e.left)}},e.prototype.parseGroupExpression=function(){var e;if(this.expect("("),this.match(")"))this.nextToken(),this.match("=>")||this.expect("=>"),e={type:d,params:[],async:!1};else{var t=this.lookahead,i=[];if(this.match("..."))e=this.parseRestElement(i),this.expect(")"),this.match("=>")||this.expect("=>"),e={type:d,params:[e],async:!1};else{var r=!1;if(this.context.isBindingElement=!0,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(",")){var s=[];for(this.context.isAssignmentTarget=!1,s.push(e);2!==this.lookahead.type&&this.match(",");){if(this.nextToken(),this.match(")")){this.nextToken();for(var o=0;o<s.length;o++)this.reinterpretExpressionAsPattern(s[o]);r=!0,e={type:d,params:s,async:!1}}else if(this.match("...")){for(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),s.push(this.parseRestElement(i)),this.expect(")"),this.match("=>")||this.expect("=>"),this.context.isBindingElement=!1,o=0;o<s.length;o++)this.reinterpretExpressionAsPattern(s[o]);r=!0,e={type:d,params:s,async:!1}}else s.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(r)break}r||(e=this.finalize(this.startNode(t),new n.SequenceExpression(s)))}if(!r){if(this.expect(")"),this.match("=>")&&(e.type===p.Syntax.Identifier&&"yield"===e.name&&(r=!0,e={type:d,params:[e],async:!1}),!r)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),e.type===p.Syntax.SequenceExpression)for(o=0;o<e.expressions.length;o++)this.reinterpretExpressionAsPattern(e.expressions[o]);else this.reinterpretExpressionAsPattern(e);var a=e.type===p.Syntax.SequenceExpression?e.expressions:[e];e={type:d,params:a,async:!1}}this.context.isBindingElement=!1}}}return e},e.prototype.parseArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.isIdentifierName=function(e){return 3===e.type||4===e.type||1===e.type||5===e.type},e.prototype.parseIdentifierName=function(){var e=this.createNode(),t=this.nextToken();return this.isIdentifierName(t)||this.throwUnexpectedToken(t),this.finalize(e,new n.Identifier(t.value))},e.prototype.parseNewExpression=function(){var e,t=this.createNode(),i=this.parseIdentifierName();if(r.assert("new"===i.name,"New expression must start with `new`"),this.match("."))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&"target"===this.lookahead.value){var s=this.parseIdentifierName();e=new n.MetaProperty(i,s)}else this.throwUnexpectedToken(this.lookahead);else{var o=this.isolateCoverGrammar(this.parseLeftHandSideExpression),a=this.match("(")?this.parseArguments():[];e=new n.NewExpression(o,a),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(t,e)},e.prototype.parseAsyncArgument=function(){var e=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,e},e.prototype.parseAsyncArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.parseLeftHandSideExpressionAllowCall=function(){var e,t=this.lookahead,i=this.matchContextualKeyword("async"),r=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword("super")&&this.context.inFunctionBody?(e=this.createNode(),this.nextToken(),e=this.finalize(e,new n.Super),this.match("(")||this.match(".")||this.match("[")||this.throwUnexpectedToken(this.lookahead)):e=this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");var s=this.parseIdentifierName();e=this.finalize(this.startNode(t),new n.StaticMemberExpression(e,s))}else if(this.match("(")){var o=i&&t.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var a=o?this.parseAsyncArguments():this.parseArguments();if(e=this.finalize(this.startNode(t),new n.CallExpression(e,a)),o&&this.match("=>")){for(var p=0;p<a.length;++p)this.reinterpretExpressionAsPattern(a[p]);e={type:d,params:a,async:!0}}}else if(this.match("["))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("["),s=this.isolateCoverGrammar(this.parseExpression),this.expect("]"),e=this.finalize(this.startNode(t),new n.ComputedMemberExpression(e,s));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var c=this.parseTemplateLiteral();e=this.finalize(this.startNode(t),new n.TaggedTemplateExpression(e,c))}return this.context.allowIn=r,e},e.prototype.parseSuper=function(){var e=this.createNode();return this.expectKeyword("super"),this.match("[")||this.match(".")||this.throwUnexpectedToken(this.lookahead),this.finalize(e,new n.Super)},e.prototype.parseLeftHandSideExpression=function(){r.assert(this.context.allowIn,"callee of new expression always allow in keyword.");for(var e=this.startNode(this.lookahead),t=this.matchKeyword("super")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");var i=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),t=this.finalize(e,new n.ComputedMemberExpression(t,i))}else if(this.match("."))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("."),i=this.parseIdentifierName(),t=this.finalize(e,new n.StaticMemberExpression(t,i));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var s=this.parseTemplateLiteral();t=this.finalize(e,new n.TaggedTemplateExpression(t,s))}return t},e.prototype.parseUpdateExpression=function(){var e,t=this.lookahead;if(this.match("++")||this.match("--")){var i=this.startNode(t),r=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&e.type===p.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(o.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment);var s=!0;e=this.finalize(i,new n.UpdateExpression(r.value,e,s)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(e=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match("++")||this.match("--"))){this.context.strict&&e.type===p.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(o.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var a=this.nextToken().value;s=!1,e=this.finalize(this.startNode(t),new n.UpdateExpression(a,e,s))}return e},e.prototype.parseAwaitExpression=function(){var e=this.createNode();this.nextToken();var t=this.parseUnaryExpression();return this.finalize(e,new n.AwaitExpression(t))},e.prototype.parseUnaryExpression=function(){var e;if(this.match("+")||this.match("-")||this.match("~")||this.match("!")||this.matchKeyword("delete")||this.matchKeyword("void")||this.matchKeyword("typeof")){var t=this.startNode(this.lookahead),i=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),e=this.finalize(t,new n.UnaryExpression(i.value,e)),this.context.strict&&"delete"===e.operator&&e.argument.type===p.Syntax.Identifier&&this.tolerateError(o.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else e=this.context.await&&this.matchContextualKeyword("await")?this.parseAwaitExpression():this.parseUpdateExpression();return e},e.prototype.parseExponentiationExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseUnaryExpression);if(t.type!==p.Syntax.UnaryExpression&&this.match("**")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var i=t,r=this.isolateCoverGrammar(this.parseExponentiationExpression);t=this.finalize(this.startNode(e),new n.BinaryExpression("**",i,r))}return t},e.prototype.binaryPrecedence=function(e){var t=e.value;return 7===e.type?this.operatorPrecedence[t]||0:4===e.type&&("instanceof"===t||this.context.allowIn&&"in"===t)?7:0},e.prototype.parseBinaryExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseExponentiationExpression),i=this.lookahead,r=this.binaryPrecedence(i);if(r>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var s=[e,this.lookahead],o=t,a=this.isolateCoverGrammar(this.parseExponentiationExpression),p=[o,i.value,a],c=[r];!((r=this.binaryPrecedence(this.lookahead))<=0);){for(;p.length>2&&r<=c[c.length-1];){a=p.pop();var d=p.pop();c.pop(),o=p.pop(),s.pop();var u=this.startNode(s[s.length-1]);p.push(this.finalize(u,new n.BinaryExpression(d,o,a)))}p.push(this.nextToken().value),c.push(r),s.push(this.lookahead),p.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var l=p.length-1;t=p[l];for(var h=s.pop();l>1;){var m=s.pop(),f=h&&h.lineStart;u=this.startNode(m,f),d=p[l-1],t=this.finalize(u,new n.BinaryExpression(d,p[l-2],t)),l-=2,h=m}}return t},e.prototype.parseConditionalExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match("?")){this.nextToken();var i=this.context.allowIn;this.context.allowIn=!0;var r=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=i,this.expect(":");var s=this.isolateCoverGrammar(this.parseAssignmentExpression);t=this.finalize(this.startNode(e),new n.ConditionalExpression(t,r,s)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return t},e.prototype.checkPatternParam=function(e,t){switch(t.type){case p.Syntax.Identifier:this.validateParam(e,t,t.name);break;case p.Syntax.RestElement:this.checkPatternParam(e,t.argument);break;case p.Syntax.AssignmentPattern:this.checkPatternParam(e,t.left);break;case p.Syntax.ArrayPattern:for(var i=0;i<t.elements.length;i++)null!==t.elements[i]&&this.checkPatternParam(e,t.elements[i]);break;case p.Syntax.ObjectPattern:for(i=0;i<t.properties.length;i++)this.checkPatternParam(e,t.properties[i].value)}e.simple=e.simple&&t instanceof n.Identifier},e.prototype.reinterpretAsCoverFormalsList=function(e){var t,i=[e],r=!1;switch(e.type){case p.Syntax.Identifier:break;case d:i=e.params,r=e.async;break;default:return null}t={simple:!0,paramSet:{}};for(var s=0;s<i.length;++s)(n=i[s]).type===p.Syntax.AssignmentPattern?n.right.type===p.Syntax.YieldExpression&&(n.right.argument&&this.throwUnexpectedToken(this.lookahead),n.right.type=p.Syntax.Identifier,n.right.name="yield",delete n.right.argument,delete n.right.delegate):r&&n.type===p.Syntax.Identifier&&"await"===n.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(t,n),i[s]=n;if(this.context.strict||!this.context.allowYield)for(s=0;s<i.length;++s){var n;(n=i[s]).type===p.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(t.message===o.Messages.StrictParamDupe){var a=this.context.strict?t.stricted:t.firstRestricted;this.throwUnexpectedToken(a,t.message)}return{simple:t.simple,params:i,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.parseAssignmentExpression=function(){var e;if(!this.context.allowYield&&this.matchKeyword("yield"))e=this.parseYieldExpression();else{var t=this.lookahead,i=t;if(e=this.parseConditionalExpression(),3===i.type&&i.lineNumber===this.lookahead.lineNumber&&"async"===i.value&&(3===this.lookahead.type||this.matchKeyword("yield"))){var r=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(r),e={type:d,params:[r],async:!0}}if(e.type===d||this.match("=>")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var s=e.async,a=this.reinterpretAsCoverFormalsList(e);if(a){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var c=this.context.strict,u=this.context.allowStrictDirective;this.context.allowStrictDirective=a.simple;var l=this.context.allowYield,h=this.context.await;this.context.allowYield=!0,this.context.await=s;var m=this.startNode(t);this.expect("=>");var f=void 0;if(this.match("{")){var y=this.context.allowIn;this.context.allowIn=!0,f=this.parseFunctionSourceElements(),this.context.allowIn=y}else f=this.isolateCoverGrammar(this.parseAssignmentExpression);var g=f.type!==p.Syntax.BlockStatement;this.context.strict&&a.firstRestricted&&this.throwUnexpectedToken(a.firstRestricted,a.message),this.context.strict&&a.stricted&&this.tolerateUnexpectedToken(a.stricted,a.message),e=s?this.finalize(m,new n.AsyncArrowFunctionExpression(a.params,f,g)):this.finalize(m,new n.ArrowFunctionExpression(a.params,f,g)),this.context.strict=c,this.context.allowStrictDirective=u,this.context.allowYield=l,this.context.await=h}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(o.Messages.InvalidLHSInAssignment),this.context.strict&&e.type===p.Syntax.Identifier){var x=e;this.scanner.isRestrictedWord(x.name)&&this.tolerateUnexpectedToken(i,o.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(x.name)&&this.tolerateUnexpectedToken(i,o.Messages.StrictReservedWord)}this.match("=")?this.reinterpretExpressionAsPattern(e):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var b=(i=this.nextToken()).value,v=this.isolateCoverGrammar(this.parseAssignmentExpression);e=this.finalize(this.startNode(t),new n.AssignmentExpression(b,e,v)),this.context.firstCoverInitializedNameError=null}}return e},e.prototype.parseExpression=function(){var e=this.lookahead,t=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(",")){var i=[];for(i.push(t);2!==this.lookahead.type&&this.match(",");)this.nextToken(),i.push(this.isolateCoverGrammar(this.parseAssignmentExpression));t=this.finalize(this.startNode(e),new n.SequenceExpression(i))}return t},e.prototype.parseStatementListItem=function(){var e;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case"export":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,o.Messages.IllegalExportDeclaration),e=this.parseExportDeclaration();break;case"import":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,o.Messages.IllegalImportDeclaration),e=this.parseImportDeclaration();break;case"const":e=this.parseLexicalDeclaration({inFor:!1});break;case"function":e=this.parseFunctionDeclaration();break;case"class":e=this.parseClassDeclaration();break;case"let":e=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:e=this.parseStatement()}else e=this.parseStatement();return e},e.prototype.parseBlock=function(){var e=this.createNode();this.expect("{");for(var t=[];!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.finalize(e,new n.BlockStatement(t))},e.prototype.parseLexicalBinding=function(e,t){var i=this.createNode(),r=this.parsePattern([],e);this.context.strict&&r.type===p.Syntax.Identifier&&this.scanner.isRestrictedWord(r.name)&&this.tolerateError(o.Messages.StrictVarName);var s=null;return"const"===e?this.matchKeyword("in")||this.matchContextualKeyword("of")||(this.match("=")?(this.nextToken(),s=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(o.Messages.DeclarationMissingInitializer,"const")):(!t.inFor&&r.type!==p.Syntax.Identifier||this.match("="))&&(this.expect("="),s=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(i,new n.VariableDeclarator(r,s))},e.prototype.parseBindingList=function(e,t){for(var i=[this.parseLexicalBinding(e,t)];this.match(",");)this.nextToken(),i.push(this.parseLexicalBinding(e,t));return i},e.prototype.isLexicalDeclaration=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();return this.scanner.restoreState(e),3===t.type||7===t.type&&"["===t.value||7===t.type&&"{"===t.value||4===t.type&&"let"===t.value||4===t.type&&"yield"===t.value},e.prototype.parseLexicalDeclaration=function(e){var t=this.createNode(),i=this.nextToken().value;r.assert("let"===i||"const"===i,"Lexical declaration must be either let or const");var s=this.parseBindingList(i,e);return this.consumeSemicolon(),this.finalize(t,new n.VariableDeclaration(s,i))},e.prototype.parseBindingRestElement=function(e,t){var i=this.createNode();this.expect("...");var r=this.parsePattern(e,t);return this.finalize(i,new n.RestElement(r))},e.prototype.parseArrayPattern=function(e,t){var i=this.createNode();this.expect("[");for(var r=[];!this.match("]");)if(this.match(","))this.nextToken(),r.push(null);else{if(this.match("...")){r.push(this.parseBindingRestElement(e,t));break}r.push(this.parsePatternWithDefault(e,t)),this.match("]")||this.expect(",")}return this.expect("]"),this.finalize(i,new n.ArrayPattern(r))},e.prototype.parsePropertyPattern=function(e,t){var i,r,s=this.createNode(),o=!1,a=!1;if(3===this.lookahead.type){var p=this.lookahead;i=this.parseVariableIdentifier();var c=this.finalize(s,new n.Identifier(p.value));if(this.match("=")){e.push(p),a=!0,this.nextToken();var d=this.parseAssignmentExpression();r=this.finalize(this.startNode(p),new n.AssignmentPattern(c,d))}else this.match(":")?(this.expect(":"),r=this.parsePatternWithDefault(e,t)):(e.push(p),a=!0,r=c)}else o=this.match("["),i=this.parseObjectPropertyKey(),this.expect(":"),r=this.parsePatternWithDefault(e,t);return this.finalize(s,new n.Property("init",i,o,r,!1,a))},e.prototype.parseObjectPattern=function(e,t){var i=this.createNode(),r=[];for(this.expect("{");!this.match("}");)r.push(this.parsePropertyPattern(e,t)),this.match("}")||this.expect(",");return this.expect("}"),this.finalize(i,new n.ObjectPattern(r))},e.prototype.parsePattern=function(e,t){var i;return this.match("[")?i=this.parseArrayPattern(e,t):this.match("{")?i=this.parseObjectPattern(e,t):(!this.matchKeyword("let")||"const"!==t&&"let"!==t||this.tolerateUnexpectedToken(this.lookahead,o.Messages.LetInLexicalBinding),e.push(this.lookahead),i=this.parseVariableIdentifier(t)),i},e.prototype.parsePatternWithDefault=function(e,t){var i=this.lookahead,r=this.parsePattern(e,t);if(this.match("=")){this.nextToken();var s=this.context.allowYield;this.context.allowYield=!0;var o=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=s,r=this.finalize(this.startNode(i),new n.AssignmentPattern(r,o))}return r},e.prototype.parseVariableIdentifier=function(e){var t=this.createNode(),i=this.nextToken();return 4===i.type&&"yield"===i.value?this.context.strict?this.tolerateUnexpectedToken(i,o.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(i):3!==i.type?this.context.strict&&4===i.type&&this.scanner.isStrictModeReservedWord(i.value)?this.tolerateUnexpectedToken(i,o.Messages.StrictReservedWord):(this.context.strict||"let"!==i.value||"var"!==e)&&this.throwUnexpectedToken(i):(this.context.isModule||this.context.await)&&3===i.type&&"await"===i.value&&this.tolerateUnexpectedToken(i),this.finalize(t,new n.Identifier(i.value))},e.prototype.parseVariableDeclaration=function(e){var t=this.createNode(),i=this.parsePattern([],"var");this.context.strict&&i.type===p.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(o.Messages.StrictVarName);var r=null;return this.match("=")?(this.nextToken(),r=this.isolateCoverGrammar(this.parseAssignmentExpression)):i.type===p.Syntax.Identifier||e.inFor||this.expect("="),this.finalize(t,new n.VariableDeclarator(i,r))},e.prototype.parseVariableDeclarationList=function(e){var t={inFor:e.inFor},i=[];for(i.push(this.parseVariableDeclaration(t));this.match(",");)this.nextToken(),i.push(this.parseVariableDeclaration(t));return i},e.prototype.parseVariableStatement=function(){var e=this.createNode();this.expectKeyword("var");var t=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(e,new n.VariableDeclaration(t,"var"))},e.prototype.parseEmptyStatement=function(){var e=this.createNode();return this.expect(";"),this.finalize(e,new n.EmptyStatement)},e.prototype.parseExpressionStatement=function(){var e=this.createNode(),t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new n.ExpressionStatement(t))},e.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword("function")&&this.tolerateError(o.Messages.StrictFunction),this.parseStatement()},e.prototype.parseIfStatement=function(){var e,t=this.createNode(),i=null;this.expectKeyword("if"),this.expect("(");var r=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new n.EmptyStatement)):(this.expect(")"),e=this.parseIfClause(),this.matchKeyword("else")&&(this.nextToken(),i=this.parseIfClause())),this.finalize(t,new n.IfStatement(r,e,i))},e.prototype.parseDoWhileStatement=function(){var e=this.createNode();this.expectKeyword("do");var t=this.context.inIteration;this.context.inIteration=!0;var i=this.parseStatement();this.context.inIteration=t,this.expectKeyword("while"),this.expect("(");var r=this.parseExpression();return!this.match(")")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(")"),this.match(";")&&this.nextToken()),this.finalize(e,new n.DoWhileStatement(i,r))},e.prototype.parseWhileStatement=function(){var e,t=this.createNode();this.expectKeyword("while"),this.expect("(");var i=this.parseExpression();if(!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new n.EmptyStatement);else{this.expect(")");var r=this.context.inIteration;this.context.inIteration=!0,e=this.parseStatement(),this.context.inIteration=r}return this.finalize(t,new n.WhileStatement(i,e))},e.prototype.parseForStatement=function(){var e,t,i,r=null,s=null,a=null,c=!0,d=this.createNode();if(this.expectKeyword("for"),this.expect("("),this.match(";"))this.nextToken();else if(this.matchKeyword("var")){r=this.createNode(),this.nextToken();var u=this.context.allowIn;this.context.allowIn=!1;var l=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=u,1===l.length&&this.matchKeyword("in")){var h=l[0];h.init&&(h.id.type===p.Syntax.ArrayPattern||h.id.type===p.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(o.Messages.ForInOfLoopInitializer,"for-in"),r=this.finalize(r,new n.VariableDeclaration(l,"var")),this.nextToken(),e=r,t=this.parseExpression(),r=null}else 1===l.length&&null===l[0].init&&this.matchContextualKeyword("of")?(r=this.finalize(r,new n.VariableDeclaration(l,"var")),this.nextToken(),e=r,t=this.parseAssignmentExpression(),r=null,c=!1):(r=this.finalize(r,new n.VariableDeclaration(l,"var")),this.expect(";"))}else if(this.matchKeyword("const")||this.matchKeyword("let")){r=this.createNode();var m=this.nextToken().value;this.context.strict||"in"!==this.lookahead.value?(u=this.context.allowIn,this.context.allowIn=!1,l=this.parseBindingList(m,{inFor:!0}),this.context.allowIn=u,1===l.length&&null===l[0].init&&this.matchKeyword("in")?(r=this.finalize(r,new n.VariableDeclaration(l,m)),this.nextToken(),e=r,t=this.parseExpression(),r=null):1===l.length&&null===l[0].init&&this.matchContextualKeyword("of")?(r=this.finalize(r,new n.VariableDeclaration(l,m)),this.nextToken(),e=r,t=this.parseAssignmentExpression(),r=null,c=!1):(this.consumeSemicolon(),r=this.finalize(r,new n.VariableDeclaration(l,m)))):(r=this.finalize(r,new n.Identifier(m)),this.nextToken(),e=r,t=this.parseExpression(),r=null)}else{var f=this.lookahead;if(u=this.context.allowIn,this.context.allowIn=!1,r=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=u,this.matchKeyword("in"))this.context.isAssignmentTarget&&r.type!==p.Syntax.AssignmentExpression||this.tolerateError(o.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(r),e=r,t=this.parseExpression(),r=null;else if(this.matchContextualKeyword("of"))this.context.isAssignmentTarget&&r.type!==p.Syntax.AssignmentExpression||this.tolerateError(o.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(r),e=r,t=this.parseAssignmentExpression(),r=null,c=!1;else{if(this.match(",")){for(var y=[r];this.match(",");)this.nextToken(),y.push(this.isolateCoverGrammar(this.parseAssignmentExpression));r=this.finalize(this.startNode(f),new n.SequenceExpression(y))}this.expect(";")}}if(void 0===e&&(this.match(";")||(s=this.parseExpression()),this.expect(";"),this.match(")")||(a=this.parseExpression())),!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),i=this.finalize(this.createNode(),new n.EmptyStatement);else{this.expect(")");var g=this.context.inIteration;this.context.inIteration=!0,i=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=g}return void 0===e?this.finalize(d,new n.ForStatement(r,s,a,i)):c?this.finalize(d,new n.ForInStatement(e,t,i)):this.finalize(d,new n.ForOfStatement(e,t,i))},e.prototype.parseContinueStatement=function(){var e=this.createNode();this.expectKeyword("continue");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier();t=i;var r="$"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,r)||this.throwError(o.Messages.UnknownLabel,i.name)}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.throwError(o.Messages.IllegalContinue),this.finalize(e,new n.ContinueStatement(t))},e.prototype.parseBreakStatement=function(){var e=this.createNode();this.expectKeyword("break");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier(),r="$"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,r)||this.throwError(o.Messages.UnknownLabel,i.name),t=i}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.context.inSwitch||this.throwError(o.Messages.IllegalBreak),this.finalize(e,new n.BreakStatement(t))},e.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(o.Messages.IllegalReturn);var e=this.createNode();this.expectKeyword("return");var t=(this.match(";")||this.match("}")||this.hasLineTerminator||2===this.lookahead.type)&&8!==this.lookahead.type&&10!==this.lookahead.type?null:this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new n.ReturnStatement(t))},e.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(o.Messages.StrictModeWith);var e,t=this.createNode();this.expectKeyword("with"),this.expect("(");var i=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new n.EmptyStatement)):(this.expect(")"),e=this.parseStatement()),this.finalize(t,new n.WithStatement(i,e))},e.prototype.parseSwitchCase=function(){var e,t=this.createNode();this.matchKeyword("default")?(this.nextToken(),e=null):(this.expectKeyword("case"),e=this.parseExpression()),this.expect(":");for(var i=[];!(this.match("}")||this.matchKeyword("default")||this.matchKeyword("case"));)i.push(this.parseStatementListItem());return this.finalize(t,new n.SwitchCase(e,i))},e.prototype.parseSwitchStatement=function(){var e=this.createNode();this.expectKeyword("switch"),this.expect("(");var t=this.parseExpression();this.expect(")");var i=this.context.inSwitch;this.context.inSwitch=!0;var r=[],s=!1;for(this.expect("{");!this.match("}");){var a=this.parseSwitchCase();null===a.test&&(s&&this.throwError(o.Messages.MultipleDefaultsInSwitch),s=!0),r.push(a)}return this.expect("}"),this.context.inSwitch=i,this.finalize(e,new n.SwitchStatement(t,r))},e.prototype.parseLabelledStatement=function(){var e,t=this.createNode(),i=this.parseExpression();if(i.type===p.Syntax.Identifier&&this.match(":")){this.nextToken();var r=i,s="$"+r.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,s)&&this.throwError(o.Messages.Redeclaration,"Label",r.name),this.context.labelSet[s]=!0;var a=void 0;if(this.matchKeyword("class"))this.tolerateUnexpectedToken(this.lookahead),a=this.parseClassDeclaration();else if(this.matchKeyword("function")){var c=this.lookahead,d=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(c,o.Messages.StrictFunction):d.generator&&this.tolerateUnexpectedToken(c,o.Messages.GeneratorInLegacyContext),a=d}else a=this.parseStatement();delete this.context.labelSet[s],e=new n.LabeledStatement(r,a)}else this.consumeSemicolon(),e=new n.ExpressionStatement(i);return this.finalize(t,e)},e.prototype.parseThrowStatement=function(){var e=this.createNode();this.expectKeyword("throw"),this.hasLineTerminator&&this.throwError(o.Messages.NewlineAfterThrow);var t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new n.ThrowStatement(t))},e.prototype.parseCatchClause=function(){var e=this.createNode();this.expectKeyword("catch"),this.expect("("),this.match(")")&&this.throwUnexpectedToken(this.lookahead);for(var t=[],i=this.parsePattern(t),r={},s=0;s<t.length;s++){var a="$"+t[s].value;Object.prototype.hasOwnProperty.call(r,a)&&this.tolerateError(o.Messages.DuplicateBinding,t[s].value),r[a]=!0}this.context.strict&&i.type===p.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(o.Messages.StrictCatchVariable),this.expect(")");var c=this.parseBlock();return this.finalize(e,new n.CatchClause(i,c))},e.prototype.parseFinallyClause=function(){return this.expectKeyword("finally"),this.parseBlock()},e.prototype.parseTryStatement=function(){var e=this.createNode();this.expectKeyword("try");var t=this.parseBlock(),i=this.matchKeyword("catch")?this.parseCatchClause():null,r=this.matchKeyword("finally")?this.parseFinallyClause():null;return i||r||this.throwError(o.Messages.NoCatchOrFinally),this.finalize(e,new n.TryStatement(t,i,r))},e.prototype.parseDebuggerStatement=function(){var e=this.createNode();return this.expectKeyword("debugger"),this.consumeSemicolon(),this.finalize(e,new n.DebuggerStatement)},e.prototype.parseStatement=function(){var e;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:e=this.parseExpressionStatement();break;case 7:var t=this.lookahead.value;e="{"===t?this.parseBlock():"("===t?this.parseExpressionStatement():";"===t?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:e=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case"break":e=this.parseBreakStatement();break;case"continue":e=this.parseContinueStatement();break;case"debugger":e=this.parseDebuggerStatement();break;case"do":e=this.parseDoWhileStatement();break;case"for":e=this.parseForStatement();break;case"function":e=this.parseFunctionDeclaration();break;case"if":e=this.parseIfStatement();break;case"return":e=this.parseReturnStatement();break;case"switch":e=this.parseSwitchStatement();break;case"throw":e=this.parseThrowStatement();break;case"try":e=this.parseTryStatement();break;case"var":e=this.parseVariableStatement();break;case"while":e=this.parseWhileStatement();break;case"with":e=this.parseWithStatement();break;default:e=this.parseExpressionStatement()}break;default:e=this.throwUnexpectedToken(this.lookahead)}return e},e.prototype.parseFunctionSourceElements=function(){var e=this.createNode();this.expect("{");var t=this.parseDirectivePrologues(),i=this.context.labelSet,r=this.context.inIteration,s=this.context.inSwitch,o=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.context.labelSet=i,this.context.inIteration=r,this.context.inSwitch=s,this.context.inFunctionBody=o,this.finalize(e,new n.BlockStatement(t))},e.prototype.validateParam=function(e,t,i){var r="$"+i;this.context.strict?(this.scanner.isRestrictedWord(i)&&(e.stricted=t,e.message=o.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,r)&&(e.stricted=t,e.message=o.Messages.StrictParamDupe)):e.firstRestricted||(this.scanner.isRestrictedWord(i)?(e.firstRestricted=t,e.message=o.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(i)?(e.firstRestricted=t,e.message=o.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,r)&&(e.stricted=t,e.message=o.Messages.StrictParamDupe)),"function"==typeof Object.defineProperty?Object.defineProperty(e.paramSet,r,{value:!0,enumerable:!0,writable:!0,configurable:!0}):e.paramSet[r]=!0},e.prototype.parseRestElement=function(e){var t=this.createNode();this.expect("...");var i=this.parsePattern(e);return this.match("=")&&this.throwError(o.Messages.DefaultRestParameter),this.match(")")||this.throwError(o.Messages.ParameterAfterRestParameter),this.finalize(t,new n.RestElement(i))},e.prototype.parseFormalParameter=function(e){for(var t=[],i=this.match("...")?this.parseRestElement(t):this.parsePatternWithDefault(t),r=0;r<t.length;r++)this.validateParam(e,t[r],t[r].value);e.simple=e.simple&&i instanceof n.Identifier,e.params.push(i)},e.prototype.parseFormalParameters=function(e){var t;if(t={simple:!0,params:[],firstRestricted:e},this.expect("("),!this.match(")"))for(t.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(t),!this.match(")"))&&(this.expect(","),!this.match(")")););return this.expect(")"),{simple:t.simple,params:t.params,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.matchAsyncFunction=function(){var e=this.matchContextualKeyword("async");if(e){var t=this.scanner.saveState();this.scanner.scanComments();var i=this.scanner.lex();this.scanner.restoreState(t),e=t.lineNumber===i.lineNumber&&4===i.type&&"function"===i.value}return e},e.prototype.parseFunctionDeclaration=function(e){var t=this.createNode(),i=this.matchContextualKeyword("async");i&&this.nextToken(),this.expectKeyword("function");var r,s=!i&&this.match("*");s&&this.nextToken();var a=null,p=null;if(!e||!this.match("(")){var c=this.lookahead;a=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(c.value)&&this.tolerateUnexpectedToken(c,o.Messages.StrictFunctionName):this.scanner.isRestrictedWord(c.value)?(p=c,r=o.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(c.value)&&(p=c,r=o.Messages.StrictReservedWord)}var d=this.context.await,u=this.context.allowYield;this.context.await=i,this.context.allowYield=!s;var l=this.parseFormalParameters(p),h=l.params,m=l.stricted;p=l.firstRestricted,l.message&&(r=l.message);var f=this.context.strict,y=this.context.allowStrictDirective;this.context.allowStrictDirective=l.simple;var g=this.parseFunctionSourceElements();return this.context.strict&&p&&this.throwUnexpectedToken(p,r),this.context.strict&&m&&this.tolerateUnexpectedToken(m,r),this.context.strict=f,this.context.allowStrictDirective=y,this.context.await=d,this.context.allowYield=u,i?this.finalize(t,new n.AsyncFunctionDeclaration(a,h,g)):this.finalize(t,new n.FunctionDeclaration(a,h,g,s))},e.prototype.parseFunctionExpression=function(){var e=this.createNode(),t=this.matchContextualKeyword("async");t&&this.nextToken(),this.expectKeyword("function");var i,r=!t&&this.match("*");r&&this.nextToken();var s,a=null,p=this.context.await,c=this.context.allowYield;if(this.context.await=t,this.context.allowYield=!r,!this.match("(")){var d=this.lookahead;a=this.context.strict||r||!this.matchKeyword("yield")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(d.value)&&this.tolerateUnexpectedToken(d,o.Messages.StrictFunctionName):this.scanner.isRestrictedWord(d.value)?(s=d,i=o.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(d.value)&&(s=d,i=o.Messages.StrictReservedWord)}var u=this.parseFormalParameters(s),l=u.params,h=u.stricted;s=u.firstRestricted,u.message&&(i=u.message);var m=this.context.strict,f=this.context.allowStrictDirective;this.context.allowStrictDirective=u.simple;var y=this.parseFunctionSourceElements();return this.context.strict&&s&&this.throwUnexpectedToken(s,i),this.context.strict&&h&&this.tolerateUnexpectedToken(h,i),this.context.strict=m,this.context.allowStrictDirective=f,this.context.await=p,this.context.allowYield=c,t?this.finalize(e,new n.AsyncFunctionExpression(a,l,y)):this.finalize(e,new n.FunctionExpression(a,l,y,r))},e.prototype.parseDirective=function(){var e=this.lookahead,t=this.createNode(),i=this.parseExpression(),r=i.type===p.Syntax.Literal?this.getTokenRaw(e).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(t,r?new n.Directive(i,r):new n.ExpressionStatement(i))},e.prototype.parseDirectivePrologues=function(){for(var e=null,t=[];;){var i=this.lookahead;if(8!==i.type)break;var r=this.parseDirective();t.push(r);var s=r.directive;if("string"!=typeof s)break;"use strict"===s?(this.context.strict=!0,e&&this.tolerateUnexpectedToken(e,o.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(i,o.Messages.IllegalLanguageModeDirective)):!e&&i.octal&&(e=i)}return t},e.prototype.qualifiedPropertyName=function(e){switch(e.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return"["===e.value}return!1},e.prototype.parseGetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();i.params.length>0&&this.tolerateError(o.Messages.BadGetterArity);var r=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new n.FunctionExpression(null,i.params,r,!1))},e.prototype.parseSetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();1!==i.params.length?this.tolerateError(o.Messages.BadSetterArity):i.params[0]instanceof n.RestElement&&this.tolerateError(o.Messages.BadSetterRestParameter);var r=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new n.FunctionExpression(null,i.params,r,!1))},e.prototype.parseGeneratorMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();this.context.allowYield=!1;var r=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new n.FunctionExpression(null,i.params,r,!0))},e.prototype.isStartOfExpression=function(){var e=!0,t=this.lookahead.value;switch(this.lookahead.type){case 7:e="["===t||"("===t||"{"===t||"+"===t||"-"===t||"!"===t||"~"===t||"++"===t||"--"===t||"/"===t||"/="===t;break;case 4:e="class"===t||"delete"===t||"function"===t||"let"===t||"new"===t||"super"===t||"this"===t||"typeof"===t||"void"===t||"yield"===t}return e},e.prototype.parseYieldExpression=function(){var e=this.createNode();this.expectKeyword("yield");var t=null,i=!1;if(!this.hasLineTerminator){var r=this.context.allowYield;this.context.allowYield=!1,(i=this.match("*"))?(this.nextToken(),t=this.parseAssignmentExpression()):this.isStartOfExpression()&&(t=this.parseAssignmentExpression()),this.context.allowYield=r}return this.finalize(e,new n.YieldExpression(t,i))},e.prototype.parseClassElement=function(e){var t=this.lookahead,i=this.createNode(),r="",s=null,a=null,p=!1,c=!1,d=!1,u=!1;if(this.match("*"))this.nextToken();else if(p=this.match("["),"static"===(s=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match("*"))&&(t=this.lookahead,d=!0,p=this.match("["),this.match("*")?this.nextToken():s=this.parseObjectPropertyKey()),3===t.type&&!this.hasLineTerminator&&"async"===t.value){var l=this.lookahead.value;":"!==l&&"("!==l&&"*"!==l&&(u=!0,t=this.lookahead,s=this.parseObjectPropertyKey(),3===t.type&&"constructor"===t.value&&this.tolerateUnexpectedToken(t,o.Messages.ConstructorIsAsync))}var h=this.qualifiedPropertyName(this.lookahead);return 3===t.type?"get"===t.value&&h?(r="get",p=this.match("["),s=this.parseObjectPropertyKey(),this.context.allowYield=!1,a=this.parseGetterMethod()):"set"===t.value&&h&&(r="set",p=this.match("["),s=this.parseObjectPropertyKey(),a=this.parseSetterMethod()):7===t.type&&"*"===t.value&&h&&(r="init",p=this.match("["),s=this.parseObjectPropertyKey(),a=this.parseGeneratorMethod(),c=!0),!r&&s&&this.match("(")&&(r="init",a=u?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),c=!0),r||this.throwUnexpectedToken(this.lookahead),"init"===r&&(r="method"),p||(d&&this.isPropertyKey(s,"prototype")&&this.throwUnexpectedToken(t,o.Messages.StaticPrototype),!d&&this.isPropertyKey(s,"constructor")&&(("method"!==r||!c||a&&a.generator)&&this.throwUnexpectedToken(t,o.Messages.ConstructorSpecialMethod),e.value?this.throwUnexpectedToken(t,o.Messages.DuplicateConstructor):e.value=!0,r="constructor")),this.finalize(i,new n.MethodDefinition(s,p,a,r,d))},e.prototype.parseClassElementList=function(){var e=[],t={value:!1};for(this.expect("{");!this.match("}");)this.match(";")?this.nextToken():e.push(this.parseClassElement(t));return this.expect("}"),e},e.prototype.parseClassBody=function(){var e=this.createNode(),t=this.parseClassElementList();return this.finalize(e,new n.ClassBody(t))},e.prototype.parseClassDeclaration=function(e){var t=this.createNode(),i=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var r=e&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),s=null;this.matchKeyword("extends")&&(this.nextToken(),s=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var o=this.parseClassBody();return this.context.strict=i,this.finalize(t,new n.ClassDeclaration(r,s,o))},e.prototype.parseClassExpression=function(){var e=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var i=3===this.lookahead.type?this.parseVariableIdentifier():null,r=null;this.matchKeyword("extends")&&(this.nextToken(),r=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var s=this.parseClassBody();return this.context.strict=t,this.finalize(e,new n.ClassExpression(i,r,s))},e.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new n.Module(t))},e.prototype.parseScript=function(){for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new n.Script(t))},e.prototype.parseModuleSpecifier=function(){var e=this.createNode();8!==this.lookahead.type&&this.throwError(o.Messages.InvalidModuleSpecifier);var t=this.nextToken(),i=this.getTokenRaw(t);return this.finalize(e,new n.Literal(t.value,i))},e.prototype.parseImportSpecifier=function(){var e,t,i=this.createNode();return 3===this.lookahead.type?(t=e=this.parseVariableIdentifier(),this.matchContextualKeyword("as")&&(this.nextToken(),t=this.parseVariableIdentifier())):(t=e=this.parseIdentifierName(),this.matchContextualKeyword("as")?(this.nextToken(),t=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(i,new n.ImportSpecifier(t,e))},e.prototype.parseNamedImports=function(){this.expect("{");for(var e=[];!this.match("}");)e.push(this.parseImportSpecifier()),this.match("}")||this.expect(",");return this.expect("}"),e},e.prototype.parseImportDefaultSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName();return this.finalize(e,new n.ImportDefaultSpecifier(t))},e.prototype.parseImportNamespaceSpecifier=function(){var e=this.createNode();this.expect("*"),this.matchContextualKeyword("as")||this.throwError(o.Messages.NoAsAfterImportNamespace),this.nextToken();var t=this.parseIdentifierName();return this.finalize(e,new n.ImportNamespaceSpecifier(t))},e.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(o.Messages.IllegalImportDeclaration);var e,t=this.createNode();this.expectKeyword("import");var i=[];if(8===this.lookahead.type)e=this.parseModuleSpecifier();else{if(this.match("{")?i=i.concat(this.parseNamedImports()):this.match("*")?i.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword("default")?(i.push(this.parseImportDefaultSpecifier()),this.match(",")&&(this.nextToken(),this.match("*")?i.push(this.parseImportNamespaceSpecifier()):this.match("{")?i=i.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword("from")){var r=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause;this.throwError(r,this.lookahead.value)}this.nextToken(),e=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(t,new n.ImportDeclaration(i,e))},e.prototype.parseExportSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName(),i=t;return this.matchContextualKeyword("as")&&(this.nextToken(),i=this.parseIdentifierName()),this.finalize(e,new n.ExportSpecifier(t,i))},e.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(o.Messages.IllegalExportDeclaration);var e,t=this.createNode();if(this.expectKeyword("export"),this.matchKeyword("default"))if(this.nextToken(),this.matchKeyword("function")){var i=this.parseFunctionDeclaration(!0);e=this.finalize(t,new n.ExportDefaultDeclaration(i))}else this.matchKeyword("class")?(i=this.parseClassDeclaration(!0),e=this.finalize(t,new n.ExportDefaultDeclaration(i))):this.matchContextualKeyword("async")?(i=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression(),e=this.finalize(t,new n.ExportDefaultDeclaration(i))):(this.matchContextualKeyword("from")&&this.throwError(o.Messages.UnexpectedToken,this.lookahead.value),i=this.match("{")?this.parseObjectInitializer():this.match("[")?this.parseArrayInitializer():this.parseAssignmentExpression(),this.consumeSemicolon(),e=this.finalize(t,new n.ExportDefaultDeclaration(i)));else if(this.match("*")){if(this.nextToken(),!this.matchContextualKeyword("from")){var r=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause;this.throwError(r,this.lookahead.value)}this.nextToken();var s=this.parseModuleSpecifier();this.consumeSemicolon(),e=this.finalize(t,new n.ExportAllDeclaration(s))}else if(4===this.lookahead.type){switch(i=void 0,this.lookahead.value){case"let":case"const":i=this.parseLexicalDeclaration({inFor:!1});break;case"var":case"class":case"function":i=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}e=this.finalize(t,new n.ExportNamedDeclaration(i,[],null))}else if(this.matchAsyncFunction())i=this.parseFunctionDeclaration(),e=this.finalize(t,new n.ExportNamedDeclaration(i,[],null));else{var a=[],p=null,c=!1;for(this.expect("{");!this.match("}");)c=c||this.matchKeyword("default"),a.push(this.parseExportSpecifier()),this.match("}")||this.expect(",");this.expect("}"),this.matchContextualKeyword("from")?(this.nextToken(),p=this.parseModuleSpecifier(),this.consumeSemicolon()):c?(r=this.lookahead.value?o.Messages.UnexpectedToken:o.Messages.MissingFromClause,this.throwError(r,this.lookahead.value)):this.consumeSemicolon(),e=this.finalize(t,new n.ExportNamedDeclaration(null,a,p))}return e},e}();t.Parser=u},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=function(e,t){if(!e)throw new Error("ASSERT: "+t)}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(){this.errors=[],this.tolerant=!1}return e.prototype.recordError=function(e){this.errors.push(e)},e.prototype.tolerate=function(e){if(!this.tolerant)throw e;this.recordError(e)},e.prototype.constructError=function(e,t){var i=new Error(e);try{throw i}catch(e){Object.create&&Object.defineProperty&&(i=Object.create(e),Object.defineProperty(i,"column",{value:t}))}return i},e.prototype.createError=function(e,t,i,r){var s="Line "+t+": "+r,o=this.constructError(s,i);return o.index=e,o.lineNumber=t,o.description=r,o},e.prototype.throwError=function(e,t,i,r){throw this.createError(e,t,i,r)},e.prototype.tolerateError=function(e,t,i,r){var s=this.createError(e,t,i,r);if(!this.tolerant)throw s;this.recordError(s)},e}();t.ErrorHandler=i},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Messages={BadGetterArity:"Getter must not have any formal parameters",BadSetterArity:"Setter must have exactly one formal parameter",BadSetterRestParameter:"Setter function argument must not be a rest parameter",ConstructorIsAsync:"Class constructor may not be an async method",ConstructorSpecialMethod:"Class constructor may not be an accessor",DeclarationMissingInitializer:"Missing initializer in %0 declaration",DefaultRestParameter:"Unexpected token =",DuplicateBinding:"Duplicate binding %0",DuplicateConstructor:"A class may only have one constructor",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInLegacyContext:"Generator declarations are not allowed in legacy contexts",IllegalBreak:"Illegal break statement",IllegalContinue:"Illegal continue statement",IllegalExportDeclaration:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"Illegal return statement",InvalidEscapedReservedWord:"Keyword must not contain escaped characters",InvalidHexEscapeSequence:"Invalid hexadecimal escape sequence",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",InvalidLHSInForLoop:"Invalid left-hand side in for-loop",InvalidModuleSpecifier:"Unexpected token",InvalidRegExp:"Invalid regular expression",LetInLexicalBinding:"let is disallowed as a lexically bound name",MissingFromClause:"Unexpected token",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NewlineAfterThrow:"Illegal newline after throw",NoAsAfterImportNamespace:"Unexpected token",NoCatchOrFinally:"Missing catch or finally after try",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",Redeclaration:"%0 '%1' has already been declared",StaticPrototype:"Classes may not have static property named prototype",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictModeWith:"Strict mode code may not include a with statement",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",UnexpectedEOS:"Unexpected end of input",UnexpectedIdentifier:"Unexpected identifier",UnexpectedNumber:"Unexpected number",UnexpectedReserved:"Unexpected reserved word",UnexpectedString:"Unexpected string",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedToken:"Unexpected token %0",UnexpectedTokenIllegal:"Unexpected token ILLEGAL",UnknownLabel:"Undefined label '%0'",UnterminatedRegExp:"Invalid regular expression: missing /"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(9),s=i(4),o=i(11);function n(e){return"0123456789abcdef".indexOf(e.toLowerCase())}function a(e){return"01234567".indexOf(e)}var p=function(){function e(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return e.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},e.prototype.restoreState=function(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart},e.prototype.eof=function(){return this.index>=this.length},e.prototype.throwUnexpectedToken=function(e){return void 0===e&&(e=o.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.tolerateUnexpectedToken=function(e){void 0===e&&(e=o.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.skipSingleLineComment=function(e){var t,i,r=[];for(this.trackComment&&(r=[],t=this.index-e,i={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){var o=this.source.charCodeAt(this.index);if(++this.index,s.Character.isLineTerminator(o)){if(this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart-1};var n={multiLine:!1,slice:[t+e,this.index-1],range:[t,this.index-1],loc:i};r.push(n)}return 13===o&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,r}}return this.trackComment&&(i.end={line:this.lineNumber,column:this.index-this.lineStart},n={multiLine:!1,slice:[t+e,this.index],range:[t,this.index],loc:i},r.push(n)),r},e.prototype.skipMultiLineComment=function(){var e,t,i=[];for(this.trackComment&&(i=[],e=this.index-2,t={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var r=this.source.charCodeAt(this.index);if(s.Character.isLineTerminator(r))13===r&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===r){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};var o={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:t};i.push(o)}return i}++this.index}else++this.index}return this.trackComment&&(t.end={line:this.lineNumber,column:this.index-this.lineStart},o={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:t},i.push(o)),this.tolerateUnexpectedToken(),i},e.prototype.scanComments=function(){var e;this.trackComment&&(e=[]);for(var t=0===this.index;!this.eof();){var i=this.source.charCodeAt(this.index);if(s.Character.isWhiteSpace(i))++this.index;else if(s.Character.isLineTerminator(i))++this.index,13===i&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,t=!0;else if(47===i)if(47===(i=this.source.charCodeAt(this.index+1))){this.index+=2;var r=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(r)),t=!0}else{if(42!==i)break;this.index+=2,r=this.skipMultiLineComment(),this.trackComment&&(e=e.concat(r))}else if(t&&45===i){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3,r=this.skipSingleLineComment(3),this.trackComment&&(e=e.concat(r))}else{if(60!==i||this.isModule)break;if("!--"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4,r=this.skipSingleLineComment(4),this.trackComment&&(e=e.concat(r))}}return e},e.prototype.isFutureReservedWord=function(e){switch(e){case"enum":case"export":case"import":case"super":return!0;default:return!1}},e.prototype.isStrictModeReservedWord=function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}},e.prototype.isRestrictedWord=function(e){return"eval"===e||"arguments"===e},e.prototype.isKeyword=function(e){switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}},e.prototype.codePointAt=function(e){var t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){var i=this.source.charCodeAt(e+1);i>=56320&&i<=57343&&(t=1024*(t-55296)+i-56320+65536)}return t},e.prototype.scanHexEscape=function(e){for(var t="u"===e?4:2,i=0,r=0;r<t;++r){if(this.eof()||!s.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;i=16*i+n(this.source[this.index++])}return String.fromCharCode(i)},e.prototype.scanUnicodeCodePointEscape=function(){var e=this.source[this.index],t=0;for("}"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],s.Character.isHexDigit(e.charCodeAt(0)));)t=16*t+n(e);return(t>1114111||"}"!==e)&&this.throwUnexpectedToken(),s.Character.fromCodePoint(t)},e.prototype.getIdentifier=function(){for(var e=this.index++;!this.eof();){var t=this.source.charCodeAt(this.index);if(92===t)return this.index=e,this.getComplexIdentifier();if(t>=55296&&t<57343)return this.index=e,this.getComplexIdentifier();if(!s.Character.isIdentifierPart(t))break;++this.index}return this.source.slice(e,this.index)},e.prototype.getComplexIdentifier=function(){var e,t=this.codePointAt(this.index),i=s.Character.fromCodePoint(t);for(this.index+=i.length,92===t&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&s.Character.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken(),i=e);!this.eof()&&(t=this.codePointAt(this.index),s.Character.isIdentifierPart(t));)i+=e=s.Character.fromCodePoint(t),this.index+=e.length,92===t&&(i=i.substr(0,i.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&s.Character.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken(),i+=e);return i},e.prototype.octalToDecimal=function(e){var t="0"!==e,i=a(e);return!this.eof()&&s.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=!0,i=8*i+a(this.source[this.index++]),"0123".indexOf(e)>=0&&!this.eof()&&s.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(i=8*i+a(this.source[this.index++]))),{code:i,octal:t}},e.prototype.scanIdentifier=function(){var e,t=this.index,i=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(3!=(e=1===i.length?3:this.isKeyword(i)?4:"null"===i?5:"true"===i||"false"===i?1:3)&&t+i.length!==this.index){var r=this.index;this.index=t,this.tolerateUnexpectedToken(o.Messages.InvalidEscapedReservedWord),this.index=r}return{type:e,value:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.scanPunctuator=function(){var e=this.index,t=this.source[this.index];switch(t){case"(":case"{":"{"===t&&this.curlyStack.push("{"),++this.index;break;case".":++this.index,"."===this.source[this.index]&&"."===this.source[this.index+1]&&(this.index+=2,t="...");break;case"}":++this.index,this.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++this.index;break;default:">>>="===(t=this.source.substr(this.index,4))?this.index+=4:"==="===(t=t.substr(0,3))||"!=="===t||">>>"===t||"<<="===t||">>="===t||"**="===t?this.index+=3:"&&"===(t=t.substr(0,2))||"||"===t||"=="===t||"!="===t||"+="===t||"-="===t||"*="===t||"/="===t||"++"===t||"--"===t||"<<"===t||">>"===t||"&="===t||"|="===t||"^="===t||"%="===t||"<="===t||">="===t||"=>"===t||"**"===t?this.index+=2:(t=this.source[this.index],"<>=!+-*%&|^/".indexOf(t)>=0&&++this.index)}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanHexLiteral=function(e){for(var t="";!this.eof()&&s.Character.isHexDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),s.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt("0x"+t,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanBinaryLiteral=function(e){for(var t,i="";!this.eof()&&("0"===(t=this.source[this.index])||"1"===t);)i+=this.source[this.index++];return 0===i.length&&this.throwUnexpectedToken(),this.eof()||(t=this.source.charCodeAt(this.index),(s.Character.isIdentifierStart(t)||s.Character.isDecimalDigit(t))&&this.throwUnexpectedToken()),{type:6,value:parseInt(i,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanOctalLiteral=function(e,t){var i="",r=!1;for(s.Character.isOctalDigit(e.charCodeAt(0))?(r=!0,i="0"+this.source[this.index++]):++this.index;!this.eof()&&s.Character.isOctalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];return r||0!==i.length||this.throwUnexpectedToken(),(s.Character.isIdentifierStart(this.source.charCodeAt(this.index))||s.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(i,8),octal:r,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.isImplicitOctalLiteral=function(){for(var e=this.index+1;e<this.length;++e){var t=this.source[e];if("8"===t||"9"===t)return!1;if(!s.Character.isOctalDigit(t.charCodeAt(0)))return!0}return!0},e.prototype.scanNumericLiteral=function(){var e=this.index,t=this.source[e];r.assert(s.Character.isDecimalDigit(t.charCodeAt(0))||"."===t,"Numeric literal must start with a decimal digit or a decimal point");var i="";if("."!==t){if(i=this.source[this.index++],t=this.source[this.index],"0"===i){if("x"===t||"X"===t)return++this.index,this.scanHexLiteral(e);if("b"===t||"B"===t)return++this.index,this.scanBinaryLiteral(e);if("o"===t||"O"===t)return this.scanOctalLiteral(t,e);if(t&&s.Character.isOctalDigit(t.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(t,e)}for(;s.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if("."===t){for(i+=this.source[this.index++];s.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if("e"===t||"E"===t)if(i+=this.source[this.index++],"+"!==(t=this.source[this.index])&&"-"!==t||(i+=this.source[this.index++]),s.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;s.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];else this.throwUnexpectedToken();return s.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanStringLiteral=function(){var e=this.index,t=this.source[e];r.assert("'"===t||'"'===t,"String literal must starts with a quote"),++this.index;for(var i=!1,n="";!this.eof();){var a=this.source[this.index++];if(a===t){t="";break}if("\\"===a)if((a=this.source[this.index++])&&s.Character.isLineTerminator(a.charCodeAt(0)))++this.lineNumber,"\r"===a&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(a){case"u":if("{"===this.source[this.index])++this.index,n+=this.scanUnicodeCodePointEscape();else{var p=this.scanHexEscape(a);null===p&&this.throwUnexpectedToken(),n+=p}break;case"x":var c=this.scanHexEscape(a);null===c&&this.throwUnexpectedToken(o.Messages.InvalidHexEscapeSequence),n+=c;break;case"n":n+="\n";break;case"r":n+="\r";break;case"t":n+="\t";break;case"b":n+="\b";break;case"f":n+="\f";break;case"v":n+="\v";break;case"8":case"9":n+=a,this.tolerateUnexpectedToken();break;default:if(a&&s.Character.isOctalDigit(a.charCodeAt(0))){var d=this.octalToDecimal(a);i=d.octal||i,n+=String.fromCharCode(d.code)}else n+=a}else{if(s.Character.isLineTerminator(a.charCodeAt(0)))break;n+=a}}return""!==t&&(this.index=e,this.throwUnexpectedToken()),{type:8,value:n,octal:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanTemplate=function(){var e="",t=!1,i=this.index,r="`"===this.source[i],n=!1,a=2;for(++this.index;!this.eof();){var p=this.source[this.index++];if("`"===p){a=1,n=!0,t=!0;break}if("$"===p){if("{"===this.source[this.index]){this.curlyStack.push("${"),++this.index,t=!0;break}e+=p}else if("\\"===p)if(p=this.source[this.index++],s.Character.isLineTerminator(p.charCodeAt(0)))++this.lineNumber,"\r"===p&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(p){case"n":e+="\n";break;case"r":e+="\r";break;case"t":e+="\t";break;case"u":if("{"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{var c=this.index,d=this.scanHexEscape(p);null!==d?e+=d:(this.index=c,e+=p)}break;case"x":var u=this.scanHexEscape(p);null===u&&this.throwUnexpectedToken(o.Messages.InvalidHexEscapeSequence),e+=u;break;case"b":e+="\b";break;case"f":e+="\f";break;case"v":e+="\v";break;default:"0"===p?(s.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(o.Messages.TemplateOctalLiteral),e+="\0"):s.Character.isOctalDigit(p.charCodeAt(0))?this.throwUnexpectedToken(o.Messages.TemplateOctalLiteral):e+=p}else s.Character.isLineTerminator(p.charCodeAt(0))?(++this.lineNumber,"\r"===p&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+="\n"):e+=p}return t||this.throwUnexpectedToken(),r||this.curlyStack.pop(),{type:10,value:this.source.slice(i+1,this.index-a),cooked:e,head:r,tail:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:i,end:this.index}},e.prototype.testRegExp=function(e,t){var i=e,r=this;t.indexOf("u")>=0&&(i=i.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,(function(e,t,i){var s=parseInt(t||i,16);return s>1114111&&r.throwUnexpectedToken(o.Messages.InvalidRegExp),s<=65535?String.fromCharCode(s):"￿"})).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"￿"));try{RegExp(i)}catch(e){this.throwUnexpectedToken(o.Messages.InvalidRegExp)}try{return new RegExp(e,t)}catch(e){return null}},e.prototype.scanRegExpBody=function(){var e=this.source[this.index];r.assert("/"===e,"Regular expression literal must start with a slash");for(var t=this.source[this.index++],i=!1,n=!1;!this.eof();)if(t+=e=this.source[this.index++],"\\"===e)e=this.source[this.index++],s.Character.isLineTerminator(e.charCodeAt(0))&&this.throwUnexpectedToken(o.Messages.UnterminatedRegExp),t+=e;else if(s.Character.isLineTerminator(e.charCodeAt(0)))this.throwUnexpectedToken(o.Messages.UnterminatedRegExp);else if(i)"]"===e&&(i=!1);else{if("/"===e){n=!0;break}"["===e&&(i=!0)}return n||this.throwUnexpectedToken(o.Messages.UnterminatedRegExp),t.substr(1,t.length-2)},e.prototype.scanRegExpFlags=function(){for(var e="";!this.eof();){var t=this.source[this.index];if(!s.Character.isIdentifierPart(t.charCodeAt(0)))break;if(++this.index,"\\"!==t||this.eof())e+=t;else if("u"===(t=this.source[this.index])){++this.index;var i=this.index,r=this.scanHexEscape("u");if(null!==r)for(e+=r;i<this.index;++i)this.source[i];else this.index=i,e+="u";this.tolerateUnexpectedToken()}else this.tolerateUnexpectedToken()}return e},e.prototype.scanRegExp=function(){var e=this.index,t=this.scanRegExpBody(),i=this.scanRegExpFlags();return{type:9,value:"",pattern:t,flags:i,regex:this.testRegExp(t,i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.lex=function(){if(this.eof())return{type:2,value:"",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var e=this.source.charCodeAt(this.index);return s.Character.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?s.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():s.Character.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&"${"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&s.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},e}();t.Scanner=p},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenName={},t.TokenName[1]="Boolean",t.TokenName[2]="<end>",t.TokenName[3]="Identifier",t.TokenName[4]="Keyword",t.TokenName[5]="Null",t.TokenName[6]="Numeric",t.TokenName[7]="Punctuator",t.TokenName[8]="String",t.TokenName[9]="RegularExpression",t.TokenName[10]="Template"},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.XHTMLEntities={quot:'"',amp:"&",apos:"'",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦",lang:"⟨",rang:"⟩"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=i(10),s=i(12),o=i(13),n=function(){function e(){this.values=[],this.curly=this.paren=-1}return e.prototype.beforeFunctionExpression=function(e){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(e)>=0},e.prototype.isRegexStart=function(){var e=this.values[this.values.length-1],t=null!==e;switch(e){case"this":case"]":t=!1;break;case")":var i=this.values[this.paren-1];t="if"===i||"while"===i||"for"===i||"with"===i;break;case"}":if(t=!1,"function"===this.values[this.curly-3])t=!!(r=this.values[this.curly-4])&&!this.beforeFunctionExpression(r);else if("function"===this.values[this.curly-4]){var r;t=!(r=this.values[this.curly-5])||!this.beforeFunctionExpression(r)}}return t},e.prototype.push=function(e){7===e.type||4===e.type?("{"===e.value?this.curly=this.values.length:"("===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)},e}(),a=function(){function e(e,t){this.errorHandler=new r.ErrorHandler,this.errorHandler.tolerant=!!t&&"boolean"==typeof t.tolerant&&t.tolerant,this.scanner=new s.Scanner(e,this.errorHandler),this.scanner.trackComment=!!t&&"boolean"==typeof t.comment&&t.comment,this.trackRange=!!t&&"boolean"==typeof t.range&&t.range,this.trackLoc=!!t&&"boolean"==typeof t.loc&&t.loc,this.buffer=[],this.reader=new n}return e.prototype.errors=function(){return this.errorHandler.errors},e.prototype.getNextToken=function(){if(0===this.buffer.length){var e=this.scanner.scanComments();if(this.scanner.trackComment)for(var t=0;t<e.length;++t){var i=e[t],r=this.scanner.source.slice(i.slice[0],i.slice[1]),s={type:i.multiLine?"BlockComment":"LineComment",value:r};this.trackRange&&(s.range=i.range),this.trackLoc&&(s.loc=i.loc),this.buffer.push(s)}if(!this.scanner.eof()){var n=void 0;this.trackLoc&&(n={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var a="/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(a);var p={type:o.TokenName[a.type],value:this.scanner.source.slice(a.start,a.end)};if(this.trackRange&&(p.range=[a.start,a.end]),this.trackLoc&&(n.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},p.loc=n),9===a.type){var c=a.pattern,d=a.flags;p.regex={pattern:c,flags:d}}this.buffer.push(p)}}return this.buffer.shift()},e}();t.Tokenizer=a}])},e.exports=t()},1215:(e,t)=>{"use strict";function i(e,t,i,r){var s=e[t];if("function"==typeof s)return s.apply(e,[i,r]);if(!r){if(s instanceof RegExp)return s.test(i.url);if("string"==typeof s)return s===i.extension;if(Array.isArray(s))return-1!==s.indexOf(i.extension)}return s}t.all=function(e){return Object.keys(e).filter((function(t){return"object"==typeof e[t]})).map((function(t){return e[t].name=t,e[t]}))},t.filter=function(e,t,r){return e.filter((function(e){return!!i(e,t,r)}))},t.sort=function(e){return e.forEach((function(e){e.order=e.order||Number.MAX_SAFE_INTEGER})),e.sort((function(e,t){return e.order-t.order}))},t.run=function(e,t,r){var s,o,n=0;return new Promise((function(a,p){function c(){if(!(s=e[n++]))return p(o);try{var a=i(s,t,r,d);a&&"function"==typeof a.then?a.then(u,l):void 0!==a&&u(a)}catch(e){l(e)}}function d(e,t){e?l(e):u(t)}function u(e){a({plugin:s,result:e})}function l(e){o=e,c()}c()}))}},1231:e=>{"use strict";function t(e,t){var i="",r=e.reason||"(unknown reason)";return e.mark?(e.mark.name&&(i+='in "'+e.mark.name+'" '),i+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")",!t&&e.mark.snippet&&(i+="\n\n"+e.mark.snippet),r+" "+i):r}function i(e,i){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=i,this.message=t(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}i.prototype=Object.create(Error.prototype),i.prototype.constructor=i,i.prototype.toString=function(e){return this.name+": "+t(this,e)},e.exports=i},1237:e=>{"use strict";e.exports=EvalError},1250:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(5346)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},1292:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},1332:(e,t,i)=>{"use strict";var r=i(4927),s=i(9046),o=i(4355),n=i(7444),a=i(484),p=i(2864),c=i(6247);function d(e){const t=!1!==e.prettyErrors;return{lineCounter:e.lineCounter||t&&new p.LineCounter||null,prettyErrors:t}}function u(e,t={}){const{lineCounter:i,prettyErrors:s}=d(t),n=new c.Parser(i?.addNewLine),a=new r.Composer(t);let p=null;for(const t of a.compose(n.parse(e),!0,e.length))if(p){if("silent"!==p.options.logLevel){p.errors.push(new o.YAMLParseError(t.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}}else p=t;return s&&i&&(p.errors.forEach(o.prettifyError(e,i)),p.warnings.forEach(o.prettifyError(e,i))),p}t.parse=function(e,t,i){let r;"function"==typeof t?r=t:void 0===i&&t&&"object"==typeof t&&(i=t);const s=u(e,i);if(!s)return null;if(s.warnings.forEach((e=>n.warn(s.options.logLevel,e))),s.errors.length>0){if("silent"!==s.options.logLevel)throw s.errors[0];s.errors=[]}return s.toJS(Object.assign({reviver:r},i))},t.parseAllDocuments=function(e,t={}){const{lineCounter:i,prettyErrors:s}=d(t),n=new c.Parser(i?.addNewLine),a=new r.Composer(t),p=Array.from(a.compose(n.parse(e)));if(s&&i)for(const t of p)t.errors.forEach(o.prettifyError(e,i)),t.warnings.forEach(o.prettifyError(e,i));return p.length>0?p:Object.assign([],{empty:!0},a.streamInfo())},t.parseDocument=u,t.stringify=function(e,t,i){let r=null;if("function"==typeof t||Array.isArray(t)?r=t:void 0===i&&t&&(i=t),"string"==typeof i&&(i=i.length),"number"==typeof i){const e=Math.round(i);i=e<1?void 0:e>8?{indent:8}:{indent:e}}if(void 0===e){const{keepUndefined:e}=i??t??{};if(!e)return}return a.isDocument(e)&&!r?e.toString(i):new s.Document(e,r,i).toString(i)}},1333:e=>{"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),i=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(i))return!1;for(var r in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var s=Object.getOwnPropertySymbols(e);if(1!==s.length||s[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var o=Object.getOwnPropertyDescriptor(e,t);if(42!==o.value||!0!==o.enumerable)return!1}return!0}},1362:e=>{e.exports=function(e,t){return Object.keys(t).forEach((function(i){e[i]=e[i]||t[i]})),e}},1386:(e,t)=>{"use strict";t.resolveProps=function(e,{flow:t,indicator:i,next:r,offset:s,onError:o,parentIndent:n,startOnNewline:a}){let p=!1,c=a,d=a,u="",l="",h=!1,m=!1,f=null,y=null,g=null,x=null,b=null,v=null,w=null;for(const s of e)switch(m&&("space"!==s.type&&"newline"!==s.type&&"comma"!==s.type&&o(s.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),m=!1),f&&(c&&"comment"!==s.type&&"newline"!==s.type&&o(f,"TAB_AS_INDENT","Tabs are not allowed as indentation"),f=null),s.type){case"space":t||"doc-start"===i&&"flow-collection"===r?.type||!s.source.includes("\t")||(f=s),d=!0;break;case"comment":{d||o(s,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const e=s.source.substring(1)||" ";u?u+=l+e:u=e,l="",c=!1;break}case"newline":c?u?u+=s.source:v&&"seq-item-ind"===i||(p=!0):l+=s.source,c=!0,h=!0,(y||g)&&(x=s),d=!0;break;case"anchor":y&&o(s,"MULTIPLE_ANCHORS","A node can have at most one anchor"),s.source.endsWith(":")&&o(s.offset+s.source.length-1,"BAD_ALIAS","Anchor ending in : is ambiguous",!0),y=s,w??(w=s.offset),c=!1,d=!1,m=!0;break;case"tag":g&&o(s,"MULTIPLE_TAGS","A node can have at most one tag"),g=s,w??(w=s.offset),c=!1,d=!1,m=!0;break;case i:(y||g)&&o(s,"BAD_PROP_ORDER",`Anchors and tags must be after the ${s.source} indicator`),v&&o(s,"UNEXPECTED_TOKEN",`Unexpected ${s.source} in ${t??"collection"}`),v=s,c="seq-item-ind"===i||"explicit-key-ind"===i,d=!1;break;case"comma":if(t){b&&o(s,"UNEXPECTED_TOKEN",`Unexpected , in ${t}`),b=s,c=!1,d=!1;break}default:o(s,"UNEXPECTED_TOKEN",`Unexpected ${s.type} token`),c=!1,d=!1}const I=e[e.length-1],k=I?I.offset+I.source.length:s;return m&&r&&"space"!==r.type&&"newline"!==r.type&&"comma"!==r.type&&("scalar"!==r.type||""!==r.source)&&o(r.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),f&&(c&&f.indent<=n||"block-map"===r?.type||"block-seq"===r?.type)&&o(f,"TAB_AS_INDENT","Tabs are not allowed as indentation"),{comma:b,found:v,spaceBefore:p,comment:u,hasNewline:h,anchor:y,tag:g,newlineAfterProp:x,end:k,start:w??k}}},1390:(e,t,i)=>{"use strict";var r=i(8300),s=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,i,r,o,n,a=e;for(n=new Array(a.length),t=0,i=a.length;t<i;t+=1){if(r=a[t],"[object Object]"!==s.call(r))return!1;if(1!==(o=Object.keys(r)).length)return!1;n[t]=[o[0],r[o[0]]]}return!0},construct:function(e){if(null===e)return[];var t,i,r,s,o,n=e;for(o=new Array(n.length),t=0,i=n.length;t<i;t+=1)r=n[t],s=Object.keys(r),o[t]=[s[0],r[s[0]]];return o}})},1398:e=>{"use strict";e.exports=require("vscode")},1404:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalizeArgs=s;const r=i(6333);function s(e){let t,i,s,o;const n=Array.prototype.slice.call(e);"function"==typeof n[n.length-1]&&(o=n.pop()),"string"==typeof n[0]?(t=n[0],"object"==typeof n[2]?(i=n[1],s=n[2]):(i=void 0,s=n[1])):(t="",i=n[0],s=n[1]);try{s=(0,r.getNewOptions)(s)}catch(e){console.error(`JSON Schema Ref Parser: Error normalizing options: ${e}`)}return s.mutateInputSchema||"object"!=typeof i||(i=JSON.parse(JSON.stringify(i))),{path:t,schema:i,options:s,callback:o}}t.default=s},1420:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(9428),s=i(8071),o=i(6675),n=new o.Name("fullFormats"),a=new o.Name("fastFormats"),p=(e,t={keywords:!0})=>{if(Array.isArray(t))return c(e,t,r.fullFormats,n),e;const[i,o]="fast"===t.mode?[r.fastFormats,a]:[r.fullFormats,n];return c(e,t.formats||r.formatNames,i,o),t.keywords&&(0,s.default)(e),e};function c(e,t,i,r){var s,n;null!==(s=(n=e.opts.code).formats)&&void 0!==s||(n.formats=o._`require("ajv-formats/dist/formats").${r}`);for(const r of t)e.addFormat(r,i[r])}p.get=(e,t="full")=>{const i=("fast"===t?r.fastFormats:r.fullFormats)[e];if(!i)throw new Error(`Unknown format "${e}"`);return i},e.exports=t=p,Object.defineProperty(t,"__esModule",{value:!0}),t.default=p},1461:(e,t,i)=>{"use strict";var r=i(8433),s=i(5388),o=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"),n=/^[-+]?[0-9]+e/;e.exports=new s("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!o.test(e)||"_"===e[e.length-1])},construct:function(e){var t,i;return i="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===i?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:i*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||r.isNegativeZero(e))},represent:function(e,t){var i;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(r.isNegativeZero(e))return"-0.0";return i=e.toString(10),n.test(i)?i.replace("e",".e"):i},defaultStyle:"lowercase"})},1514:e=>{"use strict";e.exports=Math.abs},1596:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(749),s={keyword:["then","else"],schemaType:["object","boolean"],code({keyword:e,parentSchema:t,it:i}){void 0===t.if&&(0,r.checkStrictMode)(i,`"${e}" without "if" is ignored`)}};t.default=s},1614:(e,t,i)=>{"use strict";var r=i(5219),s=i(484),o=i(8898);function n(e,t,i){let s=i;for(let e=t.length-1;e>=0;--e){const i=t[e];if("number"==typeof i&&Number.isInteger(i)&&i>=0){const e=[];e[i]=s,s=e}else s=new Map([[i,s]])}return r.createNode(s,void 0,{aliasDuplicateObjects:!1,keepUndefined:!1,onAnchor:()=>{throw new Error("This should not happen, please report a bug.")},schema:e,sourceObjects:new Map})}const a=e=>null==e||"object"==typeof e&&!!e[Symbol.iterator]().next().done;class p extends o.NodeBase{constructor(e,t){super(e),Object.defineProperty(this,"schema",{value:t,configurable:!0,enumerable:!1,writable:!0})}clone(e){const t=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return e&&(t.schema=e),t.items=t.items.map((t=>s.isNode(t)||s.isPair(t)?t.clone(e):t)),this.range&&(t.range=this.range.slice()),t}addIn(e,t){if(a(e))this.add(t);else{const[i,...r]=e,o=this.get(i,!0);if(s.isCollection(o))o.addIn(r,t);else{if(void 0!==o||!this.schema)throw new Error(`Expected YAML collection at ${i}. Remaining path: ${r}`);this.set(i,n(this.schema,r,t))}}}deleteIn(e){const[t,...i]=e;if(0===i.length)return this.delete(t);const r=this.get(t,!0);if(s.isCollection(r))return r.deleteIn(i);throw new Error(`Expected YAML collection at ${t}. Remaining path: ${i}`)}getIn(e,t){const[i,...r]=e,o=this.get(i,!0);return 0===r.length?!t&&s.isScalar(o)?o.value:o:s.isCollection(o)?o.getIn(r,t):void 0}hasAllNullValues(e){return this.items.every((t=>{if(!s.isPair(t))return!1;const i=t.value;return null==i||e&&s.isScalar(i)&&null==i.value&&!i.commentBefore&&!i.comment&&!i.tag}))}hasIn(e){const[t,...i]=e;if(0===i.length)return this.has(t);const r=this.get(t,!0);return!!s.isCollection(r)&&r.hasIn(i)}setIn(e,t){const[i,...r]=e;if(0===r.length)this.set(i,t);else{const e=this.get(i,!0);if(s.isCollection(e))e.setIn(r,t);else{if(void 0!==e||!this.schema)throw new Error(`Expected YAML collection at ${i}. Remaining path: ${r}`);this.set(i,n(this.schema,r,t))}}}}t.Collection=p,t.collectionFromPath=n,t.isEmptyPath=a},1624:(e,t,i)=>{"use strict";var r=i(8433),s=i(1231),o=i(8083),n=i(5489),a=Object.prototype.hasOwnProperty,p=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,c=/[\x85\u2028\u2029]/,d=/[,\[\]\{\}]/,u=/^(?:!|!!|![a-z\-]+!)$/i,l=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function h(e){return Object.prototype.toString.call(e)}function m(e){return 10===e||13===e}function f(e){return 9===e||32===e}function y(e){return 9===e||32===e||10===e||13===e}function g(e){return 44===e||91===e||93===e||123===e||125===e}function x(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function b(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function v(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var w=new Array(256),I=new Array(256),k=0;k<256;k++)w[k]=b(k)?1:0,I[k]=b(k);function P(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||n,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function j(e,t){var i={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};return i.snippet=o(i),new s(t,i)}function A(e,t){throw j(e,t)}function O(e,t){e.onWarning&&e.onWarning.call(null,j(e,t))}var E={YAML:function(e,t,i){var r,s,o;null!==e.version&&A(e,"duplication of %YAML directive"),1!==i.length&&A(e,"YAML directive accepts exactly one argument"),null===(r=/^([0-9]+)\.([0-9]+)$/.exec(i[0]))&&A(e,"ill-formed argument of the YAML directive"),s=parseInt(r[1],10),o=parseInt(r[2],10),1!==s&&A(e,"unacceptable YAML version of the document"),e.version=i[0],e.checkLineBreaks=o<2,1!==o&&2!==o&&O(e,"unsupported YAML version of the document")},TAG:function(e,t,i){var r,s;2!==i.length&&A(e,"TAG directive accepts exactly two arguments"),r=i[0],s=i[1],u.test(r)||A(e,"ill-formed tag handle (first argument) of the TAG directive"),a.call(e.tagMap,r)&&A(e,'there is a previously declared suffix for "'+r+'" tag handle'),l.test(s)||A(e,"ill-formed tag prefix (second argument) of the TAG directive");try{s=decodeURIComponent(s)}catch(t){A(e,"tag prefix is malformed: "+s)}e.tagMap[r]=s}};function S(e,t,i,r){var s,o,n,a;if(t<i){if(a=e.input.slice(t,i),r)for(s=0,o=a.length;s<o;s+=1)9===(n=a.charCodeAt(s))||32<=n&&n<=1114111||A(e,"expected valid JSON character");else p.test(a)&&A(e,"the stream contains non-printable characters");e.result+=a}}function D(e,t,i,s){var o,n,p,c;for(r.isObject(i)||A(e,"cannot merge mappings; the provided source object is unacceptable"),p=0,c=(o=Object.keys(i)).length;p<c;p+=1)n=o[p],a.call(t,n)||(t[n]=i[n],s[n]=!0)}function T(e,t,i,r,s,o,n,p,c){var d,u;if(Array.isArray(s))for(d=0,u=(s=Array.prototype.slice.call(s)).length;d<u;d+=1)Array.isArray(s[d])&&A(e,"nested arrays are not supported inside keys"),"object"==typeof s&&"[object Object]"===h(s[d])&&(s[d]="[object Object]");if("object"==typeof s&&"[object Object]"===h(s)&&(s="[object Object]"),s=String(s),null===t&&(t={}),"tag:yaml.org,2002:merge"===r)if(Array.isArray(o))for(d=0,u=o.length;d<u;d+=1)D(e,t,o[d],i);else D(e,t,o,i);else e.json||a.call(i,s)||!a.call(t,s)||(e.line=n||e.line,e.lineStart=p||e.lineStart,e.position=c||e.position,A(e,"duplicated mapping key")),"__proto__"===s?Object.defineProperty(t,s,{configurable:!0,enumerable:!0,writable:!0,value:o}):t[s]=o,delete i[s];return t}function q(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):A(e,"a line break is expected"),e.line+=1,e.lineStart=e.position,e.firstTabInLine=-1}function C(e,t,i){for(var r=0,s=e.input.charCodeAt(e.position);0!==s;){for(;f(s);)9===s&&-1===e.firstTabInLine&&(e.firstTabInLine=e.position),s=e.input.charCodeAt(++e.position);if(t&&35===s)do{s=e.input.charCodeAt(++e.position)}while(10!==s&&13!==s&&0!==s);if(!m(s))break;for(q(e),s=e.input.charCodeAt(e.position),r++,e.lineIndent=0;32===s;)e.lineIndent++,s=e.input.charCodeAt(++e.position)}return-1!==i&&0!==r&&e.lineIndent<i&&O(e,"deficient indentation"),r}function $(e){var t,i=e.position;return!(45!==(t=e.input.charCodeAt(i))&&46!==t||t!==e.input.charCodeAt(i+1)||t!==e.input.charCodeAt(i+2)||(i+=3,0!==(t=e.input.charCodeAt(i))&&!y(t)))}function _(e,t){1===t?e.result+=" ":t>1&&(e.result+=r.repeat("\n",t-1))}function R(e,t){var i,r,s=e.tag,o=e.anchor,n=[],a=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=n),r=e.input.charCodeAt(e.position);0!==r&&(-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,A(e,"tab characters must not be used in indentation")),45===r)&&y(e.input.charCodeAt(e.position+1));)if(a=!0,e.position++,C(e,!0,-1)&&e.lineIndent<=t)n.push(null),r=e.input.charCodeAt(e.position);else if(i=e.line,F(e,t,3,!1,!0),n.push(e.result),C(e,!0,-1),r=e.input.charCodeAt(e.position),(e.line===i||e.lineIndent>t)&&0!==r)A(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!a&&(e.tag=s,e.anchor=o,e.kind="sequence",e.result=n,!0)}function N(e){var t,i,r,s,o=!1,n=!1;if(33!==(s=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&A(e,"duplication of a tag property"),60===(s=e.input.charCodeAt(++e.position))?(o=!0,s=e.input.charCodeAt(++e.position)):33===s?(n=!0,i="!!",s=e.input.charCodeAt(++e.position)):i="!",t=e.position,o){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&62!==s);e.position<e.length?(r=e.input.slice(t,e.position),s=e.input.charCodeAt(++e.position)):A(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==s&&!y(s);)33===s&&(n?A(e,"tag suffix cannot contain exclamation marks"):(i=e.input.slice(t-1,e.position+1),u.test(i)||A(e,"named tag handle cannot contain such characters"),n=!0,t=e.position+1)),s=e.input.charCodeAt(++e.position);r=e.input.slice(t,e.position),d.test(r)&&A(e,"tag suffix cannot contain flow indicator characters")}r&&!l.test(r)&&A(e,"tag name cannot contain such characters: "+r);try{r=decodeURIComponent(r)}catch(t){A(e,"tag name is malformed: "+r)}return o?e.tag=r:a.call(e.tagMap,i)?e.tag=e.tagMap[i]+r:"!"===i?e.tag="!"+r:"!!"===i?e.tag="tag:yaml.org,2002:"+r:A(e,'undeclared tag handle "'+i+'"'),!0}function U(e){var t,i;if(38!==(i=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&A(e,"duplication of an anchor property"),i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!y(i)&&!g(i);)i=e.input.charCodeAt(++e.position);return e.position===t&&A(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function F(e,t,i,s,o){var n,p,c,d,u,l,h,b,k,P=1,j=!1,O=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,n=p=c=4===i||3===i,s&&C(e,!0,-1)&&(j=!0,e.lineIndent>t?P=1:e.lineIndent===t?P=0:e.lineIndent<t&&(P=-1)),1===P)for(;N(e)||U(e);)C(e,!0,-1)?(j=!0,c=n,e.lineIndent>t?P=1:e.lineIndent===t?P=0:e.lineIndent<t&&(P=-1)):c=!1;if(c&&(c=j||o),1!==P&&4!==i||(b=1===i||2===i?t:t+1,k=e.position-e.lineStart,1===P?c&&(R(e,k)||function(e,t,i){var r,s,o,n,a,p,c,d=e.tag,u=e.anchor,l={},h=Object.create(null),m=null,g=null,x=null,b=!1,v=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=l),c=e.input.charCodeAt(e.position);0!==c;){if(b||-1===e.firstTabInLine||(e.position=e.firstTabInLine,A(e,"tab characters must not be used in indentation")),r=e.input.charCodeAt(e.position+1),o=e.line,63!==c&&58!==c||!y(r)){if(n=e.line,a=e.lineStart,p=e.position,!F(e,i,2,!1,!0))break;if(e.line===o){for(c=e.input.charCodeAt(e.position);f(c);)c=e.input.charCodeAt(++e.position);if(58===c)y(c=e.input.charCodeAt(++e.position))||A(e,"a whitespace character is expected after the key-value separator within a block mapping"),b&&(T(e,l,h,m,g,null,n,a,p),m=g=x=null),v=!0,b=!1,s=!1,m=e.tag,g=e.result;else{if(!v)return e.tag=d,e.anchor=u,!0;A(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!v)return e.tag=d,e.anchor=u,!0;A(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===c?(b&&(T(e,l,h,m,g,null,n,a,p),m=g=x=null),v=!0,b=!0,s=!0):b?(b=!1,s=!0):A(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,c=r;if((e.line===o||e.lineIndent>t)&&(b&&(n=e.line,a=e.lineStart,p=e.position),F(e,t,4,!0,s)&&(b?g=e.result:x=e.result),b||(T(e,l,h,m,g,x,n,a,p),m=g=x=null),C(e,!0,-1),c=e.input.charCodeAt(e.position)),(e.line===o||e.lineIndent>t)&&0!==c)A(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return b&&T(e,l,h,m,g,null,n,a,p),v&&(e.tag=d,e.anchor=u,e.kind="mapping",e.result=l),v}(e,k,b))||function(e,t){var i,r,s,o,n,a,p,c,d,u,l,h,m=!0,f=e.tag,g=e.anchor,x=Object.create(null);if(91===(h=e.input.charCodeAt(e.position)))n=93,c=!1,o=[];else{if(123!==h)return!1;n=125,c=!0,o={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=o),h=e.input.charCodeAt(++e.position);0!==h;){if(C(e,!0,t),(h=e.input.charCodeAt(e.position))===n)return e.position++,e.tag=f,e.anchor=g,e.kind=c?"mapping":"sequence",e.result=o,!0;m?44===h&&A(e,"expected the node content, but found ','"):A(e,"missed comma between flow collection entries"),l=null,a=p=!1,63===h&&y(e.input.charCodeAt(e.position+1))&&(a=p=!0,e.position++,C(e,!0,t)),i=e.line,r=e.lineStart,s=e.position,F(e,t,1,!1,!0),u=e.tag,d=e.result,C(e,!0,t),h=e.input.charCodeAt(e.position),!p&&e.line!==i||58!==h||(a=!0,h=e.input.charCodeAt(++e.position),C(e,!0,t),F(e,t,1,!1,!0),l=e.result),c?T(e,o,x,u,d,l,i,r,s):a?o.push(T(e,null,x,u,d,l,i,r,s)):o.push(d),C(e,!0,t),44===(h=e.input.charCodeAt(e.position))?(m=!0,h=e.input.charCodeAt(++e.position)):m=!1}A(e,"unexpected end of the stream within a flow collection")}(e,b)?O=!0:(p&&function(e,t){var i,s,o,n,a,p=1,c=!1,d=!1,u=t,l=0,h=!1;if(124===(n=e.input.charCodeAt(e.position)))s=!1;else{if(62!==n)return!1;s=!0}for(e.kind="scalar",e.result="";0!==n;)if(43===(n=e.input.charCodeAt(++e.position))||45===n)1===p?p=43===n?3:2:A(e,"repeat of a chomping mode identifier");else{if(!((o=48<=(a=n)&&a<=57?a-48:-1)>=0))break;0===o?A(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):d?A(e,"repeat of an indentation width identifier"):(u=t+o-1,d=!0)}if(f(n)){do{n=e.input.charCodeAt(++e.position)}while(f(n));if(35===n)do{n=e.input.charCodeAt(++e.position)}while(!m(n)&&0!==n)}for(;0!==n;){for(q(e),e.lineIndent=0,n=e.input.charCodeAt(e.position);(!d||e.lineIndent<u)&&32===n;)e.lineIndent++,n=e.input.charCodeAt(++e.position);if(!d&&e.lineIndent>u&&(u=e.lineIndent),m(n))l++;else{if(e.lineIndent<u){3===p?e.result+=r.repeat("\n",c?1+l:l):1===p&&c&&(e.result+="\n");break}for(s?f(n)?(h=!0,e.result+=r.repeat("\n",c?1+l:l)):h?(h=!1,e.result+=r.repeat("\n",l+1)):0===l?c&&(e.result+=" "):e.result+=r.repeat("\n",l):e.result+=r.repeat("\n",c?1+l:l),c=!0,d=!0,l=0,i=e.position;!m(n)&&0!==n;)n=e.input.charCodeAt(++e.position);S(e,i,e.position,!1)}}return!0}(e,b)||function(e,t){var i,r,s;if(39!==(i=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=s=e.position;0!==(i=e.input.charCodeAt(e.position));)if(39===i){if(S(e,r,e.position,!0),39!==(i=e.input.charCodeAt(++e.position)))return!0;r=e.position,e.position++,s=e.position}else m(i)?(S(e,r,s,!0),_(e,C(e,!1,t)),r=s=e.position):e.position===e.lineStart&&$(e)?A(e,"unexpected end of the document within a single quoted scalar"):(e.position++,s=e.position);A(e,"unexpected end of the stream within a single quoted scalar")}(e,b)||function(e,t){var i,r,s,o,n,a,p;if(34!==(a=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,i=r=e.position;0!==(a=e.input.charCodeAt(e.position));){if(34===a)return S(e,i,e.position,!0),e.position++,!0;if(92===a){if(S(e,i,e.position,!0),m(a=e.input.charCodeAt(++e.position)))C(e,!1,t);else if(a<256&&w[a])e.result+=I[a],e.position++;else if((n=120===(p=a)?2:117===p?4:85===p?8:0)>0){for(s=n,o=0;s>0;s--)(n=x(a=e.input.charCodeAt(++e.position)))>=0?o=(o<<4)+n:A(e,"expected hexadecimal character");e.result+=v(o),e.position++}else A(e,"unknown escape sequence");i=r=e.position}else m(a)?(S(e,i,r,!0),_(e,C(e,!1,t)),i=r=e.position):e.position===e.lineStart&&$(e)?A(e,"unexpected end of the document within a double quoted scalar"):(e.position++,r=e.position)}A(e,"unexpected end of the stream within a double quoted scalar")}(e,b)?O=!0:function(e){var t,i,r;if(42!==(r=e.input.charCodeAt(e.position)))return!1;for(r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!y(r)&&!g(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&A(e,"name of an alias node must contain at least one character"),i=e.input.slice(t,e.position),a.call(e.anchorMap,i)||A(e,'unidentified alias "'+i+'"'),e.result=e.anchorMap[i],C(e,!0,-1),!0}(e)?(O=!0,null===e.tag&&null===e.anchor||A(e,"alias node should not have any properties")):function(e,t,i){var r,s,o,n,a,p,c,d,u=e.kind,l=e.result;if(y(d=e.input.charCodeAt(e.position))||g(d)||35===d||38===d||42===d||33===d||124===d||62===d||39===d||34===d||37===d||64===d||96===d)return!1;if((63===d||45===d)&&(y(r=e.input.charCodeAt(e.position+1))||i&&g(r)))return!1;for(e.kind="scalar",e.result="",s=o=e.position,n=!1;0!==d;){if(58===d){if(y(r=e.input.charCodeAt(e.position+1))||i&&g(r))break}else if(35===d){if(y(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&$(e)||i&&g(d))break;if(m(d)){if(a=e.line,p=e.lineStart,c=e.lineIndent,C(e,!1,-1),e.lineIndent>=t){n=!0,d=e.input.charCodeAt(e.position);continue}e.position=o,e.line=a,e.lineStart=p,e.lineIndent=c;break}}n&&(S(e,s,o,!1),_(e,e.line-a),s=o=e.position,n=!1),f(d)||(o=e.position+1),d=e.input.charCodeAt(++e.position)}return S(e,s,o,!1),!!e.result||(e.kind=u,e.result=l,!1)}(e,b,1===i)&&(O=!0,null===e.tag&&(e.tag="?")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===P&&(O=c&&R(e,k))),null===e.tag)null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);else if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&A(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),d=0,u=e.implicitTypes.length;d<u;d+=1)if((h=e.implicitTypes[d]).resolve(e.result)){e.result=h.construct(e.result),e.tag=h.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else if("!"!==e.tag){if(a.call(e.typeMap[e.kind||"fallback"],e.tag))h=e.typeMap[e.kind||"fallback"][e.tag];else for(h=null,d=0,u=(l=e.typeMap.multi[e.kind||"fallback"]).length;d<u;d+=1)if(e.tag.slice(0,l[d].tag.length)===l[d].tag){h=l[d];break}h||A(e,"unknown tag !<"+e.tag+">"),null!==e.result&&h.kind!==e.kind&&A(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+h.kind+'", not "'+e.kind+'"'),h.resolve(e.result,e.tag)?(e.result=h.construct(e.result,e.tag),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):A(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||O}function L(e){var t,i,r,s,o=e.position,n=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap=Object.create(null),e.anchorMap=Object.create(null);0!==(s=e.input.charCodeAt(e.position))&&(C(e,!0,-1),s=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==s));){for(n=!0,s=e.input.charCodeAt(++e.position),t=e.position;0!==s&&!y(s);)s=e.input.charCodeAt(++e.position);for(r=[],(i=e.input.slice(t,e.position)).length<1&&A(e,"directive name must not be less than one character in length");0!==s;){for(;f(s);)s=e.input.charCodeAt(++e.position);if(35===s){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&!m(s));break}if(m(s))break;for(t=e.position;0!==s&&!y(s);)s=e.input.charCodeAt(++e.position);r.push(e.input.slice(t,e.position))}0!==s&&q(e),a.call(E,i)?E[i](e,i,r):O(e,'unknown document directive "'+i+'"')}C(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,C(e,!0,-1)):n&&A(e,"directives end mark is expected"),F(e,e.lineIndent-1,4,!1,!0),C(e,!0,-1),e.checkLineBreaks&&c.test(e.input.slice(o,e.position))&&O(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&$(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,C(e,!0,-1)):e.position<e.length-1&&A(e,"end of the stream or a document separator is expected")}function V(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var i=new P(e,t),r=e.indexOf("\0");for(-1!==r&&(i.position=r,A(i,"null byte is not allowed in input")),i.input+="\0";32===i.input.charCodeAt(i.position);)i.lineIndent+=1,i.position+=1;for(;i.position<i.length-1;)L(i);return i.documents}e.exports.loadAll=function(e,t,i){null!==t&&"object"==typeof t&&void 0===i&&(i=t,t=null);var r=V(e,i);if("function"!=typeof t)return r;for(var s=0,o=r.length;s<o;s+=1)t(r[s])},e.exports.load=function(e,t){var i=V(e,t);if(0!==i.length){if(1===i.length)return i[0];throw new s("expected a single document in the stream, but found more")}}},1736:(e,t,i)=>{"use strict";var r=i(6261),s=i(9125),o=i(484),n=i(8898),a=i(3732);class p extends n.NodeBase{constructor(e){super(o.ALIAS),this.source=e,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(e,t){let i,r;t?.aliasResolveCache?i=t.aliasResolveCache:(i=[],s.visit(e,{Node:(e,t)=>{(o.isAlias(t)||o.hasAnchor(t))&&i.push(t)}}),t&&(t.aliasResolveCache=i));for(const e of i){if(e===this)break;e.anchor===this.source&&(r=e)}return r}toJSON(e,t){if(!t)return{source:this.source};const{anchors:i,doc:r,maxAliasCount:s}=t,o=this.resolve(r,t);if(!o){const e=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(e)}let n=i.get(o);if(n||(a.toJS(o,null,t),n=i.get(o)),!n||void 0===n.res)throw new ReferenceError("This should not happen: Alias anchor was not resolved?");if(s>=0&&(n.count+=1,0===n.aliasCount&&(n.aliasCount=c(r,o,i)),n.count*n.aliasCount>s))throw new ReferenceError("Excessive alias count indicates a resource exhaustion attack");return n.res}toString(e,t,i){const s=`*${this.source}`;if(e){if(r.anchorIsValid(this.source),e.options.verifyAliasOrder&&!e.anchors.has(this.source)){const e=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(e)}if(e.implicitKey)return`${s} `}return s}}function c(e,t,i){if(o.isAlias(t)){const r=t.resolve(e),s=i&&r&&i.get(r);return s?s.count*s.aliasCount:0}if(o.isCollection(t)){let r=0;for(const s of t.items){const t=c(e,s,i);t>r&&(r=t)}return r}if(o.isPair(t)){const r=c(e,t.key,i),s=c(e,t.value,i);return Math.max(r,s)}return 1}t.Alias=p},1755:(e,t,i)=>{"use strict";var r=i(81),s=i(5139),o=i(1614),n=i(484),a=i(7902),p=i(9714);function c(e,t){const i=n.isScalar(t)?t.value:t;for(const r of e)if(n.isPair(r)){if(r.key===t||r.key===i)return r;if(n.isScalar(r.key)&&r.key.value===i)return r}}class d extends o.Collection{static get tagName(){return"tag:yaml.org,2002:map"}constructor(e){super(n.MAP,e),this.items=[]}static from(e,t,i){const{keepUndefined:r,replacer:s}=i,o=new this(e),n=(e,n)=>{if("function"==typeof s)n=s.call(t,e,n);else if(Array.isArray(s)&&!s.includes(e))return;(void 0!==n||r)&&o.items.push(a.createPair(e,n,i))};if(t instanceof Map)for(const[e,i]of t)n(e,i);else if(t&&"object"==typeof t)for(const e of Object.keys(t))n(e,t[e]);return"function"==typeof e.sortMapEntries&&o.items.sort(e.sortMapEntries),o}add(e,t){let i;i=n.isPair(e)?e:e&&"object"==typeof e&&"key"in e?new a.Pair(e.key,e.value):new a.Pair(e,e?.value);const r=c(this.items,i.key),s=this.schema?.sortMapEntries;if(r){if(!t)throw new Error(`Key ${i.key} already set`);n.isScalar(r.value)&&p.isScalarValue(i.value)?r.value.value=i.value:r.value=i.value}else if(s){const e=this.items.findIndex((e=>s(i,e)<0));-1===e?this.items.push(i):this.items.splice(e,0,i)}else this.items.push(i)}delete(e){const t=c(this.items,e);return!!t&&this.items.splice(this.items.indexOf(t),1).length>0}get(e,t){const i=c(this.items,e),r=i?.value;return(!t&&n.isScalar(r)?r.value:r)??void 0}has(e){return!!c(this.items,e)}set(e,t){this.add(new a.Pair(e,t),!0)}toJSON(e,t,i){const r=i?new i:t?.mapAsMap?new Map:{};t?.onCreate&&t.onCreate(r);for(const e of this.items)s.addPairToJSMap(t,r,e);return r}toString(e,t,i){if(!e)return JSON.stringify(this);for(const e of this.items)if(!n.isPair(e))throw new Error(`Map items must all be pairs; found ${JSON.stringify(e)} instead`);return!e.allNullValues&&this.hasAllNullValues(!1)&&(e=Object.assign({},e,{allNullValues:!0})),r.stringifyCollection(this,e,{blockItemPrefix:"",flowChars:{start:"{",end:"}"},itemIndent:e.indent||"",onChompKeep:i,onComment:t})}}t.YAMLMap=d,t.findPair=c},1768:(e,t,i)=>{"use strict";var r=i(484),s=i(3793),o=i(248);t.stringifyDocument=function(e,t){const i=[];let n=!0===t.directives;if(!1!==t.directives&&e.directives){const t=e.directives.toString(e);t?(i.push(t),n=!0):e.directives.docStart&&(n=!0)}n&&i.push("---");const a=s.createStringifyContext(e,t),{commentString:p}=a.options;if(e.commentBefore){1!==i.length&&i.unshift("");const t=p(e.commentBefore);i.unshift(o.indentComment(t,""))}let c=!1,d=null;if(e.contents){if(r.isNode(e.contents)){if(e.contents.spaceBefore&&n&&i.push(""),e.contents.commentBefore){const t=p(e.contents.commentBefore);i.push(o.indentComment(t,""))}a.forceBlockIndent=!!e.comment,d=e.contents.comment}const t=d?void 0:()=>c=!0;let u=s.stringify(e.contents,a,(()=>d=null),t);d&&(u+=o.lineComment(u,"",p(d))),"|"!==u[0]&&">"!==u[0]||"---"!==i[i.length-1]?i.push(u):i[i.length-1]=`--- ${u}`}else i.push(s.stringify(e.contents,a));if(e.directives?.docEnd)if(e.comment){const t=p(e.comment);t.includes("\n")?(i.push("..."),i.push(o.indentComment(t,""))):i.push(`... ${t}`)}else i.push("...");else{let t=e.comment;t&&c&&(t=t.replace(/^\n+/,"")),t&&(c&&!d||""===i[i.length-1]||i.push(""),i.push(o.indentComment(p(t),"")))}return i.join("\n")+"\n"}},1769:(e,t,i)=>{"use strict";e.exports=i(6184)},1774:(e,t,i)=>{"use strict";e.exports=s;var r=i(5082);function s(){this.path=void 0,this.value=void 0,this.$refs=void 0,this.pathType=void 0}s.prototype.exists=function(e,t){try{return this.resolve(e,t),!0}catch(e){return!1}},s.prototype.get=function(e,t){return this.resolve(e,t).value},s.prototype.resolve=function(e,t,i){return new r(this,e,i).resolve(this.value,t)},s.prototype.set=function(e,t){var i=new r(this,e);this.value=i.set(this.value,t)},s.is$Ref=function(e){return e&&"object"==typeof e&&"string"==typeof e.$ref&&e.$ref.length>0},s.isExternal$Ref=function(e){return s.is$Ref(e)&&"#"!==e.$ref[0]},s.isAllowed$Ref=function(e,t){if(s.is$Ref(e)){if("#/"===e.$ref.substr(0,2)||"#"===e.$ref)return!0;if("#"!==e.$ref[0]&&(!t||t.resolve.external))return!0}},s.isExtended$Ref=function(e){return s.is$Ref(e)&&Object.keys(e).length>1},s.dereference=function(e,t){if(t&&"object"==typeof t&&s.isExtended$Ref(e)){var i={};return Object.keys(e).forEach((function(t){"$ref"!==t&&(i[t]=e[t])})),Object.keys(t).forEach((function(e){e in i||(i[e]=t[e])})),i}return t}},1791:(e,t,i)=>{"use strict";var r=i(8300),s=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),o=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new r("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==s.exec(e)||null!==o.exec(e))},construct:function(e){var t,i,r,n,a,p,c,d,u=0,l=null;if(null===(t=s.exec(e))&&(t=o.exec(e)),null===t)throw new Error("Date resolve error");if(i=+t[1],r=+t[2]-1,n=+t[3],!t[4])return new Date(Date.UTC(i,r,n));if(a=+t[4],p=+t[5],c=+t[6],t[7]){for(u=t[7].slice(0,3);u.length<3;)u+="0";u=+u}return t[9]&&(l=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(l=-l)),d=new Date(Date.UTC(i,r,n,a,p,c,u)),l&&d.setTime(d.getTime()-l),d},instanceOf:Date,represent:function(e){return e.toISOString()}})},1826:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(9889),s=i(6795),o=["$schema","$id","$defs","$vocabulary",{keyword:"$comment"},"definitions",r.default,s.default];t.default=o},1851:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},1856:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o=i(2883),n=i(9139),a={keyword:"items",type:"array",schemaType:["object","boolean"],before:"uniqueItems",error:{message:({params:{len:e}})=>r.str`must NOT have more than ${e} items`,params:({params:{len:e}})=>r._`{limit: ${e}}`},code(e){const{schema:t,parentSchema:i,it:r}=e,{prefixItems:a}=i;r.items=!0,(0,s.alwaysValidSchema)(r,t)||(a?(0,n.validateAdditionalItems)(e,a):e.ok((0,o.validateArray)(e)))}};t.default=a},1873:(e,t,i)=>{e.exports={parallel:i(8798),serial:i(4462),serialOrdered:i(28)}},1887:(e,t,i)=>{"use strict";var r=i(1774),s=i(5082),o=i(8692),n=i(1893);function a(e,t,i,o){var n=[];return e&&"object"==typeof e&&(r.isExternal$Ref(e)?n.push(p(e,t,i,o)):Object.keys(e).forEach((function(c){var d=s.join(t,c),u=e[c];r.isExternal$Ref(u)?n.push(p(u,d,i,o)):n=n.concat(a(u,d,i,o))}))),n}function p(e,t,i,r){var s=n.resolve(t,e.$ref),p=n.stripHash(s);return(e=i._$refs[p])?Promise.resolve(e.value):o(s,i,r).then((function(e){var t=a(e,p+"#",i,r);return Promise.all(t)}))}e.exports=function(e,t){if(!t.resolve.external)return Promise.resolve();try{var i=a(e.schema,e.$refs._root$Ref.path+"#",e.$refs,t);return Promise.all(i)}catch(e){return Promise.reject(e)}}},1893:(e,t,i)=>{"use strict";var r=/^win/.test(process.platform),s=/\//g,o=/^(\w{2,}):\/\//i,n=e.exports,a=[/\?/g,"%3F",/\#/g,"%23"],p=[/\%23/g,"#",/\%24/g,"$",/\%26/g,"&",/\%2C/g,",",/\%40/g,"@"];t.parse=i(7016).parse,t.resolve=i(7016).resolve,t.cwd=function(){return process.browser?location.href:process.cwd()+"/"},t.getProtocol=function(e){var t=o.exec(e);if(t)return t[1].toLowerCase()},t.getExtension=function(e){var t=e.lastIndexOf(".");return t>=0?e.substr(t).toLowerCase():""},t.getHash=function(e){var t=e.indexOf("#");return t>=0?e.substr(t):"#"},t.stripHash=function(e){var t=e.indexOf("#");return t>=0&&(e=e.substr(0,t)),e},t.isHttp=function(e){var t=n.getProtocol(e);return"http"===t||"https"===t||void 0===t&&process.browser},t.isFileSystemPath=function(e){if(process.browser)return!1;var t=n.getProtocol(e);return void 0===t||"file"===t},t.fromFileSystemPath=function(e){r&&(e=e.replace(/\\/g,"/")),e=encodeURI(e);for(var t=0;t<a.length;t+=2)e=e.replace(a[t],a[t+1]);return e},t.toFileSystemPath=function(e,t){e=decodeURI(e);for(var i=0;i<p.length;i+=2)e=e.replace(p[i],p[i+1]);var o="file://"===e.substr(0,7).toLowerCase();return o&&(e="/"===e[7]?e.substr(8):e.substr(7),r&&"/"===e[1]&&(e=e[0]+":"+e.substr(1)),t?e="file:///"+e:(o=!1,e=r?e:"/"+e)),r&&!o&&":\\"===(e=e.replace(s,"\\")).substr(1,2)&&(e=e[0].toUpperCase()+e.substr(1)),e}},1897:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(2270),o=r(i(7210)),n=i(7210);t.default={order:200,allowEmpty:!0,canParse:[".yaml",".yml",".json"],async parse(e){let t=e.data;if(Buffer.isBuffer(t)&&(t=t.toString()),"string"!=typeof t)return t;try{return o.default.load(t,{schema:n.JSON_SCHEMA})}catch(t){throw new s.ParserError(t?.message||"Parser Error",e.url)}}}},1919:(e,t,i)=>{"use strict";var r=i(484),s=i(6010);const o={collection:"seq",default:!0,nodeClass:s.YAMLSeq,tag:"tag:yaml.org,2002:seq",resolve:(e,t)=>(r.isSeq(e)||t("Expected a sequence for this tag"),e),createNode:(e,t,i)=>s.YAMLSeq.from(e,t,i)};t.seq=o},2017:e=>{"use strict";e.exports=function e(t,i){if(t===i)return!0;if(t&&i&&"object"==typeof t&&"object"==typeof i){if(t.constructor!==i.constructor)return!1;var r,s,o;if(Array.isArray(t)){if((r=t.length)!=i.length)return!1;for(s=r;0!==s--;)if(!e(t[s],i[s]))return!1;return!0}if(t.constructor===RegExp)return t.source===i.source&&t.flags===i.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===i.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===i.toString();if((r=(o=Object.keys(t)).length)!==Object.keys(i).length)return!1;for(s=r;0!==s--;)if(!Object.prototype.hasOwnProperty.call(i,o[s]))return!1;for(s=r;0!==s--;){var n=o[s];if(!e(t[n],i[n]))return!1}return!0}return t!=t&&i!=i}},2018:e=>{"use strict";e.exports=require("tty")},2031:(e,t,i)=>{"use strict";var r=i(1774),s=i(5082),o=i(8543),n=i(1893);function a(e,t,i,o,n,d){var u,l={value:e,circular:!1};return e&&"object"==typeof e&&(o.push(e),r.isAllowed$Ref(e,d)?(u=p(e,t,i,o,n,d),l.circular=u.circular,l.value=u.value):Object.keys(e).forEach((function(h){var m=s.join(t,h),f=s.join(i,h),y=e[h],g=!1;r.isAllowed$Ref(y,d)?(g=(u=p(y,m,f,o,n,d)).circular,e[h]=u.value):-1===o.indexOf(y)?(g=(u=a(y,m,f,o,n,d)).circular,e[h]=u.value):g=c(m,n,d),l.circular=l.circular||g})),o.pop()),l}function p(e,t,i,s,o,p){var d=n.resolve(t,e.$ref),u=o._resolve(d,p),l=u.circular,h=l||-1!==s.indexOf(u.value);h&&c(t,o,p);var m=r.dereference(e,u.value);if(!h){var f=a(m,u.path,i,s,o,p);h=f.circular,m=f.value}return h&&!l&&"ignore"===p.dereference.circular&&(m=e),l&&(m.$ref=i),{circular:h,value:m}}function c(e,t,i){if(t.circular=!0,!i.dereference.circular)throw o.reference("Circular $ref pointer found at %s",e);return!0}e.exports=function(e,t){var i=a(e.schema,e.$refs._root$Ref.path,"#",[],e.$refs,t);e.$refs.circular=i.circular,e.schema=i.value}},2058:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2017),s=["number","integer","string","boolean","null"];function o(){return{keyword:"uniqueItemProperties",type:"array",schemaType:"array",compile(e,t){const i=function(e,t){return e.map((e=>{var i,r,o;const n=null===(o=null===(r=null===(i=t.items)||void 0===i?void 0:i.properties)||void 0===r?void 0:r[e])||void 0===o?void 0:o.type;return Array.isArray(n)?!n.includes("object")&&!n.includes("array"):s.includes(n)}))}(e,t);return t=>{if(t.length<=1)return!0;for(let s=0;s<e.length;s++){const o=e[s];if(i[s]){const e={};for(const i of t){if(!i||"object"!=typeof i)continue;let t=i[o];if(!t||"object"!=typeof t){if("string"==typeof t&&(t='"'+t),e[t])return!1;e[t]=!0}}}else for(let e=t.length;e--;){const i=t[e];if(i&&"object"==typeof i)for(let s=e;s--;){const e=t[s];if(e&&"object"==typeof e&&r(i[o],e[o]))return!1}}}return!0}},metaSchema:{type:"array",items:{type:"string"}}}}t.default=o,e.exports=o},2081:(e,t)=>{"use strict";function i(e,t){return t.rules.some((t=>r(e,t)))}function r(e,t){var i;return void 0!==e[t.keyword]||(null===(i=t.definition.implements)||void 0===i?void 0:i.some((t=>void 0!==e[t])))}Object.defineProperty(t,"__esModule",{value:!0}),t.shouldUseRule=t.shouldUseGroup=t.schemaHasRulesForType=void 0,t.schemaHasRulesForType=function({schema:e,self:t},r){const s=t.RULES.types[r];return s&&!0!==s&&i(e,s)},t.shouldUseGroup=i,t.shouldUseRule=r},2119:(e,t,i)=>{"use strict";var r=i(1231),s=i(5388);function o(e,t){var i=[];return e[t].forEach((function(e){var t=i.length;i.forEach((function(i,r){i.tag===e.tag&&i.kind===e.kind&&i.multi===e.multi&&(t=r)})),i[t]=e})),i}function n(e){return this.extend(e)}n.prototype.extend=function(e){var t=[],i=[];if(e instanceof s)i.push(e);else if(Array.isArray(e))i=i.concat(e);else{if(!e||!Array.isArray(e.implicit)&&!Array.isArray(e.explicit))throw new r("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");e.implicit&&(t=t.concat(e.implicit)),e.explicit&&(i=i.concat(e.explicit))}t.forEach((function(e){if(!(e instanceof s))throw new r("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(e.loadKind&&"scalar"!==e.loadKind)throw new r("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(e.multi)throw new r("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")})),i.forEach((function(e){if(!(e instanceof s))throw new r("Specified list of YAML types (or a single Type object) contains a non-Type object.")}));var a=Object.create(n.prototype);return a.implicit=(this.implicit||[]).concat(t),a.explicit=(this.explicit||[]).concat(i),a.compiledImplicit=o(a,"implicit"),a.compiledExplicit=o(a,"explicit"),a.compiledTypeMap=function(){var e,t,i={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}};function r(e){e.multi?(i.multi[e.kind].push(e),i.multi.fallback.push(e)):i[e.kind][e.tag]=i.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(r);return i}(a.compiledImplicit,a.compiledExplicit),a},e.exports=n},2131:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=a(i(7906)),c=a(i(270)),d=a(i(7888)),u=n(i(6385)),l=i(2270);function h(e,t,i,r,s,o){s||(s=new Set);let n=[];if(e&&"object"==typeof e&&!ArrayBuffer.isView(e)&&!s.has(e)){s.add(e),p.default.isExternal$Ref(e)&&n.push(async function(e,t,i,r){const s="root"===r.dereference?.externalReferenceResolution,o=u.resolve(s?u.cwd():t,e.$ref),n=u.stripHash(o),a=i._$refs[n];if(a)return Promise.resolve(a.value);try{const e=h(await(0,d.default)(o,i,r),n+"#",i,r,new Set,!0);return Promise.all(e)}catch(e){if(!r?.continueOnError||!(0,l.isHandledError)(e))throw e;return i._$refs[n]&&(e.source=decodeURI(u.stripHash(t)),e.path=u.safePointerToPath(u.getHash(t))),[]}}(e,t,i,r));const a=Object.keys(e);for(const p of a){const a=c.default.join(t,p),d=e[p];n=n.concat(h(d,a,i,r,s,o))}}return n}t.default=function(e,t){if(!t.resolve?.external)return Promise.resolve();try{const i=h(e.schema,e.$refs._root$Ref.path+"#",e.$refs,t);return Promise.all(i)}catch(e){return Promise.reject(e)}}},2148:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={keyword:["maxProperties","minProperties"],type:"object",schemaType:"number",$data:!0,error:{message({keyword:e,schemaCode:t}){const i="maxProperties"===e?"more":"fewer";return r.str`must NOT have ${i} than ${t} properties`},params:({schemaCode:e})=>r._`{limit: ${e}}`},code(e){const{keyword:t,data:i,schemaCode:s}=e,o="maxProperties"===t?r.operators.GT:r.operators.LT;e.fail$data(r._`Object.keys(${i}).length ${o} ${s}`)}};t.default=s},2203:e=>{"use strict";e.exports=require("stream")},2206:(e,t,i)=>{"use strict";var r=i(9046),s=i(2782),o=i(6845),n=i(1386);t.composeDoc=function(e,t,{offset:i,start:a,value:p,end:c},d){const u=Object.assign({_directives:t},e),l=new r.Document(void 0,u),h={atKey:!1,atRoot:!0,directives:l.directives,options:l.options,schema:l.schema},m=n.resolveProps(a,{indicator:"doc-start",next:p??c?.[0],offset:i,onError:d,parentIndent:0,startOnNewline:!0});m.found&&(l.directives.docStart=!0,!p||"block-map"!==p.type&&"block-seq"!==p.type||m.hasNewline||d(m.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")),l.contents=p?s.composeNode(h,p,m,d):s.composeEmptyNode(h,m.end,a,null,m,d);const f=l.contents.range[2],y=o.resolveEnd(c,f,!1,d);return y.comment&&(l.comment=y.comment),l.range=[i,f,y.offset],l}},2231:e=>{"use strict";e.exports=JSON.parse('{"$id":"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#","description":"Meta-schema for $data reference (JSON AnySchema extension proposal)","type":"object","required":["$data"],"properties":{"$data":{"type":"string","anyOf":[{"format":"relative-json-pointer"},{"format":"json-pointer"}]}},"additionalProperties":false}')},2270:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.InvalidPointerError=t.TimeoutError=t.MissingPointerError=t.UnmatchedResolverError=t.ResolverError=t.UnmatchedParserError=t.ParserError=t.JSONParserErrorGroup=t.JSONParserError=void 0,t.isHandledError=function(e){return e instanceof o||e instanceof n},t.normalizeError=function(e){return null===e.path&&(e.path=[]),e};const r=i(7184),s=i(6385);class o extends Error{constructor(e,t){super(),this.code="EUNKNOWN",this.name="JSONParserError",this.message=e,this.source=t,this.path=null,r.Ono.extend(this)}get footprint(){return`${this.path}+${this.source}+${this.code}+${this.message}`}}t.JSONParserError=o;class n extends Error{constructor(e){super(),this.files=e,this.name="JSONParserErrorGroup",this.message=`${this.errors.length} error${this.errors.length>1?"s":""} occurred while reading '${(0,s.toFileSystemPath)(e.$refs._root$Ref.path)}'`,r.Ono.extend(this)}static getParserErrors(e){const t=[];for(const i of Object.values(e.$refs._$refs))i.errors&&t.push(...i.errors);return t}get errors(){return n.getParserErrors(this.files)}}t.JSONParserErrorGroup=n,t.ParserError=class extends o{constructor(e,t){super(`Error parsing ${t}: ${e}`,t),this.code="EPARSER",this.name="ParserError"}},t.UnmatchedParserError=class extends o{constructor(e){super(`Could not find parser for "${e}"`,e),this.code="EUNMATCHEDPARSER",this.name="UnmatchedParserError"}},t.ResolverError=class extends o{constructor(e,t){super(e.message||`Error reading file "${t}"`,t),this.code="ERESOLVER",this.name="ResolverError","code"in e&&(this.ioErrorCode=String(e.code))}},t.UnmatchedResolverError=class extends o{constructor(e){super(`Could not find resolver for "${e}"`,e),this.code="EUNMATCHEDRESOLVER",this.name="UnmatchedResolverError"}},t.MissingPointerError=class extends o{constructor(e,t,i,r,o){super(`Missing $ref pointer "${(0,s.getHash)(t)}". Token "${e}" does not exist.`,(0,s.stripHash)(t)),this.code="EMISSINGPOINTER",this.name="MissingPointerError",this.targetToken=e,this.targetRef=i,this.targetFound=r,this.parentPath=o}},t.TimeoutError=class extends o{constructor(e){super(`Dereferencing timeout reached: ${e}ms`),this.code="ETIMEOUT",this.name="TimeoutError"}},t.InvalidPointerError=class extends o{constructor(e,t){super(`Invalid $ref pointer "${e}". Pointers must begin with "#/"`,(0,s.stripHash)(t)),this.code="EUNMATCHEDRESOLVER",this.name="InvalidPointerError"}}},2291:(e,t,i)=>{"use strict";var r=i(484),s=i(7902),o=i(1755),n=i(6010),a=i(6845),p=i(1386),c=i(9378),d=i(8334);const u="Block collections are not allowed within flow collections",l=e=>e&&("block-map"===e.type||"block-seq"===e.type);t.resolveFlowCollection=function({composeNode:e,composeEmptyNode:t},i,h,m,f){const y="{"===h.start.source,g=y?"flow map":"flow sequence",x=new(f?.nodeClass??(y?o.YAMLMap:n.YAMLSeq))(i.schema);x.flow=!0;const b=i.atRoot;b&&(i.atRoot=!1),i.atKey&&(i.atKey=!1);let v=h.offset+h.start.source.length;for(let n=0;n<h.items.length;++n){const a=h.items[n],{start:f,key:b,sep:w,value:I}=a,k=p.resolveProps(f,{flow:g,indicator:"explicit-key-ind",next:b??w?.[0],offset:v,onError:m,parentIndent:h.indent,startOnNewline:!1});if(!k.found){if(!(k.anchor||k.tag||w||I)){0===n&&k.comma?m(k.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${g}`):n<h.items.length-1&&m(k.start,"UNEXPECTED_TOKEN",`Unexpected empty item in ${g}`),k.comment&&(x.comment?x.comment+="\n"+k.comment:x.comment=k.comment),v=k.end;continue}!y&&i.options.strict&&c.containsNewline(b)&&m(b,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line")}if(0===n)k.comma&&m(k.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${g}`);else if(k.comma||m(k.start,"MISSING_CHAR",`Missing , between ${g} items`),k.comment){let e="";e:for(const t of f)switch(t.type){case"comma":case"space":break;case"comment":e=t.source.substring(1);break e;default:break e}if(e){let t=x.items[x.items.length-1];r.isPair(t)&&(t=t.value??t.key),t.comment?t.comment+="\n"+e:t.comment=e,k.comment=k.comment.substring(e.length+1)}}if(y||w||k.found){i.atKey=!0;const r=k.end,n=b?e(i,b,k,m):t(i,r,f,null,k,m);l(b)&&m(n.range,"BLOCK_IN_FLOW",u),i.atKey=!1;const c=p.resolveProps(w??[],{flow:g,indicator:"map-value-ind",next:I,offset:n.range[2],onError:m,parentIndent:h.indent,startOnNewline:!1});if(c.found){if(!y&&!k.found&&i.options.strict){if(w)for(const e of w){if(e===c.found)break;if("newline"===e.type){m(e,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line");break}}k.start<c.found.offset-1024&&m(c.found,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit flow sequence key")}}else I&&("source"in I&&I.source&&":"===I.source[0]?m(I,"MISSING_CHAR",`Missing space after : in ${g}`):m(c.start,"MISSING_CHAR",`Missing , or : between ${g} items`));const P=I?e(i,I,c,m):c.found?t(i,c.end,w,null,c,m):null;P?l(I)&&m(P.range,"BLOCK_IN_FLOW",u):c.comment&&(n.comment?n.comment+="\n"+c.comment:n.comment=c.comment);const j=new s.Pair(n,P);if(i.options.keepSourceTokens&&(j.srcToken=a),y){const e=x;d.mapIncludes(i,e.items,n)&&m(r,"DUPLICATE_KEY","Map keys must be unique"),e.items.push(j)}else{const e=new o.YAMLMap(i.schema);e.flow=!0,e.items.push(j);const t=(P??n).range;e.range=[n.range[0],t[1],t[2]],x.items.push(e)}v=P?P.range[2]:c.end}else{const r=I?e(i,I,k,m):t(i,k.end,w,null,k,m);x.items.push(r),v=r.range[2],l(I)&&m(r.range,"BLOCK_IN_FLOW",u)}}const w=y?"}":"]",[I,...k]=h.end;let P=v;if(I&&I.source===w)P=I.offset+I.source.length;else{const e=g[0].toUpperCase()+g.substring(1);m(v,b?"MISSING_CHAR":"BAD_INDENT",b?`${e} must end with a ${w}`:`${e} in block collection must be sufficiently indented and end with a ${w}`),I&&1!==I.source.length&&k.unshift(I)}if(k.length>0){const e=a.resolveEnd(k,P,i.options.strict,m);e.comment&&(x.comment?x.comment+="\n"+e.comment:x.comment=e.comment),x.range=[h.offset,P,e.offset]}else x.range=[h.offset,P,P];return x}},2300:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=void 0;var r=i(2648);Object.defineProperty(t,"KeywordCxt",{enumerable:!0,get:function(){return r.KeywordCxt}});var s=i(6675);Object.defineProperty(t,"_",{enumerable:!0,get:function(){return s._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return s.str}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return s.stringify}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return s.nil}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return s.Name}}),Object.defineProperty(t,"CodeGen",{enumerable:!0,get:function(){return s.CodeGen}});const o=i(6288),n=i(6649),a=i(3090),p=i(4253),c=i(6675),d=i(6193),u=i(9526),l=i(749),h=i(2231),m=i(130),f=(e,t)=>new RegExp(e,t);f.code="new RegExp";const y=["removeAdditional","useDefaults","coerceTypes"],g=new Set(["validate","serialize","parse","wrapper","root","schema","keyword","pattern","formats","validate$data","func","obj","Error"]),x={errorDataPath:"",format:"`validateFormats: false` can be used instead.",nullable:'"nullable" keyword is supported by default.',jsonPointers:"Deprecated jsPropertySyntax can be used instead.",extendRefs:"Deprecated ignoreKeywordsWithRef can be used instead.",missingRefs:"Pass empty schema with $id that should be ignored to ajv.addSchema.",processCode:"Use option `code: {process: (code, schemaEnv: object) => string}`",sourceCode:"Use option `code: {source: true}`",strictDefaults:"It is default now, see option `strict`.",strictKeywords:"It is default now, see option `strict`.",uniqueItems:'"uniqueItems" keyword is always validated.',unknownFormats:"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).",cache:"Map is used as cache, schema object as key.",serialize:"Map is used as cache, schema object as key.",ajvErrors:"It is default now."},b={ignoreKeywordsWithRef:"",jsPropertySyntax:"",unicode:'"minLength"/"maxLength" account for unicode characters by default.'};function v(e){var t,i,r,s,o,n,a,p,c,d,u,l,h,y,g,x,b,v,w,I,k,P,j,A,O;const E=e.strict,S=null===(t=e.code)||void 0===t?void 0:t.optimize,D=!0===S||void 0===S?1:S||0,T=null!==(r=null===(i=e.code)||void 0===i?void 0:i.regExp)&&void 0!==r?r:f,q=null!==(s=e.uriResolver)&&void 0!==s?s:m.default;return{strictSchema:null===(n=null!==(o=e.strictSchema)&&void 0!==o?o:E)||void 0===n||n,strictNumbers:null===(p=null!==(a=e.strictNumbers)&&void 0!==a?a:E)||void 0===p||p,strictTypes:null!==(d=null!==(c=e.strictTypes)&&void 0!==c?c:E)&&void 0!==d?d:"log",strictTuples:null!==(l=null!==(u=e.strictTuples)&&void 0!==u?u:E)&&void 0!==l?l:"log",strictRequired:null!==(y=null!==(h=e.strictRequired)&&void 0!==h?h:E)&&void 0!==y&&y,code:e.code?{...e.code,optimize:D,regExp:T}:{optimize:D,regExp:T},loopRequired:null!==(g=e.loopRequired)&&void 0!==g?g:200,loopEnum:null!==(x=e.loopEnum)&&void 0!==x?x:200,meta:null===(b=e.meta)||void 0===b||b,messages:null===(v=e.messages)||void 0===v||v,inlineRefs:null===(w=e.inlineRefs)||void 0===w||w,schemaId:null!==(I=e.schemaId)&&void 0!==I?I:"$id",addUsedSchema:null===(k=e.addUsedSchema)||void 0===k||k,validateSchema:null===(P=e.validateSchema)||void 0===P||P,validateFormats:null===(j=e.validateFormats)||void 0===j||j,unicodeRegExp:null===(A=e.unicodeRegExp)||void 0===A||A,int32range:null===(O=e.int32range)||void 0===O||O,uriResolver:q}}class w{constructor(e={}){this.schemas={},this.refs={},this.formats={},this._compilations=new Set,this._loading={},this._cache=new Map,e=this.opts={...e,...v(e)};const{es5:t,lines:i}=this.opts.code;this.scope=new c.ValueScope({scope:{},prefixes:g,es5:t,lines:i}),this.logger=function(e){if(!1===e)return E;if(void 0===e)return console;if(e.log&&e.warn&&e.error)return e;throw new Error("logger must implement log, warn and error methods")}(e.logger);const r=e.validateFormats;e.validateFormats=!1,this.RULES=(0,a.getRules)(),I.call(this,x,e,"NOT SUPPORTED"),I.call(this,b,e,"DEPRECATED","warn"),this._metaOpts=O.call(this),e.formats&&j.call(this),this._addVocabularies(),this._addDefaultMetaSchema(),e.keywords&&A.call(this,e.keywords),"object"==typeof e.meta&&this.addMetaSchema(e.meta),P.call(this),e.validateFormats=r}_addVocabularies(){this.addKeyword("$async")}_addDefaultMetaSchema(){const{$data:e,meta:t,schemaId:i}=this.opts;let r=h;"id"===i&&(r={...h},r.id=r.$id,delete r.$id),t&&e&&this.addMetaSchema(r,r[i],!1)}defaultMeta(){const{meta:e,schemaId:t}=this.opts;return this.opts.defaultMeta="object"==typeof e?e[t]||e:void 0}validate(e,t){let i;if("string"==typeof e){if(i=this.getSchema(e),!i)throw new Error(`no schema with key or ref "${e}"`)}else i=this.compile(e);const r=i(t);return"$async"in i||(this.errors=i.errors),r}compile(e,t){const i=this._addSchema(e,t);return i.validate||this._compileSchemaEnv(i)}compileAsync(e,t){if("function"!=typeof this.opts.loadSchema)throw new Error("options.loadSchema should be a function");const{loadSchema:i}=this.opts;return r.call(this,e,t);async function r(e,t){await s.call(this,e.$schema);const i=this._addSchema(e,t);return i.validate||o.call(this,i)}async function s(e){e&&!this.getSchema(e)&&await r.call(this,{$ref:e},!0)}async function o(e){try{return this._compileSchemaEnv(e)}catch(t){if(!(t instanceof n.default))throw t;return a.call(this,t),await p.call(this,t.missingSchema),o.call(this,e)}}function a({missingSchema:e,missingRef:t}){if(this.refs[e])throw new Error(`AnySchema ${e} is loaded but ${t} cannot be resolved`)}async function p(e){const i=await c.call(this,e);this.refs[e]||await s.call(this,i.$schema),this.refs[e]||this.addSchema(i,e,t)}async function c(e){const t=this._loading[e];if(t)return t;try{return await(this._loading[e]=i(e))}finally{delete this._loading[e]}}}addSchema(e,t,i,r=this.opts.validateSchema){if(Array.isArray(e)){for(const t of e)this.addSchema(t,void 0,i,r);return this}let s;if("object"==typeof e){const{schemaId:t}=this.opts;if(s=e[t],void 0!==s&&"string"!=typeof s)throw new Error(`schema ${t} must be string`)}return t=(0,d.normalizeId)(t||s),this._checkUnique(t),this.schemas[t]=this._addSchema(e,i,t,r,!0),this}addMetaSchema(e,t,i=this.opts.validateSchema){return this.addSchema(e,t,!0,i),this}validateSchema(e,t){if("boolean"==typeof e)return!0;let i;if(i=e.$schema,void 0!==i&&"string"!=typeof i)throw new Error("$schema must be a string");if(i=i||this.opts.defaultMeta||this.defaultMeta(),!i)return this.logger.warn("meta-schema not available"),this.errors=null,!0;const r=this.validate(i,e);if(!r&&t){const e="schema is invalid: "+this.errorsText();if("log"!==this.opts.validateSchema)throw new Error(e);this.logger.error(e)}return r}getSchema(e){let t;for(;"string"==typeof(t=k.call(this,e));)e=t;if(void 0===t){const{schemaId:i}=this.opts,r=new p.SchemaEnv({schema:{},schemaId:i});if(t=p.resolveSchema.call(this,r,e),!t)return;this.refs[e]=t}return t.validate||this._compileSchemaEnv(t)}removeSchema(e){if(e instanceof RegExp)return this._removeAllSchemas(this.schemas,e),this._removeAllSchemas(this.refs,e),this;switch(typeof e){case"undefined":return this._removeAllSchemas(this.schemas),this._removeAllSchemas(this.refs),this._cache.clear(),this;case"string":{const t=k.call(this,e);return"object"==typeof t&&this._cache.delete(t.schema),delete this.schemas[e],delete this.refs[e],this}case"object":{const t=e;this._cache.delete(t);let i=e[this.opts.schemaId];return i&&(i=(0,d.normalizeId)(i),delete this.schemas[i],delete this.refs[i]),this}default:throw new Error("ajv.removeSchema: invalid parameter")}}addVocabulary(e){for(const t of e)this.addKeyword(t);return this}addKeyword(e,t){let i;if("string"==typeof e)i=e,"object"==typeof t&&(this.logger.warn("these parameters are deprecated, see docs for addKeyword"),t.keyword=i);else{if("object"!=typeof e||void 0!==t)throw new Error("invalid addKeywords parameters");if(i=(t=e).keyword,Array.isArray(i)&&!i.length)throw new Error("addKeywords: keyword must be string or non-empty array")}if(D.call(this,i,t),!t)return(0,l.eachItem)(i,(e=>T.call(this,e))),this;C.call(this,t);const r={...t,type:(0,u.getJSONTypes)(t.type),schemaType:(0,u.getJSONTypes)(t.schemaType)};return(0,l.eachItem)(i,0===r.type.length?e=>T.call(this,e,r):e=>r.type.forEach((t=>T.call(this,e,r,t)))),this}getKeyword(e){const t=this.RULES.all[e];return"object"==typeof t?t.definition:!!t}removeKeyword(e){const{RULES:t}=this;delete t.keywords[e],delete t.all[e];for(const i of t.rules){const t=i.rules.findIndex((t=>t.keyword===e));t>=0&&i.rules.splice(t,1)}return this}addFormat(e,t){return"string"==typeof t&&(t=new RegExp(t)),this.formats[e]=t,this}errorsText(e=this.errors,{separator:t=", ",dataVar:i="data"}={}){return e&&0!==e.length?e.map((e=>`${i}${e.instancePath} ${e.message}`)).reduce(((e,i)=>e+t+i)):"No errors"}$dataMetaSchema(e,t){const i=this.RULES.all;e=JSON.parse(JSON.stringify(e));for(const r of t){const t=r.split("/").slice(1);let s=e;for(const e of t)s=s[e];for(const e in i){const t=i[e];if("object"!=typeof t)continue;const{$data:r}=t.definition,o=s[e];r&&o&&(s[e]=_(o))}}return e}_removeAllSchemas(e,t){for(const i in e){const r=e[i];t&&!t.test(i)||("string"==typeof r?delete e[i]:r&&!r.meta&&(this._cache.delete(r.schema),delete e[i]))}}_addSchema(e,t,i,r=this.opts.validateSchema,s=this.opts.addUsedSchema){let o;const{schemaId:n}=this.opts;if("object"==typeof e)o=e[n];else{if(this.opts.jtd)throw new Error("schema must be object");if("boolean"!=typeof e)throw new Error("schema must be object or boolean")}let a=this._cache.get(e);if(void 0!==a)return a;i=(0,d.normalizeId)(o||i);const c=d.getSchemaRefs.call(this,e,i);return a=new p.SchemaEnv({schema:e,schemaId:n,meta:t,baseId:i,localRefs:c}),this._cache.set(a.schema,a),s&&!i.startsWith("#")&&(i&&this._checkUnique(i),this.refs[i]=a),r&&this.validateSchema(e,!0),a}_checkUnique(e){if(this.schemas[e]||this.refs[e])throw new Error(`schema with key or id "${e}" already exists`)}_compileSchemaEnv(e){if(e.meta?this._compileMetaSchema(e):p.compileSchema.call(this,e),!e.validate)throw new Error("ajv implementation error");return e.validate}_compileMetaSchema(e){const t=this.opts;this.opts=this._metaOpts;try{p.compileSchema.call(this,e)}finally{this.opts=t}}}function I(e,t,i,r="error"){for(const s in e){const o=s;o in t&&this.logger[r](`${i}: option ${s}. ${e[o]}`)}}function k(e){return e=(0,d.normalizeId)(e),this.schemas[e]||this.refs[e]}function P(){const e=this.opts.schemas;if(e)if(Array.isArray(e))this.addSchema(e);else for(const t in e)this.addSchema(e[t],t)}function j(){for(const e in this.opts.formats){const t=this.opts.formats[e];t&&this.addFormat(e,t)}}function A(e){if(Array.isArray(e))this.addVocabulary(e);else{this.logger.warn("keywords option as map is deprecated, pass array");for(const t in e){const i=e[t];i.keyword||(i.keyword=t),this.addKeyword(i)}}}function O(){const e={...this.opts};for(const t of y)delete e[t];return e}w.ValidationError=o.default,w.MissingRefError=n.default,t.default=w;const E={log(){},warn(){},error(){}},S=/^[a-z_$][a-z0-9_$:-]*$/i;function D(e,t){const{RULES:i}=this;if((0,l.eachItem)(e,(e=>{if(i.keywords[e])throw new Error(`Keyword ${e} is already defined`);if(!S.test(e))throw new Error(`Keyword ${e} has invalid name`)})),t&&t.$data&&!("code"in t)&&!("validate"in t))throw new Error('$data keyword must have "code" or "validate" function')}function T(e,t,i){var r;const s=null==t?void 0:t.post;if(i&&s)throw new Error('keyword with "post" flag cannot have "type"');const{RULES:o}=this;let n=s?o.post:o.rules.find((({type:e})=>e===i));if(n||(n={type:i,rules:[]},o.rules.push(n)),o.keywords[e]=!0,!t)return;const a={keyword:e,definition:{...t,type:(0,u.getJSONTypes)(t.type),schemaType:(0,u.getJSONTypes)(t.schemaType)}};t.before?q.call(this,n,a,t.before):n.rules.push(a),o.all[e]=a,null===(r=t.implements)||void 0===r||r.forEach((e=>this.addKeyword(e)))}function q(e,t,i){const r=e.rules.findIndex((e=>e.keyword===i));r>=0?e.rules.splice(r,0,t):(e.rules.push(t),this.logger.warn(`rule ${i} is not defined`))}function C(e){let{metaSchema:t}=e;void 0!==t&&(e.$data&&this.opts.$data&&(t=_(t)),e.validateSchema=this.compile(t,!0))}const $={$ref:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"};function _(e){return{anyOf:[e,$]}}},2309:(e,t,i)=>{"use strict";var r=i(8543),s=i(1774),o=i(1893);function n(){this.circular=!1,this._$refs={},this._root$Ref=null}function a(e,t){var i=Object.keys(e);return(t=Array.isArray(t[0])?t[0]:Array.prototype.slice.call(t)).length>0&&t[0]&&(i=i.filter((function(i){return-1!==t.indexOf(e[i].pathType)}))),i.map((function(t){return{encoded:t,decoded:"file"===e[t].pathType?o.toFileSystemPath(t,!0):t}}))}e.exports=n,n.prototype.paths=function(e){return a(this._$refs,arguments).map((function(e){return e.decoded}))},n.prototype.values=function(e){var t=this._$refs;return a(t,arguments).reduce((function(e,i){return e[i.decoded]=t[i.encoded].value,e}),{})},n.prototype.toJSON=n.prototype.values,n.prototype.exists=function(e,t){try{return this._resolve(e,t),!0}catch(e){return!1}},n.prototype.get=function(e,t){return this._resolve(e,t).value},n.prototype.set=function(e,t){var i=o.resolve(this._root$Ref.path,e),s=o.stripHash(i),n=this._$refs[s];if(!n)throw r('Error resolving $ref pointer "%s". \n"%s" not found.',e,s);n.set(i,t)},n.prototype._add=function(e){var t=o.stripHash(e),i=new s;return i.path=t,i.$refs=this,this._$refs[t]=i,this._root$Ref=this._root$Ref||i,i},n.prototype._resolve=function(e,t){var i=o.resolve(this._root$Ref.path,e),s=o.stripHash(i),n=this._$refs[s];if(!n)throw r('Error resolving $ref pointer "%s". \n"%s" not found.',e,s);return n.resolve(i,t,e)},n.prototype._get$Ref=function(e){e=o.resolve(this._root$Ref.path,e);var t=o.stripHash(e);return this._$refs[t]}},2313:(e,t,i)=>{var r=i(405);e.exports=function(e){var t=!1;return r((function(){t=!0})),function(i,s){t?e(i,s):r((function(){e(i,s)}))}}},2337:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o=i(5472),n={keyword:"enum",schemaType:"array",$data:!0,error:{message:"must be equal to one of the allowed values",params:({schemaCode:e})=>r._`{allowedValues: ${e}}`},code(e){const{gen:t,data:i,$data:n,schema:a,schemaCode:p,it:c}=e;if(!n&&0===a.length)throw new Error("enum must have non-empty array");const d=a.length>=c.opts.loopEnum;let u;const l=()=>null!=u?u:u=(0,s.useFunc)(t,o.default);let h;if(d||n)h=t.let("valid"),e.block$data(h,(function(){t.assign(h,!1),t.forOf("v",p,(e=>t.if(r._`${l()}(${i}, ${e})`,(()=>t.assign(h,!0).break()))))}));else{if(!Array.isArray(a))throw new Error("ajv implementation error");const e=t.const("vSchema",p);h=(0,r.or)(...a.map(((t,s)=>function(e,t){const s=a[t];return"object"==typeof s&&null!==s?r._`${l()}(${i}, ${e}[${t}])`:r._`${i} === ${s}`}(e,s))))}e.pass(h)}};t.default=n},2369:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},2376:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2270);t.default={order:100,allowEmpty:!0,canParse:".json",allowBOM:!0,async parse(e){let t=e.data;if(Buffer.isBuffer(t)&&(t=t.toString()),"string"!=typeof t)return t;if(0!==t.trim().length)try{return JSON.parse(t)}catch(i){if(this.allowBOM)try{const e=t.indexOf("{");return t=t.slice(e),JSON.parse(t)}catch(t){throw new r.ParserError(t.message,e.url)}throw new r.ParserError(i.message,e.url)}}}},2434:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=(0,r(i(6971)).default)("oneRequired");t.default=s,e.exports=s},2439:(e,t,i)=>{"use strict";var r=i(1774),s=i(5082),o=i(1893);function n(e,t,i,o,p,c,d,u){var l=null===t?e:e[t];l&&"object"==typeof l&&(r.isAllowed$Ref(l)?a(e,t,i,o,p,c,d,u):Object.keys(l).sort((function(e,t){return"definitions"===e?-1:"definitions"===t?1:e.length-t.length})).forEach((function(e){var t=s.join(i,e),h=s.join(o,e),m=l[e];r.isAllowed$Ref(m)?a(l,e,i,h,p,c,d,u):n(l,e,t,h,p,c,d,u)})))}function a(e,t,i,a,p,c,d,u){var l=null===t?e:e[t],h=o.resolve(i,l.$ref),m=d._resolve(h,u),f=s.parse(a).length,y=o.stripHash(m.path),g=o.getHash(m.path),x=y!==d._root$Ref.path,b=r.isExtended$Ref(l);p+=m.indirections;var v=function(e,t,i){for(var r=0;r<e.length;r++){var s=e[r];if(s.parent===t&&s.key===i)return s}}(c,e,t);if(v){if(!(f<v.depth||p<v.indirections))return;!function(e,t){var i=e.indexOf(t);e.splice(i,1)}(c,v)}c.push({$ref:l,parent:e,key:t,pathFromRoot:a,depth:f,file:y,hash:g,value:m.value,circular:m.circular,extended:b,external:x,indirections:p}),n(m.value,null,m.path,a,p+1,c,d,u)}e.exports=function(e,t){var i=[];n(e,"schema",e.$refs._root$Ref.path+"#","#",0,i,e.$refs,t),function(e){var t,i,o;e.sort((function(e,t){if(e.file!==t.file)return e.file<t.file?-1:1;if(e.hash!==t.hash)return e.hash<t.hash?-1:1;if(e.circular!==t.circular)return e.circular?-1:1;if(e.extended!==t.extended)return e.extended?1:-1;if(e.indirections!==t.indirections)return e.indirections-t.indirections;if(e.depth!==t.depth)return e.depth-t.depth;var i=e.pathFromRoot.lastIndexOf("/definitions"),r=t.pathFromRoot.lastIndexOf("/definitions");return i!==r?r-i:e.pathFromRoot.length-t.pathFromRoot.length})),e.forEach((function(e){e.external?e.file===t&&e.hash===i?e.$ref.$ref=o:e.file===t&&0===e.hash.indexOf(i+"/")?e.$ref.$ref=s.join(o,s.parse(e.hash.replace(i,"#"))):(t=e.file,i=e.hash,o=e.pathFromRoot,e.$ref=e.parent[e.key]=r.dereference(e.$ref,e.value),e.circular&&(e.$ref.$ref=e.pathFromRoot)):e.$ref.$ref=e.hash}))}(i)}},2467:(e,t,i)=>{const r=i(857),{validate:s}=i(3614),{log:o,loadEnvs:n,replaceEnvs:a}=i(7775),{loadDescription:p}=i(5849);t.setConfig=async function({config:e}){e.loadVariables&&await n(e.loadVariables),e=a(e);const t=s({schemaKey:"config_v3",object:e});return t.valid||(o(e,"error",`Invalid config object: ${t.errors}. Exiting.`),process.exit(1)),(e=t.object).fileTypes=e.fileTypes.map((t=>{if("object"==typeof t)return t;const i=d[t];if(void 0!==i)return i;o(e,"error",`Invalid config. "${t}" isn't a valid fileType value.`),process.exit(1)})),"string"==typeof e.input&&(e.input=[e.input]),"string"==typeof e.beforeAny&&(""===e.beforeAny?e.beforeAny=[]:e.beforeAny=[e.beforeAny]),"string"==typeof e.afterAll&&(""===e.afterAll?e.afterAll=[]:e.afterAll=[e.afterAll]),"string"==typeof e.fileTypes&&(e.fileTypes=[e.fileTypes]),e.fileTypes=e.fileTypes.map((e=>(e.inlineStatements&&("string"==typeof e.inlineStatements.testStart&&(e.inlineStatements.testStart=[e.inlineStatements.testStart]),"string"==typeof e.inlineStatements.testEnd&&(e.inlineStatements.testEnd=[e.inlineStatements.testEnd]),"string"==typeof e.inlineStatements.ignoreStart&&(e.inlineStatements.ignoreStart=[e.inlineStatements.ignoreStart]),"string"==typeof e.inlineStatements.ignoreEnd&&(e.inlineStatements.ignoreEnd=[e.inlineStatements.ignoreEnd]),"string"==typeof e.inlineStatements.step&&(e.inlineStatements.step=[e.inlineStatements.step])),e.markup&&(e.markup=e.markup.map((e=>("string"==typeof e.regex&&(e.regex=[e.regex]),e)))),e))),e.environment=function(){const e={};return e.arch=r.arch(),e.platform=c[process.platform],e.workingDirectory=process.cwd(),e}(),await async function(e){if(e?.integrations?.openApi)for(const t of e.integrations.openApi)try{t.definition=await p(t.descriptionPath)}catch(i){o(e,"error",`Failed to load OpenAPI description from ${t.descriptionPath}: ${i.message}`),e.integrations.openApi=e.integrations.openApi.filter((e=>e!==t))}}(e),e};const c={darwin:"mac",linux:"linux",win32:"windows"};let d={asciidoc_1_0:{name:"asciidoc",extensions:["adoc","asciidoc","asc"],inlineStatements:{testStart:["\\/\\/\\s+\\(\\s*test\\s+([\\s\\S]*?)\\s*\\)"],testEnd:["\\/\\/\\s+\\(\\s*test end\\s*\\)"],ignoreStart:["\\/\\/\\s+\\(\\s*test ignore start\\s*\\)"],ignoreEnd:["\\/\\/\\s+\\(\\s*test ignore end\\s*\\)"],step:["\\/\\/\\s+\\(\\s*step\\s+([\\s\\S]*?)\\s*\\)"]},markup:[]},html_1_0:{name:"html",extensions:["html","htm"],inlineStatements:{testStart:["\x3c!--\\s*test\\s+?([\\s\\S]*?)\\s*--\x3e"],testEnd:["\x3c!--\\s*test end\\s*([\\s\\S]*?)\\s*--\x3e"],ignoreStart:["\x3c!--\\s*test ignore start\\s*--\x3e"],ignoreEnd:["\x3c!--\\s*test ignore end\\s*--\x3e"],step:["\x3c!--\\s*step\\s+?([\\s\\S]*?)\\s*--\x3e"]},markup:[]},markdown_1_0:{name:"markdown",extensions:["md","markdown","mdx"],inlineStatements:{testStart:["{\\/\\*\\s*test\\s+?([\\s\\S]*?)\\s*\\*\\/}","\x3c!--\\s*test\\s*([\\s\\S]*?)\\s*--\x3e","\\[comment\\]:\\s+#\\s+\\(test\\s*(.*?)\\s*\\)","\\[comment\\]:\\s+#\\s+\\(test start\\s*(.*?)\\s*\\)"],testEnd:["{\\/\\*\\s*test end\\s*\\*\\/}","\x3c!--\\s*test end\\s*([\\s\\S]*?)\\s*--\x3e","\\[comment\\]:\\s+#\\s+\\(test end\\)"],ignoreStart:["{\\/\\*\\s*test ignore start\\s*\\*\\/}","\x3c!--\\s*test ignore start\\s*--\x3e"],ignoreEnd:["{\\/\\*\\s*test ignore end\\s*\\*\\/}","\x3c!--\\s*test ignore end\\s*--\x3e"],step:["{\\/\\*\\s*step\\s+?([\\s\\S]*?)\\s*\\*\\/}","\x3c!--\\s*step\\s*([\\s\\S]*?)\\s*--\x3e","\\[comment\\]:\\s+#\\s+\\(step\\s*(.*?)\\s*\\)"]},markup:[{name:"checkHyperlink",regex:['(?<!\\!)\\[[^\\]]+\\]\\(\\s*(https?:\\/\\/[^\\s)]+)(?:\\s+"[^"]*")?\\s*\\)'],actions:["checkLink"]},{name:"clickOnscreenText",regex:["\\b(?:[Cc]lick|[Tt]ap|[Ll]eft-click|[Cc]hoose|[Ss]elect|[Cc]heck)\\b\\s+\\*\\*((?:(?!\\*\\*).)+)\\*\\*"],actions:["click"]},{name:"findOnscreenText",regex:["\\*\\*((?:(?!\\*\\*).)+)\\*\\*"],actions:["find"]},{name:"goToUrl",regex:['\\b(?:[Gg]o\\s+to|[Oo]pen|[Nn]avigate\\s+to|[Vv]isit|[Aa]ccess|[Pp]roceed\\s+to|[Ll]aunch)\\b\\s+\\[[^\\]]+\\]\\(\\s*(https?:\\/\\/[^\\s)]+)(?:\\s+"[^"]*")?\\s*\\)'],actions:["goTo"]},{name:"screenshotImage",regex:['!\\[[^\\]]*\\]\\(\\s*([^\\s)]+)(?:\\s+"[^"]*")?\\s*\\)\\s*\\{(?=[^}]*\\.screenshot)[^}]*\\}'],actions:["screenshot"]},{name:"typeText",regex:['\\b(?:press|enter|type)\\b\\s+"([^"]+)"'],actions:["type"]}]}};d={...d,markdown:d.markdown_1_0,asciidoc:d.asciidoc_1_0,html:d.html_1_0}},2493:(e,t,i)=>{"use strict";var r=i(6145),s=i(9343),o=i(4993),n=i(3665),a=Object.prototype.toString,p=Object.prototype.hasOwnProperty,c={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},d=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];function u(e){var t,i,o;if(t=e.toString(16).toUpperCase(),e<=255)i="x",o=2;else if(e<=65535)i="u",o=4;else{if(!(e<=4294967295))throw new s("code point within a string may not be greater than 0xFFFFFFFF");i="U",o=8}return"\\"+i+r.repeat("0",o-t.length)+t}function l(e){this.schema=e.schema||o,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=r.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var i,r,s,o,n,a,c;if(null===t)return{};for(i={},s=0,o=(r=Object.keys(t)).length;s<o;s+=1)n=r[s],a=String(t[n]),"!!"===n.slice(0,2)&&(n="tag:yaml.org,2002:"+n.slice(2)),(c=e.compiledTypeMap.fallback[n])&&p.call(c.styleAliases,a)&&(a=c.styleAliases[a]),i[n]=a;return i}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function h(e,t){for(var i,s=r.repeat(" ",t),o=0,n=-1,a="",p=e.length;o<p;)-1===(n=e.indexOf("\n",o))?(i=e.slice(o),o=p):(i=e.slice(o,n+1),o=n+1),i.length&&"\n"!==i&&(a+=s),a+=i;return a}function m(e,t){return"\n"+r.repeat(" ",e.indent*t)}function f(e){return 32===e||9===e}function y(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&65279!==e||65536<=e&&e<=1114111}function g(e,t){return y(e)&&65279!==e&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e&&58!==e&&(35!==e||t&&function(e){return y(e)&&!f(e)&&65279!==e&&13!==e&&10!==e}(t))}function x(e){return/^\n* /.test(e)}function b(e,t,i,r){e.dump=function(){if(0===t.length)return"''";if(!e.noCompatMode&&-1!==d.indexOf(t))return"'"+t+"'";var o=e.indent*Math.max(1,i),n=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-o),a=r||e.flowLevel>-1&&i>=e.flowLevel;switch(function(e,t,i,r,s){var o,n,a,p,c=!1,d=!1,u=-1!==r,l=-1,h=y(p=e.charCodeAt(0))&&65279!==p&&!f(p)&&45!==p&&63!==p&&58!==p&&44!==p&&91!==p&&93!==p&&123!==p&&125!==p&&35!==p&&38!==p&&42!==p&&33!==p&&124!==p&&61!==p&&62!==p&&39!==p&&34!==p&&37!==p&&64!==p&&96!==p&&!f(e.charCodeAt(e.length-1));if(t)for(o=0;o<e.length;o++){if(!y(n=e.charCodeAt(o)))return 5;a=o>0?e.charCodeAt(o-1):null,h=h&&g(n,a)}else{for(o=0;o<e.length;o++){if(10===(n=e.charCodeAt(o)))c=!0,u&&(d=d||o-l-1>r&&" "!==e[l+1],l=o);else if(!y(n))return 5;a=o>0?e.charCodeAt(o-1):null,h=h&&g(n,a)}d=d||u&&o-l-1>r&&" "!==e[l+1]}return c||d?i>9&&x(e)?5:d?4:3:h&&!s(e)?1:2}(t,a,e.indent,n,(function(t){return function(e,t){var i,r;for(i=0,r=e.implicitTypes.length;i<r;i+=1)if(e.implicitTypes[i].resolve(t))return!0;return!1}(e,t)}))){case 1:return t;case 2:return"'"+t.replace(/'/g,"''")+"'";case 3:return"|"+v(t,e.indent)+w(h(t,o));case 4:return">"+v(t,e.indent)+w(h(function(e,t){for(var i,r,s,o=/(\n+)([^\n]*)/g,n=(s=-1!==(s=e.indexOf("\n"))?s:e.length,o.lastIndex=s,I(e.slice(0,s),t)),a="\n"===e[0]||" "===e[0];r=o.exec(e);){var p=r[1],c=r[2];i=" "===c[0],n+=p+(a||i||""===c?"":"\n")+I(c,t),a=i}return n}(t,n),o));case 5:return'"'+function(e){for(var t,i,r,s="",o=0;o<e.length;o++)(t=e.charCodeAt(o))>=55296&&t<=56319&&(i=e.charCodeAt(o+1))>=56320&&i<=57343?(s+=u(1024*(t-55296)+i-56320+65536),o++):s+=!(r=c[t])&&y(t)?e[o]:r||u(t);return s}(t)+'"';default:throw new s("impossible error: invalid scalar style")}}()}function v(e,t){var i=x(e)?String(t):"",r="\n"===e[e.length-1];return i+(!r||"\n"!==e[e.length-2]&&"\n"!==e?r?"":"-":"+")+"\n"}function w(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function I(e,t){if(""===e||" "===e[0])return e;for(var i,r,s=/ [^ ]/g,o=0,n=0,a=0,p="";i=s.exec(e);)(a=i.index)-o>t&&(r=n>o?n:a,p+="\n"+e.slice(o,r),o=r+1),n=a;return p+="\n",e.length-o>t&&n>o?p+=e.slice(o,n)+"\n"+e.slice(n+1):p+=e.slice(o),p.slice(1)}function k(e,t,i){var r,o,n,c,d,u;for(n=0,c=(o=i?e.explicitTypes:e.implicitTypes).length;n<c;n+=1)if(((d=o[n]).instanceOf||d.predicate)&&(!d.instanceOf||"object"==typeof t&&t instanceof d.instanceOf)&&(!d.predicate||d.predicate(t))){if(e.tag=i?d.tag:"?",d.represent){if(u=e.styleMap[d.tag]||d.defaultStyle,"[object Function]"===a.call(d.represent))r=d.represent(t,u);else{if(!p.call(d.represent,u))throw new s("!<"+d.tag+'> tag resolver accepts not "'+u+'" style');r=d.represent[u](t,u)}e.dump=r}return!0}return!1}function P(e,t,i,r,o,n){e.tag=null,e.dump=i,k(e,i,!1)||k(e,i,!0);var p=a.call(e.dump);r&&(r=e.flowLevel<0||e.flowLevel>t);var c,d,u="[object Object]"===p||"[object Array]"===p;if(u&&(d=-1!==(c=e.duplicates.indexOf(i))),(null!==e.tag&&"?"!==e.tag||d||2!==e.indent&&t>0)&&(o=!1),d&&e.usedDuplicates[c])e.dump="*ref_"+c;else{if(u&&d&&!e.usedDuplicates[c]&&(e.usedDuplicates[c]=!0),"[object Object]"===p)r&&0!==Object.keys(e.dump).length?(function(e,t,i,r){var o,n,a,p,c,d,u="",l=e.tag,h=Object.keys(i);if(!0===e.sortKeys)h.sort();else if("function"==typeof e.sortKeys)h.sort(e.sortKeys);else if(e.sortKeys)throw new s("sortKeys must be a boolean or a function");for(o=0,n=h.length;o<n;o+=1)d="",r&&0===o||(d+=m(e,t)),p=i[a=h[o]],P(e,t+1,a,!0,!0,!0)&&((c=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?d+="?":d+="? "),d+=e.dump,c&&(d+=m(e,t)),P(e,t+1,p,!0,c)&&(e.dump&&10===e.dump.charCodeAt(0)?d+=":":d+=": ",u+=d+=e.dump));e.tag=l,e.dump=u||"{}"}(e,t,e.dump,o),d&&(e.dump="&ref_"+c+e.dump)):(function(e,t,i){var r,s,o,n,a,p="",c=e.tag,d=Object.keys(i);for(r=0,s=d.length;r<s;r+=1)a="",0!==r&&(a+=", "),e.condenseFlow&&(a+='"'),n=i[o=d[r]],P(e,t,o,!1,!1)&&(e.dump.length>1024&&(a+="? "),a+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),P(e,t,n,!1,!1)&&(p+=a+=e.dump));e.tag=c,e.dump="{"+p+"}"}(e,t,e.dump),d&&(e.dump="&ref_"+c+" "+e.dump));else if("[object Array]"===p){var l=e.noArrayIndent&&t>0?t-1:t;r&&0!==e.dump.length?(function(e,t,i,r){var s,o,n="",a=e.tag;for(s=0,o=i.length;s<o;s+=1)P(e,t+1,i[s],!0,!0)&&(r&&0===s||(n+=m(e,t)),e.dump&&10===e.dump.charCodeAt(0)?n+="-":n+="- ",n+=e.dump);e.tag=a,e.dump=n||"[]"}(e,l,e.dump,o),d&&(e.dump="&ref_"+c+e.dump)):(function(e,t,i){var r,s,o="",n=e.tag;for(r=0,s=i.length;r<s;r+=1)P(e,t,i[r],!1,!1)&&(0!==r&&(o+=","+(e.condenseFlow?"":" ")),o+=e.dump);e.tag=n,e.dump="["+o+"]"}(e,l,e.dump),d&&(e.dump="&ref_"+c+" "+e.dump))}else{if("[object String]"!==p){if(e.skipInvalid)return!1;throw new s("unacceptable kind of an object to dump "+p)}"?"!==e.tag&&b(e,e.dump,t,n)}null!==e.tag&&"?"!==e.tag&&(e.dump="!<"+e.tag+"> "+e.dump)}return!0}function j(e,t){var i,r,s=[],o=[];for(A(e,s,o),i=0,r=o.length;i<r;i+=1)t.duplicates.push(s[o[i]]);t.usedDuplicates=new Array(r)}function A(e,t,i){var r,s,o;if(null!==e&&"object"==typeof e)if(-1!==(s=t.indexOf(e)))-1===i.indexOf(s)&&i.push(s);else if(t.push(e),Array.isArray(e))for(s=0,o=e.length;s<o;s+=1)A(e[s],t,i);else for(s=0,o=(r=Object.keys(e)).length;s<o;s+=1)A(e[r[s]],t,i)}function O(e,t){var i=new l(t=t||{});return i.noRefs||j(e,i),P(i,0,e,!0,!0)?i.dump+"\n":""}e.exports.dump=O,e.exports.safeDump=function(e,t){return O(e,r.extend({schema:n},t))}},2508:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateV7State=void 0;const r=i(9942),s=i(3202),o={};function n(e,t,i){return e.msecs??=-1/0,e.seq??=0,t>e.msecs?(e.seq=i[6]<<23|i[7]<<16|i[8]<<8|i[9],e.msecs=t):(e.seq=e.seq+1|0,0===e.seq&&e.msecs++),e}function a(e,t,i,r,s=0){if(e.length<16)throw new Error("Random bytes length must be >= 16");if(r){if(s<0||s+16>r.length)throw new RangeError(`UUID byte range ${s}:${s+15} is out of buffer bounds`)}else r=new Uint8Array(16),s=0;return t??=Date.now(),i??=127*e[6]<<24|e[7]<<16|e[8]<<8|e[9],r[s++]=t/1099511627776&255,r[s++]=t/4294967296&255,r[s++]=t/16777216&255,r[s++]=t/65536&255,r[s++]=t/256&255,r[s++]=255&t,r[s++]=112|i>>>28&15,r[s++]=i>>>20&255,r[s++]=128|i>>>14&63,r[s++]=i>>>6&255,r[s++]=i<<2&255|3&e[10],r[s++]=e[11],r[s++]=e[12],r[s++]=e[13],r[s++]=e[14],r[s++]=e[15],r}t.updateV7State=n,t.default=function(e,t,i){let p;if(e)p=a(e.random??e.rng?.()??(0,r.default)(),e.msecs,e.seq,t,i);else{const e=Date.now(),s=(0,r.default)();n(o,e,s),p=a(s,o.msecs,o.seq,t,i)}return t??(0,s.unsafeStringify)(p)}},2518:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=["undefined","string","number","object","function","boolean","symbol"];function o(){return{keyword:"typeof",schemaType:["string","array"],code(e){const{data:t,schema:i,schemaValue:s}=e;e.fail("string"==typeof i?r._`typeof ${t} != ${i}`:r._`${s}.indexOf(typeof ${t}) < 0`)},metaSchema:{anyOf:[{type:"string",enum:s},{type:"array",items:{type:"string",enum:s}}]}}}t.default=o,e.exports=o},2524:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(8873);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");let t;return Uint8Array.of((t=parseInt(e.slice(0,8),16))>>>24,t>>>16&255,t>>>8&255,255&t,(t=parseInt(e.slice(9,13),16))>>>8,255&t,(t=parseInt(e.slice(14,18),16))>>>8,255&t,(t=parseInt(e.slice(19,23),16))>>>8,255&t,(t=parseInt(e.slice(24,36),16))/1099511627776&255,t/4294967296&255,t>>>24&255,t>>>16&255,t>>>8&255,255&t)}},2557:(e,t,i)=>{"use strict";var r=i(484),s=i(7902),o=i(1755);class n extends o.YAMLMap{constructor(e){super(e),this.tag=n.tag}add(e){let t;t=r.isPair(e)?e:e&&"object"==typeof e&&"key"in e&&"value"in e&&null===e.value?new s.Pair(e.key,null):new s.Pair(e,null),o.findPair(this.items,t.key)||this.items.push(t)}get(e,t){const i=o.findPair(this.items,e);return!t&&r.isPair(i)?r.isScalar(i.key)?i.key.value:i.key:i}set(e,t){if("boolean"!=typeof t)throw new Error("Expected boolean value for set(key, value) in a YAML set, not "+typeof t);const i=o.findPair(this.items,e);i&&!t?this.items.splice(this.items.indexOf(i),1):!i&&t&&this.items.push(new s.Pair(e))}toJSON(e,t){return super.toJSON(e,t,Set)}toString(e,t,i){if(!e)return JSON.stringify(this);if(this.hasAllNullValues(!0))return super.toString(Object.assign({},e,{allNullValues:!0}),t,i);throw new Error("Set items must all have null values")}static from(e,t,i){const{replacer:r}=i,o=new this(e);if(t&&Symbol.iterator in Object(t))for(let e of t)"function"==typeof r&&(e=r.call(t,e,e)),o.items.push(s.createPair(e,null,i));return o}}n.tag="tag:yaml.org,2002:set";const a={collection:"map",identify:e=>e instanceof Set,nodeClass:n,default:!1,tag:"tag:yaml.org,2002:set",createNode:(e,t,i)=>n.from(e,t,i),resolve(e,t){if(r.isMap(e)){if(e.hasAllNullValues(!0))return Object.assign(new n,e);t("Set items must all have null values")}else t("Expected a mapping for this tag");return e}};t.YAMLSet=n,t.set=a},2613:e=>{"use strict";e.exports=require("assert")},2648:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getData=t.KeywordCxt=t.validateFunctionCode=void 0;const r=i(1177),s=i(9526),o=i(2081),n=i(9526),a=i(6508),p=i(2843),c=i(8025),d=i(6675),u=i(3701),l=i(6193),h=i(749),m=i(5250);function f({gen:e,validateName:t,schema:i,schemaEnv:r,opts:s},o){s.code.es5?e.func(t,d._`${u.default.data}, ${u.default.valCxt}`,r.$async,(()=>{e.code(d._`"use strict"; ${y(i,s)}`),function(e,t){e.if(u.default.valCxt,(()=>{e.var(u.default.instancePath,d._`${u.default.valCxt}.${u.default.instancePath}`),e.var(u.default.parentData,d._`${u.default.valCxt}.${u.default.parentData}`),e.var(u.default.parentDataProperty,d._`${u.default.valCxt}.${u.default.parentDataProperty}`),e.var(u.default.rootData,d._`${u.default.valCxt}.${u.default.rootData}`),t.dynamicRef&&e.var(u.default.dynamicAnchors,d._`${u.default.valCxt}.${u.default.dynamicAnchors}`)}),(()=>{e.var(u.default.instancePath,d._`""`),e.var(u.default.parentData,d._`undefined`),e.var(u.default.parentDataProperty,d._`undefined`),e.var(u.default.rootData,u.default.data),t.dynamicRef&&e.var(u.default.dynamicAnchors,d._`{}`)}))}(e,s),e.code(o)})):e.func(t,d._`${u.default.data}, ${function(e){return d._`{${u.default.instancePath}="", ${u.default.parentData}, ${u.default.parentDataProperty}, ${u.default.rootData}=${u.default.data}${e.dynamicRef?d._`, ${u.default.dynamicAnchors}={}`:d.nil}}={}`}(s)}`,r.$async,(()=>e.code(y(i,s)).code(o)))}function y(e,t){const i="object"==typeof e&&e[t.schemaId];return i&&(t.code.source||t.code.process)?d._`/*# sourceURL=${i} */`:d.nil}function g({schema:e,self:t}){if("boolean"==typeof e)return!e;for(const i in e)if(t.RULES.all[i])return!0;return!1}function x(e){return"boolean"!=typeof e.schema}function b(e){(0,h.checkUnknownRules)(e),function(e){const{schema:t,errSchemaPath:i,opts:r,self:s}=e;t.$ref&&r.ignoreKeywordsWithRef&&(0,h.schemaHasRulesButRef)(t,s.RULES)&&s.logger.warn(`$ref: keywords ignored in schema at path "${i}"`)}(e)}function v(e,t){if(e.opts.jtd)return I(e,[],!1,t);const i=(0,s.getSchemaTypes)(e.schema);I(e,i,!(0,s.coerceAndCheckDataType)(e,i),t)}function w({gen:e,schemaEnv:t,schema:i,errSchemaPath:r,opts:s}){const o=i.$comment;if(!0===s.$comment)e.code(d._`${u.default.self}.logger.log(${o})`);else if("function"==typeof s.$comment){const i=d.str`${r}/$comment`,s=e.scopeValue("root",{ref:t.root});e.code(d._`${u.default.self}.opts.$comment(${o}, ${i}, ${s}.schema)`)}}function I(e,t,i,r){const{gen:s,schema:a,data:p,allErrors:c,opts:l,self:m}=e,{RULES:f}=m;function y(h){(0,o.shouldUseGroup)(a,h)&&(h.type?(s.if((0,n.checkDataType)(h.type,p,l.strictNumbers)),k(e,h),1===t.length&&t[0]===h.type&&i&&(s.else(),(0,n.reportTypeError)(e)),s.endIf()):k(e,h),c||s.if(d._`${u.default.errors} === ${r||0}`))}!a.$ref||!l.ignoreKeywordsWithRef&&(0,h.schemaHasRulesButRef)(a,f)?(l.jtd||function(e,t){!e.schemaEnv.meta&&e.opts.strictTypes&&(function(e,t){t.length&&(e.dataTypes.length?(t.forEach((t=>{P(e.dataTypes,t)||j(e,`type "${t}" not allowed by context "${e.dataTypes.join(",")}"`)})),function(e,t){const i=[];for(const r of e.dataTypes)P(t,r)?i.push(r):t.includes("integer")&&"number"===r&&i.push("integer");e.dataTypes=i}(e,t)):e.dataTypes=t)}(e,t),e.opts.allowUnionTypes||function(e,t){t.length>1&&(2!==t.length||!t.includes("null"))&&j(e,"use allowUnionTypes to allow union type keyword")}(e,t),function(e,t){const i=e.self.RULES.all;for(const r in i){const s=i[r];if("object"==typeof s&&(0,o.shouldUseRule)(e.schema,s)){const{type:i}=s.definition;i.length&&!i.some((e=>{return r=e,(i=t).includes(r)||"number"===r&&i.includes("integer");var i,r}))&&j(e,`missing type "${i.join(",")}" for keyword "${r}"`)}}}(e,e.dataTypes))}(e,t),s.block((()=>{for(const e of f.rules)y(e);y(f.post)}))):s.block((()=>O(e,"$ref",f.all.$ref.definition)))}function k(e,t){const{gen:i,schema:r,opts:{useDefaults:s}}=e;s&&(0,a.assignDefaults)(e,t.type),i.block((()=>{for(const i of t.rules)(0,o.shouldUseRule)(r,i)&&O(e,i.keyword,i.definition,t.type)}))}function P(e,t){return e.includes(t)||"integer"===t&&e.includes("number")}function j(e,t){t+=` at "${e.schemaEnv.baseId+e.errSchemaPath}" (strictTypes)`,(0,h.checkStrictMode)(e,t,e.opts.strictTypes)}t.validateFunctionCode=function(e){x(e)&&(b(e),g(e))?function(e){const{schema:t,opts:i,gen:r}=e;f(e,(()=>{i.$comment&&t.$comment&&w(e),function(e){const{schema:t,opts:i}=e;void 0!==t.default&&i.useDefaults&&i.strictSchema&&(0,h.checkStrictMode)(e,"default is ignored in the schema root")}(e),r.let(u.default.vErrors,null),r.let(u.default.errors,0),i.unevaluated&&function(e){const{gen:t,validateName:i}=e;e.evaluated=t.const("evaluated",d._`${i}.evaluated`),t.if(d._`${e.evaluated}.dynamicProps`,(()=>t.assign(d._`${e.evaluated}.props`,d._`undefined`))),t.if(d._`${e.evaluated}.dynamicItems`,(()=>t.assign(d._`${e.evaluated}.items`,d._`undefined`)))}(e),v(e),function(e){const{gen:t,schemaEnv:i,validateName:r,ValidationError:s,opts:o}=e;i.$async?t.if(d._`${u.default.errors} === 0`,(()=>t.return(u.default.data)),(()=>t.throw(d._`new ${s}(${u.default.vErrors})`))):(t.assign(d._`${r}.errors`,u.default.vErrors),o.unevaluated&&function({gen:e,evaluated:t,props:i,items:r}){i instanceof d.Name&&e.assign(d._`${t}.props`,i),r instanceof d.Name&&e.assign(d._`${t}.items`,r)}(e),t.return(d._`${u.default.errors} === 0`))}(e)}))}(e):f(e,(()=>(0,r.topBoolOrEmptySchema)(e)))};class A{constructor(e,t,i){if((0,p.validateKeywordUsage)(e,t,i),this.gen=e.gen,this.allErrors=e.allErrors,this.keyword=i,this.data=e.data,this.schema=e.schema[i],this.$data=t.$data&&e.opts.$data&&this.schema&&this.schema.$data,this.schemaValue=(0,h.schemaRefOrVal)(e,this.schema,i,this.$data),this.schemaType=t.schemaType,this.parentSchema=e.schema,this.params={},this.it=e,this.def=t,this.$data)this.schemaCode=e.gen.const("vSchema",D(this.$data,e));else if(this.schemaCode=this.schemaValue,!(0,p.validSchemaType)(this.schema,t.schemaType,t.allowUndefined))throw new Error(`${i} value must be ${JSON.stringify(t.schemaType)}`);("code"in t?t.trackErrors:!1!==t.errors)&&(this.errsCount=e.gen.const("_errs",u.default.errors))}result(e,t,i){this.failResult((0,d.not)(e),t,i)}failResult(e,t,i){this.gen.if(e),i?i():this.error(),t?(this.gen.else(),t(),this.allErrors&&this.gen.endIf()):this.allErrors?this.gen.endIf():this.gen.else()}pass(e,t){this.failResult((0,d.not)(e),void 0,t)}fail(e){if(void 0===e)return this.error(),void(this.allErrors||this.gen.if(!1));this.gen.if(e),this.error(),this.allErrors?this.gen.endIf():this.gen.else()}fail$data(e){if(!this.$data)return this.fail(e);const{schemaCode:t}=this;this.fail(d._`${t} !== undefined && (${(0,d.or)(this.invalid$data(),e)})`)}error(e,t,i){if(t)return this.setParams(t),this._error(e,i),void this.setParams({});this._error(e,i)}_error(e,t){(e?m.reportExtraError:m.reportError)(this,this.def.error,t)}$dataError(){(0,m.reportError)(this,this.def.$dataError||m.keyword$DataError)}reset(){if(void 0===this.errsCount)throw new Error('add "trackErrors" to keyword definition');(0,m.resetErrorsCount)(this.gen,this.errsCount)}ok(e){this.allErrors||this.gen.if(e)}setParams(e,t){t?Object.assign(this.params,e):this.params=e}block$data(e,t,i=d.nil){this.gen.block((()=>{this.check$data(e,i),t()}))}check$data(e=d.nil,t=d.nil){if(!this.$data)return;const{gen:i,schemaCode:r,schemaType:s,def:o}=this;i.if((0,d.or)(d._`${r} === undefined`,t)),e!==d.nil&&i.assign(e,!0),(s.length||o.validateSchema)&&(i.elseIf(this.invalid$data()),this.$dataError(),e!==d.nil&&i.assign(e,!1)),i.else()}invalid$data(){const{gen:e,schemaCode:t,schemaType:i,def:r,it:s}=this;return(0,d.or)(function(){if(i.length){if(!(t instanceof d.Name))throw new Error("ajv implementation error");const e=Array.isArray(i)?i:[i];return d._`${(0,n.checkDataTypes)(e,t,s.opts.strictNumbers,n.DataType.Wrong)}`}return d.nil}(),function(){if(r.validateSchema){const i=e.scopeValue("validate$data",{ref:r.validateSchema});return d._`!${i}(${t})`}return d.nil}())}subschema(e,t){const i=(0,c.getSubschema)(this.it,e);(0,c.extendSubschemaData)(i,this.it,e),(0,c.extendSubschemaMode)(i,e);const s={...this.it,...i,items:void 0,props:void 0};return function(e,t){x(e)&&(b(e),g(e))?function(e,t){const{schema:i,gen:r,opts:s}=e;s.$comment&&i.$comment&&w(e),function(e){const t=e.schema[e.opts.schemaId];t&&(e.baseId=(0,l.resolveUrl)(e.opts.uriResolver,e.baseId,t))}(e),function(e){if(e.schema.$async&&!e.schemaEnv.$async)throw new Error("async schema in sync schema")}(e);const o=r.const("_errs",u.default.errors);v(e,o),r.var(t,d._`${o} === ${u.default.errors}`)}(e,t):(0,r.boolOrEmptySchema)(e,t)}(s,t),s}mergeEvaluated(e,t){const{it:i,gen:r}=this;i.opts.unevaluated&&(!0!==i.props&&void 0!==e.props&&(i.props=h.mergeEvaluated.props(r,e.props,i.props,t)),!0!==i.items&&void 0!==e.items&&(i.items=h.mergeEvaluated.items(r,e.items,i.items,t)))}mergeValidEvaluated(e,t){const{it:i,gen:r}=this;if(i.opts.unevaluated&&(!0!==i.props||!0!==i.items))return r.if(t,(()=>this.mergeEvaluated(e,d.Name))),!0}}function O(e,t,i,r){const s=new A(e,i,t);"code"in i?i.code(s,r):s.$data&&i.validate?(0,p.funcKeywordCode)(s,i):"macro"in i?(0,p.macroKeywordCode)(s,i):(i.compile||i.validate)&&(0,p.funcKeywordCode)(s,i)}t.KeywordCxt=A;const E=/^\/(?:[^~]|~0|~1)*$/,S=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function D(e,{dataLevel:t,dataNames:i,dataPathArr:r}){let s,o;if(""===e)return u.default.rootData;if("/"===e[0]){if(!E.test(e))throw new Error(`Invalid JSON-pointer: ${e}`);s=e,o=u.default.rootData}else{const n=S.exec(e);if(!n)throw new Error(`Invalid JSON-pointer: ${e}`);const a=+n[1];if(s=n[2],"#"===s){if(a>=t)throw new Error(p("property/index",a));return r[t-a]}if(a>t)throw new Error(p("data",a));if(o=i[t-a],!s)return o}let n=o;const a=s.split("/");for(const e of a)e&&(o=d._`${o}${(0,d.getProperty)((0,h.unescapeJsonPointer)(e))}`,n=d._`${n} && ${o}`);return n;function p(e,i){return`Cannot access ${e} ${i} levels up, current level is ${t}`}}t.getData=D},2654:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.usePattern=t.metaSchemaRef=void 0;const r=i(6675);t.metaSchemaRef=function({defaultMeta:e}={}){return!1===e?{}:{$ref:e||"http://json-schema.org/schema"}},t.usePattern=function({gen:e,it:{opts:t}},i,s=(t.unicodeRegExp?"u":"")){const o=new RegExp(i,s);return e.scopeValue("pattern",{key:o.toString(),ref:o,code:r._`new RegExp(${i}, ${s})`})}},2782:(e,t,i)=>{"use strict";var r=i(1736),s=i(484),o=i(18),n=i(9094),a=i(6845),p=i(1040);const c={composeNode:d,composeEmptyNode:u};function d(e,t,i,p){const d=e.atKey,{spaceBefore:l,comment:h,anchor:m,tag:f}=i;let y,g=!0;switch(t.type){case"alias":y=function({options:e},{offset:t,source:i,end:s},o){const n=new r.Alias(i.substring(1));""===n.source&&o(t,"BAD_ALIAS","Alias cannot be an empty string"),n.source.endsWith(":")&&o(t+i.length-1,"BAD_ALIAS","Alias ending in : is ambiguous",!0);const p=t+i.length,c=a.resolveEnd(s,p,e.strict,o);return n.range=[t,p,c.offset],c.comment&&(n.comment=c.comment),n}(e,t,p),(m||f)&&p(t,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":y=n.composeScalar(e,t,f,p),m&&(y.anchor=m.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":y=o.composeCollection(c,e,t,i,p),m&&(y.anchor=m.source.substring(1));break;default:p(t,"UNEXPECTED_TOKEN","error"===t.type?t.message:`Unsupported token (type: ${t.type})`),y=u(e,t.offset,void 0,null,i,p),g=!1}return m&&""===y.anchor&&p(m,"BAD_ALIAS","Anchor cannot be an empty string"),d&&e.options.stringKeys&&(!s.isScalar(y)||"string"!=typeof y.value||y.tag&&"tag:yaml.org,2002:str"!==y.tag)&&p(f??t,"NON_STRING_KEY","With stringKeys, all keys must be strings"),l&&(y.spaceBefore=!0),h&&("scalar"===t.type&&""===t.source?y.comment=h:y.commentBefore=h),e.options.keepSourceTokens&&g&&(y.srcToken=t),y}function u(e,t,i,r,{spaceBefore:s,comment:o,anchor:a,tag:c,end:d},u){const l={type:"scalar",offset:p.emptyScalarPosition(t,i,r),indent:-1,source:""},h=n.composeScalar(e,l,c,u);return a&&(h.anchor=a.source.substring(1),""===h.anchor&&u(a,"BAD_ALIAS","Anchor cannot be an empty string")),s&&(h.spaceBefore=!0),o&&(h.comment=o,h.range[2]=d),h}t.composeEmptyNode=u,t.composeNode=d},2843:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateKeywordUsage=t.validSchemaType=t.funcKeywordCode=t.macroKeywordCode=void 0;const r=i(6675),s=i(3701),o=i(2883),n=i(5250);function a(e){const{gen:t,data:i,it:s}=e;t.if(s.parentData,(()=>t.assign(i,r._`${s.parentData}[${s.parentDataProperty}]`)))}function p(e,t,i){if(void 0===i)throw new Error(`keyword "${t}" failed to compile`);return e.scopeValue("keyword","function"==typeof i?{ref:i}:{ref:i,code:(0,r.stringify)(i)})}t.macroKeywordCode=function(e,t){const{gen:i,keyword:s,schema:o,parentSchema:n,it:a}=e,c=t.macro.call(a.self,o,n,a),d=p(i,s,c);!1!==a.opts.validateSchema&&a.self.validateSchema(c,!0);const u=i.name("valid");e.subschema({schema:c,schemaPath:r.nil,errSchemaPath:`${a.errSchemaPath}/${s}`,topSchemaRef:d,compositeRule:!0},u),e.pass(u,(()=>e.error(!0)))},t.funcKeywordCode=function(e,t){var i;const{gen:c,keyword:d,schema:u,parentSchema:l,$data:h,it:m}=e;!function({schemaEnv:e},t){if(t.async&&!e.$async)throw new Error("async keyword in sync schema")}(m,t);const f=!h&&t.compile?t.compile.call(m.self,u,l,m):t.validate,y=p(c,d,f),g=c.let("valid");function x(i=(t.async?r._`await `:r.nil)){const n=m.opts.passContext?s.default.this:s.default.self,a=!("compile"in t&&!h||!1===t.schema);c.assign(g,r._`${i}${(0,o.callValidateCode)(e,y,n,a)}`,t.modifying)}function b(e){var i;c.if((0,r.not)(null!==(i=t.valid)&&void 0!==i?i:g),e)}e.block$data(g,(function(){if(!1===t.errors)x(),t.modifying&&a(e),b((()=>e.error()));else{const i=t.async?function(){const e=c.let("ruleErrs",null);return c.try((()=>x(r._`await `)),(t=>c.assign(g,!1).if(r._`${t} instanceof ${m.ValidationError}`,(()=>c.assign(e,r._`${t}.errors`)),(()=>c.throw(t))))),e}():function(){const e=r._`${y}.errors`;return c.assign(e,null),x(r.nil),e}();t.modifying&&a(e),b((()=>function(e,t){const{gen:i}=e;i.if(r._`Array.isArray(${t})`,(()=>{i.assign(s.default.vErrors,r._`${s.default.vErrors} === null ? ${t} : ${s.default.vErrors}.concat(${t})`).assign(s.default.errors,r._`${s.default.vErrors}.length`),(0,n.extendErrors)(e)}),(()=>e.error()))}(e,i)))}})),e.ok(null!==(i=t.valid)&&void 0!==i?i:g)},t.validSchemaType=function(e,t,i=!1){return!t.length||t.some((t=>"array"===t?Array.isArray(e):"object"===t?e&&"object"==typeof e&&!Array.isArray(e):typeof e==t||i&&void 0===e))},t.validateKeywordUsage=function({schema:e,opts:t,self:i,errSchemaPath:r},s,o){if(Array.isArray(s.keyword)?!s.keyword.includes(o):s.keyword!==o)throw new Error("ajv implementation error");const n=s.dependencies;if(null==n?void 0:n.some((t=>!Object.prototype.hasOwnProperty.call(e,t))))throw new Error(`parent schema must have dependencies of ${o}: ${n.join(",")}`);if(s.validateSchema&&!s.validateSchema(e[o])){const e=`keyword "${o}" value is invalid at path "${r}": `+i.errorsText(s.validateSchema.errors);if("log"!==t.validateSchema)throw new Error(e);i.logger.error(e)}}},2852:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(948)),o=(e,t)=>e.addKeyword((0,s.default)(t));t.default=o,e.exports=o},2864:(e,t)=>{"use strict";t.LineCounter=class{constructor(){this.lineStarts=[],this.addNewLine=e=>this.lineStarts.push(e),this.linePos=e=>{let t=0,i=this.lineStarts.length;for(;t<i;){const r=t+i>>1;this.lineStarts[r]<e?t=r+1:i=r}return this.lineStarts[t]===e?{line:t+1,col:1}:0===t?{line:0,col:e}:{line:t,col:e-this.lineStarts[t-1]+1}}}}},2883:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateUnion=t.validateArray=t.usePattern=t.callValidateCode=t.schemaProperties=t.allSchemaProperties=t.noPropertyInData=t.propertyInData=t.isOwnProperty=t.hasPropFunc=t.reportMissingProp=t.checkMissingProp=t.checkReportMissingProp=void 0;const r=i(6675),s=i(749),o=i(3701),n=i(749);function a(e){return e.scopeValue("func",{ref:Object.prototype.hasOwnProperty,code:r._`Object.prototype.hasOwnProperty`})}function p(e,t,i){return r._`${a(e)}.call(${t}, ${i})`}function c(e,t,i,s){const o=r._`${t}${(0,r.getProperty)(i)} === undefined`;return s?(0,r.or)(o,(0,r.not)(p(e,t,i))):o}function d(e){return e?Object.keys(e).filter((e=>"__proto__"!==e)):[]}t.checkReportMissingProp=function(e,t){const{gen:i,data:s,it:o}=e;i.if(c(i,s,t,o.opts.ownProperties),(()=>{e.setParams({missingProperty:r._`${t}`},!0),e.error()}))},t.checkMissingProp=function({gen:e,data:t,it:{opts:i}},s,o){return(0,r.or)(...s.map((s=>(0,r.and)(c(e,t,s,i.ownProperties),r._`${o} = ${s}`))))},t.reportMissingProp=function(e,t){e.setParams({missingProperty:t},!0),e.error()},t.hasPropFunc=a,t.isOwnProperty=p,t.propertyInData=function(e,t,i,s){const o=r._`${t}${(0,r.getProperty)(i)} !== undefined`;return s?r._`${o} && ${p(e,t,i)}`:o},t.noPropertyInData=c,t.allSchemaProperties=d,t.schemaProperties=function(e,t){return d(t).filter((i=>!(0,s.alwaysValidSchema)(e,t[i])))},t.callValidateCode=function({schemaCode:e,data:t,it:{gen:i,topSchemaRef:s,schemaPath:n,errorPath:a},it:p},c,d,u){const l=u?r._`${e}, ${t}, ${s}${n}`:t,h=[[o.default.instancePath,(0,r.strConcat)(o.default.instancePath,a)],[o.default.parentData,p.parentData],[o.default.parentDataProperty,p.parentDataProperty],[o.default.rootData,o.default.rootData]];p.opts.dynamicRef&&h.push([o.default.dynamicAnchors,o.default.dynamicAnchors]);const m=r._`${l}, ${i.object(...h)}`;return d!==r.nil?r._`${c}.call(${d}, ${m})`:r._`${c}(${m})`};const u=r._`new RegExp`;t.usePattern=function({gen:e,it:{opts:t}},i){const s=t.unicodeRegExp?"u":"",{regExp:o}=t.code,a=o(i,s);return e.scopeValue("pattern",{key:a.toString(),ref:a,code:r._`${"new RegExp"===o.code?u:(0,n.useFunc)(e,o)}(${i}, ${s})`})},t.validateArray=function(e){const{gen:t,data:i,keyword:o,it:n}=e,a=t.name("valid");if(n.allErrors){const e=t.let("valid",!0);return p((()=>t.assign(e,!1))),e}return t.var(a,!0),p((()=>t.break())),a;function p(n){const p=t.const("len",r._`${i}.length`);t.forRange("i",0,p,(i=>{e.subschema({keyword:o,dataProp:i,dataPropType:s.Type.Num},a),t.if((0,r.not)(a),n)}))}},t.validateUnion=function(e){const{gen:t,schema:i,keyword:o,it:n}=e;if(!Array.isArray(i))throw new Error("ajv implementation error");if(i.some((e=>(0,s.alwaysValidSchema)(n,e)))&&!n.opts.unevaluated)return;const a=t.let("valid",!1),p=t.name("_valid");t.block((()=>i.forEach(((i,s)=>{const n=e.subschema({keyword:o,schemaProp:s,compositeRule:!0},p);t.assign(a,r._`${a} || ${p}`),e.mergeValidEvaluated(n,p)||t.if((0,r.not)(a))})))),e.result(a,(()=>e.reset()),(()=>e.error(!0)))}},2891:(e,t,i)=>{"use strict";var r=i(3144);const s=e=>"bigint"==typeof e||Number.isInteger(e),o=(e,t,i,{intAsBigInt:r})=>r?BigInt(e):parseInt(e.substring(t),i);function n(e,t,i){const{value:o}=e;return s(o)&&o>=0?i+o.toString(t):r.stringifyNumber(e)}const a={identify:e=>s(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(e,t,i)=>o(e,2,8,i),stringify:e=>n(e,8,"0o")},p={identify:s,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(e,t,i)=>o(e,0,10,i),stringify:r.stringifyNumber},c={identify:e=>s(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(e,t,i)=>o(e,2,16,i),stringify:e=>n(e,16,"0x")};t.int=p,t.intHex=c,t.intOct=a},2958:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.regexpCode=t.getEsmExportName=t.getProperty=t.safeStringify=t.stringify=t.strConcat=t.addCodeArg=t.str=t._=t.nil=t._Code=t.Name=t.IDENTIFIER=t._CodeOrName=void 0;class i{}t._CodeOrName=i,t.IDENTIFIER=/^[a-z$_][a-z$_0-9]*$/i;class r extends i{constructor(e){if(super(),!t.IDENTIFIER.test(e))throw new Error("CodeGen: name must be a valid identifier");this.str=e}toString(){return this.str}emptyStr(){return!1}get names(){return{[this.str]:1}}}t.Name=r;class s extends i{constructor(e){super(),this._items="string"==typeof e?[e]:e}toString(){return this.str}emptyStr(){if(this._items.length>1)return!1;const e=this._items[0];return""===e||'""'===e}get str(){var e;return null!==(e=this._str)&&void 0!==e?e:this._str=this._items.reduce(((e,t)=>`${e}${t}`),"")}get names(){var e;return null!==(e=this._names)&&void 0!==e?e:this._names=this._items.reduce(((e,t)=>(t instanceof r&&(e[t.str]=(e[t.str]||0)+1),e)),{})}}function o(e,...t){const i=[e[0]];let r=0;for(;r<t.length;)p(i,t[r]),i.push(e[++r]);return new s(i)}t._Code=s,t.nil=new s(""),t._=o;const n=new s("+");function a(e,...t){const i=[d(e[0])];let r=0;for(;r<t.length;)i.push(n),p(i,t[r]),i.push(n,d(e[++r]));return function(e){let t=1;for(;t<e.length-1;){if(e[t]===n){const i=c(e[t-1],e[t+1]);if(void 0!==i){e.splice(t-1,3,i);continue}e[t++]="+"}t++}}(i),new s(i)}function p(e,t){var i;t instanceof s?e.push(...t._items):t instanceof r?e.push(t):e.push("number"==typeof(i=t)||"boolean"==typeof i||null===i?i:d(Array.isArray(i)?i.join(","):i))}function c(e,t){if('""'===t)return e;if('""'===e)return t;if("string"==typeof e){if(t instanceof r||'"'!==e[e.length-1])return;return"string"!=typeof t?`${e.slice(0,-1)}${t}"`:'"'===t[0]?e.slice(0,-1)+t.slice(1):void 0}return"string"!=typeof t||'"'!==t[0]||e instanceof r?void 0:`"${e}${t.slice(1)}`}function d(e){return JSON.stringify(e).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}t.str=a,t.addCodeArg=p,t.strConcat=function(e,t){return t.emptyStr()?e:e.emptyStr()?t:a`${e}${t}`},t.stringify=function(e){return new s(d(e))},t.safeStringify=d,t.getProperty=function(e){return"string"==typeof e&&t.IDENTIFIER.test(e)?new s(`.${e}`):o`[${e}]`},t.getEsmExportName=function(e){if("string"==typeof e&&t.IDENTIFIER.test(e))return new s(`${e}`);throw new Error(`CodeGen: invalid export name: ${e}, use explicit $id name mapping`)},t.regexpCode=function(e){return new s(e.toString())}},2972:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(4332)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},3090:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRules=t.isJSONType=void 0;const i=new Set(["string","number","integer","boolean","null","object","array"]);t.isJSONType=function(e){return"string"==typeof e&&i.has(e)},t.getRules=function(){const e={number:{type:"number",rules:[]},string:{type:"string",rules:[]},array:{type:"array",rules:[]},object:{type:"object",rules:[]}};return{types:{...e,integer:!0,boolean:!0,null:!0},rules:[{rules:[]},e.number,e.string,e.array,e.object],post:{rules:[]},all:{},keywords:{}}}},3093:(e,t,i)=>{"use strict";var r=i(4459);e.exports=function(e){return r(e)||0===e?e:e<0?-1:1}},3106:e=>{"use strict";e.exports=require("zlib")},3124:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const a=i(7184),p=n(i(6385)),c=i(2270);async function d(e,t,i){e=p.parse(e);const r=i||[];r.push(e.href);try{const i=await async function(e,t){let i,r;t.timeout&&(i=new AbortController,r=setTimeout((()=>i.abort()),t.timeout));const s=await fetch(e,{method:"GET",headers:t.headers||{},credentials:t.withCredentials?"include":"same-origin",signal:i?i.signal:null});return r&&clearTimeout(r),s}(e,t);if(i.status>=400)throw(0,a.ono)({status:i.status},`HTTP ERROR ${i.status}`);if(i.status>=300){if(!Number.isNaN(t.redirects)&&r.length>t.redirects)throw new c.ResolverError((0,a.ono)({status:i.status},`Error downloading ${r[0]}. \nToo many redirects: \n  ${r.join(" \n  ")}`));if("location"in i.headers&&i.headers.location)return d(p.resolve(e.href,i.headers.location),t,r);throw(0,a.ono)({status:i.status},`HTTP ${i.status} redirect with no location header`)}if(i.body){const e=await i.arrayBuffer();return Buffer.from(e)}return Buffer.alloc(0)}catch(t){throw new c.ResolverError((0,a.ono)(t,`Error downloading ${e.href}`),e.href)}}t.default={order:200,headers:null,timeout:6e4,redirects:5,withCredentials:!1,canRead:e=>p.isHttp(e.url),read(e){const t=p.parse(e.url);return"undefined"==typeof window||t.protocol||(t.protocol=p.parse(location.href).protocol),d(t,this)}}},3126:(e,t,i)=>{"use strict";var r=i(6743),s=i(9675),o=i(76),n=i(7115);e.exports=function(e){if(e.length<1||"function"!=typeof e[0])throw new s("a function is required");return n(r,o,e)}},3144:(e,t)=>{"use strict";t.stringifyNumber=function({format:e,minFractionDigits:t,tag:i,value:r}){if("bigint"==typeof r)return String(r);const s="number"==typeof r?r:Number(r);if(!isFinite(s))return isNaN(s)?".nan":s<0?"-.inf":".inf";let o=JSON.stringify(r);if(!e&&t&&(!i||"tag:yaml.org,2002:float"===i)&&/^\d/.test(o)){let e=o.indexOf(".");e<0&&(e=o.length,o+=".");let i=t-(o.length-e-1);for(;i-- >0;)o+="0"}return o}},3160:(e,t,i)=>{"use strict";var r=i(4393);e.exports=function(e){var t,i,s,o;return"function"==typeof(e=Array.prototype.slice.call(e))[e.length-1]&&(o=e.pop()),"string"==typeof e[0]?(t=e[0],"object"==typeof e[2]?(i=e[1],s=e[2]):(i=void 0,s=e[1])):(t="",i=e[0],s=e[1]),s instanceof r||(s=new r(s)),{path:t,schema:i,options:s,callback:o}}},3164:(e,t,i)=>{var r,s,o,n=i(7016),a=n.URL,p=i(8611),c=i(5692),d=i(2203).Writable,u=i(2613),l=i(7507);r="undefined"!=typeof process,s="undefined"!=typeof window&&"undefined"!=typeof document,o=C(Error.captureStackTrace),r||!s&&o||console.warn("The follow-redirects package should be excluded from browser builds.");var h=!1;try{u(new a(""))}catch(e){h="ERR_INVALID_URL"===e.code}var m=["auth","host","hostname","href","path","pathname","port","protocol","query","search","hash"],f=["abort","aborted","connect","error","socket","timeout"],y=Object.create(null);f.forEach((function(e){y[e]=function(t,i,r){this._redirectable.emit(e,t,i,r)}}));var g=D("ERR_INVALID_URL","Invalid URL",TypeError),x=D("ERR_FR_REDIRECTION_FAILURE","Redirected request failed"),b=D("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded",x),v=D("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit"),w=D("ERR_STREAM_WRITE_AFTER_END","write after end"),I=d.prototype.destroy||j;function k(e,t){d.call(this),this._sanitizeOptions(e),this._options=e,this._ended=!1,this._ending=!1,this._redirectCount=0,this._redirects=[],this._requestBodyLength=0,this._requestBodyBuffers=[],t&&this.on("response",t);var i=this;this._onNativeResponse=function(e){try{i._processResponse(e)}catch(e){i.emit("error",e instanceof x?e:new x({cause:e}))}},this._performRequest()}function P(e){var t={maxRedirects:21,maxBodyLength:10485760},i={};return Object.keys(e).forEach((function(r){var s=r+":",o=i[s]=e[r],n=t[r]=Object.create(o);Object.defineProperties(n,{request:{value:function(e,r,o){return function(e){return a&&e instanceof a}(e)?e=E(e):q(e)?e=E(A(e)):(o=r,r=O(e),e={protocol:s}),C(r)&&(o=r,r=null),(r=Object.assign({maxRedirects:t.maxRedirects,maxBodyLength:t.maxBodyLength},e,r)).nativeProtocols=i,q(r.host)||q(r.hostname)||(r.hostname="::1"),u.equal(r.protocol,s,"protocol mismatch"),l("options",r),new k(r,o)},configurable:!0,enumerable:!0,writable:!0},get:{value:function(e,t,i){var r=n.request(e,t,i);return r.end(),r},configurable:!0,enumerable:!0,writable:!0}})})),t}function j(){}function A(e){var t;if(h)t=new a(e);else if(!q((t=O(n.parse(e))).protocol))throw new g({input:e});return t}function O(e){if(/^\[/.test(e.hostname)&&!/^\[[:0-9a-f]+\]$/i.test(e.hostname))throw new g({input:e.href||e});if(/^\[/.test(e.host)&&!/^\[[:0-9a-f]+\](:\d+)?$/i.test(e.host))throw new g({input:e.href||e});return e}function E(e,t){var i=t||{};for(var r of m)i[r]=e[r];return i.hostname.startsWith("[")&&(i.hostname=i.hostname.slice(1,-1)),""!==i.port&&(i.port=Number(i.port)),i.path=i.search?i.pathname+i.search:i.pathname,i}function S(e,t){var i;for(var r in t)e.test(r)&&(i=t[r],delete t[r]);return null==i?void 0:String(i).trim()}function D(e,t,i){function r(i){C(Error.captureStackTrace)&&Error.captureStackTrace(this,this.constructor),Object.assign(this,i||{}),this.code=e,this.message=this.cause?t+": "+this.cause.message:t}return r.prototype=new(i||Error),Object.defineProperties(r.prototype,{constructor:{value:r,enumerable:!1},name:{value:"Error ["+e+"]",enumerable:!1}}),r}function T(e,t){for(var i of f)e.removeListener(i,y[i]);e.on("error",j),e.destroy(t)}function q(e){return"string"==typeof e||e instanceof String}function C(e){return"function"==typeof e}k.prototype=Object.create(d.prototype),k.prototype.abort=function(){T(this._currentRequest),this._currentRequest.abort(),this.emit("abort")},k.prototype.destroy=function(e){return T(this._currentRequest,e),I.call(this,e),this},k.prototype.write=function(e,t,i){if(this._ending)throw new w;if(!q(e)&&!function(e){return"object"==typeof e&&"length"in e}(e))throw new TypeError("data should be a string, Buffer or Uint8Array");C(t)&&(i=t,t=null),0!==e.length?this._requestBodyLength+e.length<=this._options.maxBodyLength?(this._requestBodyLength+=e.length,this._requestBodyBuffers.push({data:e,encoding:t}),this._currentRequest.write(e,t,i)):(this.emit("error",new v),this.abort()):i&&i()},k.prototype.end=function(e,t,i){if(C(e)?(i=e,e=t=null):C(t)&&(i=t,t=null),e){var r=this,s=this._currentRequest;this.write(e,t,(function(){r._ended=!0,s.end(null,null,i)})),this._ending=!0}else this._ended=this._ending=!0,this._currentRequest.end(null,null,i)},k.prototype.setHeader=function(e,t){this._options.headers[e]=t,this._currentRequest.setHeader(e,t)},k.prototype.removeHeader=function(e){delete this._options.headers[e],this._currentRequest.removeHeader(e)},k.prototype.setTimeout=function(e,t){var i=this;function r(t){t.setTimeout(e),t.removeListener("timeout",t.destroy),t.addListener("timeout",t.destroy)}function s(t){i._timeout&&clearTimeout(i._timeout),i._timeout=setTimeout((function(){i.emit("timeout"),o()}),e),r(t)}function o(){i._timeout&&(clearTimeout(i._timeout),i._timeout=null),i.removeListener("abort",o),i.removeListener("error",o),i.removeListener("response",o),i.removeListener("close",o),t&&i.removeListener("timeout",t),i.socket||i._currentRequest.removeListener("socket",s)}return t&&this.on("timeout",t),this.socket?s(this.socket):this._currentRequest.once("socket",s),this.on("socket",r),this.on("abort",o),this.on("error",o),this.on("response",o),this.on("close",o),this},["flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach((function(e){k.prototype[e]=function(t,i){return this._currentRequest[e](t,i)}})),["aborted","connection","socket"].forEach((function(e){Object.defineProperty(k.prototype,e,{get:function(){return this._currentRequest[e]}})})),k.prototype._sanitizeOptions=function(e){if(e.headers||(e.headers={}),e.host&&(e.hostname||(e.hostname=e.host),delete e.host),!e.pathname&&e.path){var t=e.path.indexOf("?");t<0?e.pathname=e.path:(e.pathname=e.path.substring(0,t),e.search=e.path.substring(t))}},k.prototype._performRequest=function(){var e=this._options.protocol,t=this._options.nativeProtocols[e];if(!t)throw new TypeError("Unsupported protocol "+e);if(this._options.agents){var i=e.slice(0,-1);this._options.agent=this._options.agents[i]}var r=this._currentRequest=t.request(this._options,this._onNativeResponse);for(var s of(r._redirectable=this,f))r.on(s,y[s]);if(this._currentUrl=/^\//.test(this._options.path)?n.format(this._options):this._options.path,this._isRedirect){var o=0,a=this,p=this._requestBodyBuffers;!function e(t){if(r===a._currentRequest)if(t)a.emit("error",t);else if(o<p.length){var i=p[o++];r.finished||r.write(i.data,i.encoding,e)}else a._ended&&r.end()}()}},k.prototype._processResponse=function(e){var t=e.statusCode;this._options.trackRedirects&&this._redirects.push({url:this._currentUrl,headers:e.headers,statusCode:t});var i,r=e.headers.location;if(!r||!1===this._options.followRedirects||t<300||t>=400)return e.responseUrl=this._currentUrl,e.redirects=this._redirects,this.emit("response",e),void(this._requestBodyBuffers=[]);if(T(this._currentRequest),e.destroy(),++this._redirectCount>this._options.maxRedirects)throw new b;var s=this._options.beforeRedirect;s&&(i=Object.assign({Host:e.req.getHeader("host")},this._options.headers));var o=this._options.method;((301===t||302===t)&&"POST"===this._options.method||303===t&&!/^(?:GET|HEAD)$/.test(this._options.method))&&(this._options.method="GET",this._requestBodyBuffers=[],S(/^content-/i,this._options.headers));var p,c,d=S(/^host$/i,this._options.headers),m=A(this._currentUrl),f=d||m.host,y=/^\w+:/.test(r)?this._currentUrl:n.format(Object.assign(m,{host:f})),g=(p=r,c=y,h?new a(p,c):A(n.resolve(c,p)));if(l("redirecting to",g.href),this._isRedirect=!0,E(g,this._options),(g.protocol!==m.protocol&&"https:"!==g.protocol||g.host!==f&&!function(e,t){u(q(e)&&q(t));var i=e.length-t.length-1;return i>0&&"."===e[i]&&e.endsWith(t)}(g.host,f))&&S(/^(?:(?:proxy-)?authorization|cookie)$/i,this._options.headers),C(s)){var x={headers:e.headers,statusCode:t},v={url:y,method:o,headers:i};s(this._options,x,v),this._sanitizeOptions(this._options)}this._performRequest()},e.exports=P({http:p,https:c}),e.exports.wrap=P},3202:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unsafeStringify=void 0;const r=i(8873),s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));function o(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}t.unsafeStringify=o,t.default=function(e,t=0){const i=o(e,t);if(!(0,r.default)(i))throw TypeError("Stringified UUID is invalid");return i}},3334:(e,t,i)=>{"use strict";var r=i(484),s=i(1755);const o={collection:"map",default:!0,nodeClass:s.YAMLMap,tag:"tag:yaml.org,2002:map",resolve:(e,t)=>(r.isMap(e)||t("Expected a mapping for this tag"),e),createNode:(e,t,i)=>s.YAMLMap.from(e,t,i)};t.map=o},3479:(e,t,i)=>{"use strict";var r=i(6145),s=i(9343),o=i(8300);function n(e,t,i){var r=[];return e.include.forEach((function(e){i=n(e,t,i)})),e[t].forEach((function(e){i.forEach((function(t,i){t.tag===e.tag&&t.kind===e.kind&&r.push(i)})),i.push(e)})),i.filter((function(e,t){return-1===r.indexOf(t)}))}function a(e){this.include=e.include||[],this.implicit=e.implicit||[],this.explicit=e.explicit||[],this.implicit.forEach((function(e){if(e.loadKind&&"scalar"!==e.loadKind)throw new s("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")})),this.compiledImplicit=n(this,"implicit",[]),this.compiledExplicit=n(this,"explicit",[]),this.compiledTypeMap=function(){var e,t,i={scalar:{},sequence:{},mapping:{},fallback:{}};function r(e){i[e.kind][e.tag]=i.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(r);return i}(this.compiledImplicit,this.compiledExplicit)}a.DEFAULT=null,a.create=function(){var e,t;switch(arguments.length){case 1:e=a.DEFAULT,t=arguments[0];break;case 2:e=arguments[0],t=arguments[1];break;default:throw new s("Wrong number of arguments for Schema.create function")}if(e=r.toArray(e),t=r.toArray(t),!e.every((function(e){return e instanceof a})))throw new s("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");if(!t.every((function(e){return e instanceof o})))throw new s("Specified list of YAML types (or a single Type object) contains a non-Type object.");return new a({include:e,explicit:t})},e.exports=a},3522:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(2654),o={type:"object",properties:{pattern:{type:"string"},flags:{type:"string",nullable:!0}},required:["pattern"],additionalProperties:!1},n=/^\/(.*)\/([gimuy]*)$/;function a(){return{keyword:"regexp",type:"string",schemaType:["string","object"],code(e){const{data:t,schema:i}=e,o=function(t){if("object"==typeof t)return(0,s.usePattern)(e,t.pattern,t.flags);const i=n.exec(t);if(i)return(0,s.usePattern)(e,i[1],i[2]);throw new Error("cannot parse string into RegExp")}(i);e.pass(r._`${o}.test(${t})`)},metaSchema:{anyOf:[{type:"string"},o]}}}t.default=a,e.exports=a},3576:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675);function s(){return{keyword:"deepRequired",type:"object",schemaType:"array",code(e){const{schema:t,data:i}=e,s=t.map((e=>r._`(${function(e){if(""===e)throw new Error("empty JSON pointer not allowed");const t=e.split("/");let s=i;const o=t.map(((e,t)=>t?s=r._`${s}${(0,r.getProperty)(function(e){return e.replace(/~1/g,"/").replace(/~0/g,"~")}(e))}`:s));return(0,r.and)(...o)}(e)}) === undefined`));e.fail((0,r.or)(...s))},metaSchema:{type:"array",items:{type:"string",format:"json-pointer"}}}}t.default=s,e.exports=s},3588:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="00000000-0000-0000-0000-000000000000"},3596:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i},3614:(e,t,i)=>{const{schemas:r}=i(689),{validate:s,transformToSchemaKey:o}=i(7514),{resolvePaths:n}=i(7920),{readFile:a}=i(649);e.exports={schemas:r,validate:s,resolvePaths:n,readFile:a,transformToSchemaKey:o}},3628:(e,t,i)=>{"use strict";var r=i(8648),s=i(1064),o=i(7176);e.exports=r?function(e){return r(e)}:s?function(e){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("getProto: not an object");return s(e)}:o?function(e){return o(e)}:null},3643:(e,t,i)=>{"use strict";i(4393);var r=i(2309),s=i(8692),o=i(3160),n=i(1887),a=i(2439),p=i(2031),c=i(1893),d=i(3998),u=i(8543);function l(){this.schema=null,this.$refs=new r}e.exports=l,e.exports.YAML=i(8949),l.parse=function(e,t,i,r){var s=new this;return s.parse.apply(s,arguments)},l.prototype.parse=function(e,t,i,n){var a,p=o(arguments);if(!p.path&&!p.schema){var l=u("Expected a file path, URL, or object. Got %s",p.path||p.schema);return d(p.callback,Promise.reject(l))}this.schema=null,this.$refs=new r;var h="http";if(c.isFileSystemPath(p.path)&&(p.path=c.fromFileSystemPath(p.path),h="file"),p.path=c.resolve(c.cwd(),p.path),p.schema&&"object"==typeof p.schema){var m=this.$refs._add(p.path);m.value=p.schema,m.pathType=h,a=Promise.resolve(p.schema)}else a=s(p.path,this.$refs,p.options);var f=this;return a.then((function(e){if(!e||"object"!=typeof e||Buffer.isBuffer(e))throw u.syntax('"%s" is not a valid JSON Schema',f.$refs._root$Ref.path||e);return f.schema=e,d(p.callback,Promise.resolve(f.schema))})).catch((function(e){return d(p.callback,Promise.reject(e))}))},l.resolve=function(e,t,i,r){var s=new this;return s.resolve.apply(s,arguments)},l.prototype.resolve=function(e,t,i,r){var s=this,a=o(arguments);return this.parse(a.path,a.schema,a.options).then((function(){return n(s,a.options)})).then((function(){return d(a.callback,Promise.resolve(s.$refs))})).catch((function(e){return d(a.callback,Promise.reject(e))}))},l.bundle=function(e,t,i,r){var s=new this;return s.bundle.apply(s,arguments)},l.prototype.bundle=function(e,t,i,r){var s=this,n=o(arguments);return this.resolve(n.path,n.schema,n.options).then((function(){return a(s,n.options),d(n.callback,Promise.resolve(s.schema))})).catch((function(e){return d(n.callback,Promise.reject(e))}))},l.dereference=function(e,t,i,r){var s=new this;return s.dereference.apply(s,arguments)},l.prototype.dereference=function(e,t,i,r){var s=this,n=o(arguments);return this.resolve(n.path,n.schema,n.options).then((function(){return p(s,n.options),d(n.callback,Promise.resolve(s.schema))})).catch((function(e){return d(n.callback,Promise.reject(e))}))}},3665:(e,t,i)=>{"use strict";var r=i(3479);e.exports=new r({include:[i(1113)],implicit:[i(1791),i(6299)],explicit:[i(8686),i(5058),i(1390),i(743)]})},3701:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={data:new r.Name("data"),valCxt:new r.Name("valCxt"),instancePath:new r.Name("instancePath"),parentData:new r.Name("parentData"),parentDataProperty:new r.Name("parentDataProperty"),rootData:new r.Name("rootData"),dynamicAnchors:new r.Name("dynamicAnchors"),vErrors:new r.Name("vErrors"),errors:new r.Name("errors"),this:new r.Name("this"),self:new r.Name("self"),scope:new r.Name("scope"),json:new r.Name("json"),jsonPos:new r.Name("jsonPos"),jsonLen:new r.Name("jsonLen"),jsonPart:new r.Name("jsonPart")};t.default=s},3732:(e,t,i)=>{"use strict";var r=i(484);t.toJS=function e(t,i,s){if(Array.isArray(t))return t.map(((t,i)=>e(t,String(i),s)));if(t&&"function"==typeof t.toJSON){if(!s||!r.hasAnchor(t))return t.toJSON(i,s);const e={aliasCount:0,count:1,res:void 0};s.anchors.set(t,e),s.onCreate=t=>{e.res=t,delete s.onCreate};const o=t.toJSON(i,s);return s.onCreate&&s.onCreate(o),o}return"bigint"!=typeof t||s?.keep?t:Number(t)}},3783:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2648),s=i(2883),o=i(749),n=i(7230),a={keyword:"properties",type:"object",schemaType:"object",code(e){const{gen:t,schema:i,parentSchema:a,data:p,it:c}=e;"all"===c.opts.removeAdditional&&void 0===a.additionalProperties&&n.default.code(new r.KeywordCxt(c,n.default,"additionalProperties"));const d=(0,s.allSchemaProperties)(i);for(const e of d)c.definedProperties.add(e);c.opts.unevaluated&&d.length&&!0!==c.props&&(c.props=o.mergeEvaluated.props(t,(0,o.toHash)(d),c.props));const u=d.filter((e=>!(0,o.alwaysValidSchema)(c,i[e])));if(0===u.length)return;const l=t.name("valid");for(const i of u)h(i)?m(i):(t.if((0,s.propertyInData)(t,p,i,c.opts.ownProperties)),m(i),c.allErrors||t.else().var(l,!0),t.endIf()),e.it.definedProperties.add(i),e.ok(l);function h(e){return c.opts.useDefaults&&!c.compositeRule&&void 0!==i[e].default}function m(t){e.subschema({keyword:"properties",schemaProp:t,dataProp:t},l)}}};t.default=a},3793:(e,t,i)=>{"use strict";var r=i(6261),s=i(484),o=i(248),n=i(7180);t.createStringifyContext=function(e,t){const i=Object.assign({blockQuote:!0,commentString:o.stringifyComment,defaultKeyType:null,defaultStringType:"PLAIN",directives:null,doubleQuotedAsJSON:!1,doubleQuotedMinMultiLineLength:40,falseStr:"false",flowCollectionPadding:!0,indentSeq:!0,lineWidth:80,minContentWidth:20,nullStr:"null",simpleKeys:!1,singleQuote:null,trueStr:"true",verifyAliasOrder:!0},e.schema.toStringOptions,t);let r;switch(i.collectionStyle){case"block":r=!1;break;case"flow":r=!0;break;default:r=null}return{anchors:new Set,doc:e,flowCollectionPadding:i.flowCollectionPadding?" ":"",indent:"",indentStep:"number"==typeof i.indent?" ".repeat(i.indent):"  ",inFlow:r,options:i}},t.stringify=function(e,t,i,o){if(s.isPair(e))return e.toString(t,i,o);if(s.isAlias(e)){if(t.doc.directives)return e.toString(t);if(t.resolvedAliases?.has(e))throw new TypeError("Cannot stringify circular structure without alias nodes");t.resolvedAliases?t.resolvedAliases.add(e):t.resolvedAliases=new Set([e]),e=e.resolve(t.doc)}let a;const p=s.isNode(e)?e:t.doc.createNode(e,{onTagObj:e=>a=e});a??(a=function(e,t){if(t.tag){const i=e.filter((e=>e.tag===t.tag));if(i.length>0)return i.find((e=>e.format===t.format))??i[0]}let i,r;if(s.isScalar(t)){r=t.value;let s=e.filter((e=>e.identify?.(r)));if(s.length>1){const e=s.filter((e=>e.test));e.length>0&&(s=e)}i=s.find((e=>e.format===t.format))??s.find((e=>!e.format))}else r=t,i=e.find((e=>e.nodeClass&&r instanceof e.nodeClass));if(!i)throw new Error(`Tag not resolved for ${r?.constructor?.name??(null===r?"null":typeof r)} value`);return i}(t.doc.schema.tags,p));const c=function(e,t,{anchors:i,doc:o}){if(!o.directives)return"";const n=[],a=(s.isScalar(e)||s.isCollection(e))&&e.anchor;a&&r.anchorIsValid(a)&&(i.add(a),n.push(`&${a}`));const p=e.tag??(t.default?null:t.tag);return p&&n.push(o.directives.tagString(p)),n.join(" ")}(p,a,t);c.length>0&&(t.indentAtStart=(t.indentAtStart??0)+c.length+1);const d="function"==typeof a.stringify?a.stringify(p,t,i,o):s.isScalar(p)?n.stringifyString(p,t,i,o):p.toString(t,i,o);return c?s.isScalar(p)||"{"===d[0]||"["===d[0]?`${c} ${d}`:`${c}\n${t.indent}${d}`:d}},3857:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={keyword:["maxItems","minItems"],type:"array",schemaType:"number",$data:!0,error:{message({keyword:e,schemaCode:t}){const i="maxItems"===e?"more":"fewer";return r.str`must NOT have ${i} than ${t} items`},params:({schemaCode:e})=>r._`{limit: ${e}}`},code(e){const{keyword:t,data:i,schemaCode:s}=e,o="maxItems"===t?r.operators.GT:r.operators.LT;e.fail$data(r._`${i}.length ${o} ${s}`)}};t.default=s},3891:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2524),s=i(3202);t.default=function(e){const t=(i="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&i[6])<<4|i[7]>>4&15,(15&i[7])<<4|(240&i[4])>>4,(15&i[4])<<4|(240&i[5])>>4,(15&i[5])<<4|(240&i[0])>>4,(15&i[0])<<4|(240&i[1])>>4,(15&i[1])<<4|(240&i[2])>>4,96|15&i[2],i[3],i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15]));var i;return"string"==typeof e?(0,s.unsafeStringify)(t):t}},3969:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return()=>({keyword:e,type:"number",schemaType:"array",macro:function([t,i]){return function(t,i){if(t>i||"exclusiveRange"===e&&t===i)throw new Error("There are no numbers in range")}(t,i),"range"===e?{minimum:t,maximum:i}:{exclusiveMinimum:t,exclusiveMaximum:i}},metaSchema:{type:"array",minItems:2,maxItems:2,items:{type:"number"}}})}},3974:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWindows=void 0;const i=/^win/.test(globalThis.process?globalThis.process.platform:"");t.isWindows=()=>i},3998:(e,t,i)=>{"use strict";var r=i(1137);e.exports=function(e,t){return e?void t.then((function(t){r((function(){e(null,t)}))}),(function(t){r((function(){e(t)}))})):t}},4013:(e,t,i)=>{"use strict";var r=i(6145);function s(e,t,i,r,s){this.name=e,this.buffer=t,this.position=i,this.line=r,this.column=s}s.prototype.getSnippet=function(e,t){var i,s,o,n,a;if(!this.buffer)return null;for(e=e||4,t=t||75,i="",s=this.position;s>0&&-1==="\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(s-1));)if(s-=1,this.position-s>t/2-1){i=" ... ",s+=5;break}for(o="",n=this.position;n<this.buffer.length&&-1==="\0\r\n\u2028\u2029".indexOf(this.buffer.charAt(n));)if((n+=1)-this.position>t/2-1){o=" ... ",n-=5;break}return a=this.buffer.slice(s,n),r.repeat(" ",e)+i+a+o+"\n"+r.repeat(" ",e+this.position-s+i.length)+"^"},s.prototype.toString=function(e){var t,i="";return this.name&&(i+='in "'+this.name+'" '),i+="at line "+(this.line+1)+", column "+(this.column+1),e||(t=this.getSnippet())&&(i+=":\n"+t),i},e.exports=s},4039:(e,t,i)=>{"use strict";var r="undefined"!=typeof Symbol&&Symbol,s=i(1333);e.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&s()}},4070:(e,t,i)=>{"use strict";var r=i(9714);t.resolveBlockScalar=function(e,t,i){const s=t.offset,o=function({offset:e,props:t},i,r){if("block-scalar-header"!==t[0].type)return r(t[0],"IMPOSSIBLE","Block scalar header not found"),null;const{source:s}=t[0],o=s[0];let n=0,a="",p=-1;for(let t=1;t<s.length;++t){const i=s[t];if(a||"-"!==i&&"+"!==i){const r=Number(i);!n&&r?n=r:-1===p&&(p=e+t)}else a=i}-1!==p&&r(p,"UNEXPECTED_TOKEN",`Block scalar header includes extra characters: ${s}`);let c=!1,d="",u=s.length;for(let e=1;e<t.length;++e){const s=t[e];switch(s.type){case"space":c=!0;case"newline":u+=s.source.length;break;case"comment":i&&!c&&r(s,"MISSING_CHAR","Comments must be separated from other tokens by white space characters"),u+=s.source.length,d=s.source.substring(1);break;case"error":r(s,"UNEXPECTED_TOKEN",s.message),u+=s.source.length;break;default:{r(s,"UNEXPECTED_TOKEN",`Unexpected token in block scalar header: ${s.type}`);const e=s.source;e&&"string"==typeof e&&(u+=e.length)}}}return{mode:o,indent:n,chomp:a,comment:d,length:u}}(t,e.options.strict,i);if(!o)return{value:"",type:null,comment:"",range:[s,s,s]};const n=">"===o.mode?r.Scalar.BLOCK_FOLDED:r.Scalar.BLOCK_LITERAL,a=t.source?function(e){const t=e.split(/\n( *)/),i=t[0],r=i.match(/^( *)/),s=[r?.[1]?[r[1],i.slice(r[1].length)]:["",i]];for(let e=1;e<t.length;e+=2)s.push([t[e],t[e+1]]);return s}(t.source):[];let p=a.length;for(let e=a.length-1;e>=0;--e){const t=a[e][1];if(""!==t&&"\r"!==t)break;p=e}if(0===p){const e="+"===o.chomp&&a.length>0?"\n".repeat(Math.max(1,a.length-1)):"";let i=s+o.length;return t.source&&(i+=t.source.length),{value:e,type:n,comment:o.comment,range:[s,i,i]}}let c=t.indent+o.indent,d=t.offset+o.length,u=0;for(let t=0;t<p;++t){const[r,s]=a[t];if(""!==s&&"\r"!==s){if(r.length<c){const e="Block scalars with more-indented leading empty lines must use an explicit indentation indicator";i(d+r.length,"MISSING_CHAR",e)}0===o.indent&&(c=r.length),u=t,0!==c||e.atRoot||i(d,"BAD_INDENT","Block scalar values in collections must be indented");break}0===o.indent&&r.length>c&&(c=r.length),d+=r.length+s.length+1}for(let e=a.length-1;e>=p;--e)a[e][0].length>c&&(p=e+1);let l="",h="",m=!1;for(let e=0;e<u;++e)l+=a[e][0].slice(c)+"\n";for(let e=u;e<p;++e){let[t,s]=a[e];d+=t.length+s.length+1;const p="\r"===s[s.length-1];if(p&&(s=s.slice(0,-1)),s&&t.length<c){const e="Block scalar lines must not be less indented than their "+(o.indent?"explicit indentation indicator":"first line");i(d-s.length-(p?2:1),"BAD_INDENT",e),t=""}n===r.Scalar.BLOCK_LITERAL?(l+=h+t.slice(c)+s,h="\n"):t.length>c||"\t"===s[0]?(" "===h?h="\n":m||"\n"!==h||(h="\n\n"),l+=h+t.slice(c)+s,h="\n",m=!0):""===s?"\n"===h?l+="\n":h="\n":(l+=h+s,h=" ",m=!1)}switch(o.chomp){case"-":break;case"+":for(let e=p;e<a.length;++e)l+="\n"+a[e][0].slice(c);"\n"!==l[l.length-1]&&(l+="\n");break;default:l+="\n"}const f=s+o.length+t.source.length;return{value:l,type:n,comment:o.comment,range:[s,f,f]}}},4173:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2883),s=i(6675),o=i(749),n={keyword:"required",type:"object",schemaType:"array",$data:!0,error:{message:({params:{missingProperty:e}})=>s.str`must have required property '${e}'`,params:({params:{missingProperty:e}})=>s._`{missingProperty: ${e}}`},code(e){const{gen:t,schema:i,schemaCode:n,data:a,$data:p,it:c}=e,{opts:d}=c;if(!p&&0===i.length)return;const u=i.length>=d.loopRequired;if(c.allErrors?function(){if(u||p)e.block$data(s.nil,l);else for(const t of i)(0,r.checkReportMissingProp)(e,t)}():function(){const o=t.let("missing");if(u||p){const i=t.let("valid",!0);e.block$data(i,(()=>function(i,o){e.setParams({missingProperty:i}),t.forOf(i,n,(()=>{t.assign(o,(0,r.propertyInData)(t,a,i,d.ownProperties)),t.if((0,s.not)(o),(()=>{e.error(),t.break()}))}),s.nil)}(o,i))),e.ok(i)}else t.if((0,r.checkMissingProp)(e,i,o)),(0,r.reportMissingProp)(e,o),t.else()}(),d.strictRequired){const t=e.parentSchema.properties,{definedProperties:r}=e.it;for(const e of i)if(void 0===(null==t?void 0:t[e])&&!r.has(e)){const t=`required property "${e}" is not defined at "${c.schemaEnv.baseId+c.errSchemaPath}" (strictRequired)`;(0,o.checkStrictMode)(c,t,c.opts.strictRequired)}}function l(){t.forOf("prop",n,(i=>{e.setParams({missingProperty:i}),t.if((0,r.noPropertyInData)(t,a,i,d.ownProperties),(()=>e.error()))}))}}};t.default=n},4253:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveSchema=t.getCompilingSchema=t.resolveRef=t.compileSchema=t.SchemaEnv=void 0;const r=i(6675),s=i(6288),o=i(3701),n=i(6193),a=i(749),p=i(2648);class c{constructor(e){var t;let i;this.refs={},this.dynamicAnchors={},"object"==typeof e.schema&&(i=e.schema),this.schema=e.schema,this.schemaId=e.schemaId,this.root=e.root||this,this.baseId=null!==(t=e.baseId)&&void 0!==t?t:(0,n.normalizeId)(null==i?void 0:i[e.schemaId||"$id"]),this.schemaPath=e.schemaPath,this.localRefs=e.localRefs,this.meta=e.meta,this.$async=null==i?void 0:i.$async,this.refs={}}}function d(e){const t=l.call(this,e);if(t)return t;const i=(0,n.getFullPath)(this.opts.uriResolver,e.root.baseId),{es5:a,lines:c}=this.opts.code,{ownProperties:d}=this.opts,u=new r.CodeGen(this.scope,{es5:a,lines:c,ownProperties:d});let h;e.$async&&(h=u.scopeValue("Error",{ref:s.default,code:r._`require("ajv/dist/runtime/validation_error").default`}));const m=u.scopeName("validate");e.validateName=m;const f={gen:u,allErrors:this.opts.allErrors,data:o.default.data,parentData:o.default.parentData,parentDataProperty:o.default.parentDataProperty,dataNames:[o.default.data],dataPathArr:[r.nil],dataLevel:0,dataTypes:[],definedProperties:new Set,topSchemaRef:u.scopeValue("schema",!0===this.opts.code.source?{ref:e.schema,code:(0,r.stringify)(e.schema)}:{ref:e.schema}),validateName:m,ValidationError:h,schema:e.schema,schemaEnv:e,rootId:i,baseId:e.baseId||i,schemaPath:r.nil,errSchemaPath:e.schemaPath||(this.opts.jtd?"":"#"),errorPath:r._`""`,opts:this.opts,self:this};let y;try{this._compilations.add(e),(0,p.validateFunctionCode)(f),u.optimize(this.opts.code.optimize);const t=u.toString();y=`${u.scopeRefs(o.default.scope)}return ${t}`,this.opts.code.process&&(y=this.opts.code.process(y,e));const i=new Function(`${o.default.self}`,`${o.default.scope}`,y)(this,this.scope.get());if(this.scope.value(m,{ref:i}),i.errors=null,i.schema=e.schema,i.schemaEnv=e,e.$async&&(i.$async=!0),!0===this.opts.code.source&&(i.source={validateName:m,validateCode:t,scopeValues:u._values}),this.opts.unevaluated){const{props:e,items:t}=f;i.evaluated={props:e instanceof r.Name?void 0:e,items:t instanceof r.Name?void 0:t,dynamicProps:e instanceof r.Name,dynamicItems:t instanceof r.Name},i.source&&(i.source.evaluated=(0,r.stringify)(i.evaluated))}return e.validate=i,e}catch(t){throw delete e.validate,delete e.validateName,y&&this.logger.error("Error compiling schema, function code:",y),t}finally{this._compilations.delete(e)}}function u(e){return(0,n.inlineRef)(e.schema,this.opts.inlineRefs)?e.schema:e.validate?e:d.call(this,e)}function l(e){for(const r of this._compilations)if(i=e,(t=r).schema===i.schema&&t.root===i.root&&t.baseId===i.baseId)return r;var t,i}function h(e,t){let i;for(;"string"==typeof(i=this.refs[t]);)t=i;return i||this.schemas[t]||m.call(this,e,t)}function m(e,t){const i=this.opts.uriResolver.parse(t),r=(0,n._getFullPath)(this.opts.uriResolver,i);let s=(0,n.getFullPath)(this.opts.uriResolver,e.baseId,void 0);if(Object.keys(e.schema).length>0&&r===s)return y.call(this,i,e);const o=(0,n.normalizeId)(r),a=this.refs[o]||this.schemas[o];if("string"==typeof a){const t=m.call(this,e,a);if("object"!=typeof(null==t?void 0:t.schema))return;return y.call(this,i,t)}if("object"==typeof(null==a?void 0:a.schema)){if(a.validate||d.call(this,a),o===(0,n.normalizeId)(t)){const{schema:t}=a,{schemaId:i}=this.opts,r=t[i];return r&&(s=(0,n.resolveUrl)(this.opts.uriResolver,s,r)),new c({schema:t,schemaId:i,root:e,baseId:s})}return y.call(this,i,a)}}t.SchemaEnv=c,t.compileSchema=d,t.resolveRef=function(e,t,i){var r;i=(0,n.resolveUrl)(this.opts.uriResolver,t,i);const s=e.refs[i];if(s)return s;let o=h.call(this,e,i);if(void 0===o){const s=null===(r=e.localRefs)||void 0===r?void 0:r[i],{schemaId:n}=this.opts;s&&(o=new c({schema:s,schemaId:n,root:e,baseId:t}))}return void 0!==o?e.refs[i]=u.call(this,o):void 0},t.getCompilingSchema=l,t.resolveSchema=m;const f=new Set(["properties","patternProperties","enum","dependencies","definitions"]);function y(e,{baseId:t,schema:i,root:r}){var s;if("/"!==(null===(s=e.fragment)||void 0===s?void 0:s[0]))return;for(const r of e.fragment.slice(1).split("/")){if("boolean"==typeof i)return;const e=i[(0,a.unescapeFragment)(r)];if(void 0===e)return;const s="object"==typeof(i=e)&&i[this.opts.schemaId];!f.has(r)&&s&&(t=(0,n.resolveUrl)(this.opts.uriResolver,t,s))}let o;if("boolean"!=typeof i&&i.$ref&&!(0,a.schemaHasRulesButRef)(i,this.RULES)){const e=(0,n.resolveUrl)(this.opts.uriResolver,t,i.$ref);o=m.call(this,r,e)}const{schemaId:p}=this.opts;return o=o||new c({schema:i,schemaId:p,root:r,baseId:t}),o.schema!==o.root.schema?o:void 0}},4265:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){h("Activating Doc Detective extension...");const t=a.commands.registerCommand("doc-detective.helloWorld",(()=>{a.window.showInformationMessage("Hello World from doc-detective!")}));e.subscriptions.push(t);const i=new f(e);e.subscriptions.push(a.window.registerWebviewViewProvider("docDetectiveView",i)),e.subscriptions.push(a.window.onDidChangeVisibleTextEditors((()=>{h("Visible editors changed, updating webview..."),i.updateWebview()}))),e.subscriptions.push(a.window.onDidChangeActiveTextEditor((()=>{h("Active editor changed, updating webview..."),i.updateWebview()}))),e.subscriptions.push(a.workspace.onDidSaveTextDocument((e=>{h(`File saved: ${e.uri.fsPath}, updating webview...`),i.updateWebview()}))),e.subscriptions.push(a.window.onDidChangeActiveColorTheme((()=>{h("Color theme changed, updating webview..."),i.hasView()&&i.updateWebview()}))),e.subscriptions.push(a.workspace.onDidChangeConfiguration((e=>{e.affectsConfiguration("docDetective.configPath")&&(h("Doc Detective configuration changed, updating webview..."),i.hasView()&&i.updateWebview())}))),e.subscriptions.push(l),h("Doc Detective extension activated")},t.deactivate=function(){};const a=n(i(1398)),p=n(i(6928)),c=i(9896),{detectTests:d}=i(7857),u=i(7210),l=a.window.createOutputChannel("Doc Detective");function h(e){console.log(e),l.appendLine(e)}async function m(e){try{return await c.promises.access(e),!0}catch{return!1}}class f{context;static viewType="docDetectiveView";_view;constructor(e){this.context=e}hasView(){return!!this._view}async resolveWebviewView(e,t,i){try{h("Resolving webview view..."),this._view=e,e.webview.options={enableScripts:!0,localResourceRoots:[a.Uri.joinPath(this.context.extensionUri,"media")]},e.webview.html='\n        <!DOCTYPE html>\n        <html lang="en">\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta http-equiv="Content-Security-Policy" content="default-src \'none\'; style-src \'unsafe-inline\' https:; script-src \'unsafe-inline\'; connect-src vscode-webview:;">\n          <title>Loading Doc Detective...</title>\n          <style>\n            body {\n              padding: 20px;\n              color: var(--vscode-editor-foreground);\n              font-family: var(--vscode-font-family);\n            }\n            .loading {\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              height: 100px;\n            }\n          </style>\n        </head>\n        <body>\n          <div class="loading">Loading Doc Detective... Please wait.</div>\n        </body>\n        </html>\n      ',h("Initial webview HTML set, updating webview..."),await this.updateWebview(),e.webview.onDidReceiveMessage((async e=>{h(`Received message from webview: ${JSON.stringify(e)}`)})),h("Webview view resolved successfully")}catch(e){h(`Error resolving webview: ${e}`),this._view&&(this._view.webview.html=this.getErrorHtml(`Failed to initialize Doc Detective panel: ${e}`))}}async updateWebview(){try{if(!this._view)return void h("No view available to update");h("Updating webview content...");const e=a.window.visibleTextEditors.filter((e=>"file"===e.document.uri.scheme)).map((e=>e.document.uri.fsPath)),t=Array.from(new Set(e));if(h(`Found ${t.length} unique file paths`),0===t.length)return void(this._view.webview.html=this.getNoFilesHtml());this._view.webview.html=this.getLoadingHtml();const i=await async function(e){const t=a.workspace.getConfiguration("docDetective").get("configPath");if(t&&""!==t.trim()){if(p.isAbsolute(t))return await m(t)?t:null;if(e&&e.length>0)for(const i of e){const e=p.join(i.uri.fsPath,t);if(await m(e))return e}return h(`Custom config path not found: ${t}`),null}if(e&&e.length>0)for(const t of e){const e=[p.join(t.uri.fsPath,".doc-detective.json"),p.join(t.uri.fsPath,".doc-detective.yaml"),p.join(t.uri.fsPath,".doc-detective.yml")];for(const t of e)if(await m(t))return h(`Found config file: ${t}`),t}return h("No Doc Detective config file found"),null}(a.workspace.workspaceFolders);let r=null;i?(r=await async function(e){try{h(`Loading config file: ${e}`);const t=await c.promises.readFile(e,"utf8");if(e.endsWith(".json"))return JSON.parse(t);if(e.endsWith(".yaml")||e.endsWith(".yml"))return u.load(t);throw new Error(`Unsupported file format: ${p.extname(e)}`)}catch(e){return h(`Error loading config file: ${e}`),null}}(i),h(`Loaded base config from ${i}`)):h("No config file found, using default configuration");const s={};for(const e of t)try{h(`Detecting tests for file: ${e}`);const t=r?{...r}:{};t.input=e;const i=await d({config:t});s[e]=i,h(`Detected tests for ${e}: ${JSON.stringify(i).substring(0,100)}...`)}catch(t){h(`Error detecting tests for ${e}: ${t}`),s[e]={error:String(t)}}h("Rendering results to HTML...");try{this._view.webview.html=this.getHtmlForWebview(s),h("Webview updated successfully with full view")}catch(e){h(`Error with view rendering: ${e}`),this._view.webview.html=this.getErrorHtml(`Failed to render results: ${e}`)}}catch(e){h(`Error updating webview: ${e}`),this._view&&(this._view.webview.html=this.getErrorHtml(`Failed to update Doc Detective panel: ${e}`))}}getLoadingHtml(){return'<!DOCTYPE html>\n      <html lang="en">\n      <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="Content-Security-Policy" content="default-src \'none\'; style-src \'unsafe-inline\' https:; script-src \'unsafe-inline\'; connect-src vscode-webview:;">\n        <title>Doc Detective Results</title>\n        <style>\n          body {\n            font-family: var(--vscode-editor-font-family, monospace); \n            margin: 0; \n            padding: 1em; \n            background: var(--vscode-editor-background); \n            color: var(--vscode-editor-foreground);\n          }\n          .loading {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 100px;\n          }\n        </style>\n      </head>\n      <body>\n        <div class="loading">Processing files, please wait...</div>\n      </body>\n      </html>'}getNoFilesHtml(){return'<!DOCTYPE html>\n      <html lang="en">\n      <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="Content-Security-Policy" content="default-src \'none\'; style-src \'unsafe-inline\' https:; script-src \'unsafe-inline\'; connect-src vscode-webview:;">\n        <title>Doc Detective Results</title>\n        <style>\n          body {\n            font-family: var(--vscode-editor-font-family, monospace); \n            margin: 0; \n            padding: 1em; \n            background: var(--vscode-editor-background); \n            color: var(--vscode-editor-foreground);\n          }\n          .message {\n            padding: 1em;\n            text-align: center;\n          }\n        </style>\n      </head>\n      <body>        <div class="message">\n          <h3>No files open</h3>\n          <p>Open files in the editor to see Doc Detective results.</p>\n          <p><em>Results automatically update when files are saved.</em></p>\n        </div>\n      </body>\n      </html>'}getErrorHtml(e){return`<!DOCTYPE html>\n      <html lang="en">\n      <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src 'unsafe-inline' https:; script-src 'unsafe-inline'; connect-src vscode-webview:;">\n        <title>Doc Detective Error</title>\n        <style>\n          body {\n            font-family: var(--vscode-editor-font-family, monospace); \n            margin: 0; \n            padding: 1em; \n            background: var(--vscode-editor-background); \n            color: var(--vscode-editor-foreground);\n          }\n          .error {\n            color: var(--vscode-errorForeground);\n            padding: 1em;\n            border: 1px solid currentColor;\n            margin: 1em 0;\n          }\n        </style>\n      </head>      <body>\n        <h3>Doc Detective Error</h3>\n        <div class="error">${e}</div>\n        <p>Check the Doc Detective output channel for more details.</p>\n        <p><em>Doc Detective automatically updates when files are saved.</em></p>\n      </body>\n      </html>`}getHtmlForWebview(e){try{if(!e||0===Object.keys(e).length)return h("No results to display"),this.getNoFilesHtml();const t=JSON.stringify(JSON.stringify(e)).slice(1,-1).replace(/\\"/g,'\\"');return h(`JSON string prepared (first 100 chars): ${t.substring(0,100)}...`),`<!DOCTYPE html>\n        <html lang="en">\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src 'unsafe-inline' https:; script-src 'unsafe-inline'; connect-src vscode-webview:;">\n          <title>Doc Detective Results</title>\n          <style>\n            :root {\n              --background: var(--vscode-editor-background);\n              --foreground: var(--vscode-editor-foreground);\n              --key-color: var(--vscode-symbolIcon-propertyForeground, var(--vscode-debugTokenExpression-name, #9cdcfe));\n              --string-color: var(--vscode-debugTokenExpression-string, #ce9178);\n              --number-color: var(--vscode-debugTokenExpression-number, #b5cea8);\n              --boolean-color: var(--vscode-debugTokenExpression-boolean, #569cd6);\n              --indent-color: var(--vscode-editorIndentGuide-background, #555);\n              --dash-color: var(--vscode-editorIndentGuide-activeBackground, #666);\n              --toggle-color: var(--vscode-editorLink-activeForeground, #569cd6);\n            }\n            \n            body { \n              font-family: var(--vscode-editor-font-family, monospace); \n              margin: 0; \n              padding: 0.5em; \n              background: var(--background); \n              color: var(--foreground);\n              font-size: var(--vscode-editor-font-size, 14px);\n              line-height: 1.5;\n            }\n            \n            .collapsible { cursor: pointer; }\n            \n            .content { \n              display: block; \n              margin-left: 1.5em; \n            }\n            \n            li:not(.active) > .content { \n              display: none; \n            }\n            \n            .key { \n              color: var(--key-color); \n              font-weight: var(--vscode-font-weight, normal);\n            }\n            \n            .string { \n              color: var(--string-color); \n            }\n            \n            .number { \n              color: var(--number-color); \n            }\n            \n            .boolean { \n              color: var(--boolean-color); \n            }\n            \n            .null { \n              color: var(--foreground);\n              opacity: 0.7; \n            }\n            \n            ul { \n              list-style-type: none; \n              margin: 0; \n              padding: 0; \n            }\n            \n            .yaml-indent { \n              color: var(--indent-color); \n            }\n            \n            .yaml-dash { \n              color: var(--dash-color); \n            }\n            \n            .toggle { \n              color: var(--toggle-color);\n              display: inline-block;\n              width: 1em;\n              text-align: center;\n            }\n            \n            .simple-obj { \n              margin-left: 1.5em;\n              padding-left: 0.5em;\n              border-left: 1px solid var(--indent-color);\n            }\n            \n            /* Basic styling */\n            .collapsible {\n              transition: opacity 0.1s;\n            }\n            \n            li {\n              padding: 1px 0;\n            }\n            \n            /* Error/debug info */\n            .error-info {\n              color: var(--vscode-errorForeground);\n              margin: 8px 0;\n              padding: 8px;\n              border: 1px solid currentColor;\n            }\n\n            /* No results message */\n            .no-results {\n              text-align: center;\n              padding: 20px;\n            }\n          </style>        </head>\n        <body>\n          <div id="debug-info" style="display: none; padding: 8px; margin-bottom: 12px; border: 1px solid var(--vscode-debugTokenExpression-name); font-size: 12px;"></div>\n          <div id="json"></div><script>\n            // Error handling wrapper\n            try {\n              // Use the pre-escaped JSON string directly\n              // This avoids issues with template string interpolation\n              const jsonObj = JSON.parse("${t}");\n              \n              // Check if we have data to display\n              if (!jsonObj || Object.keys(jsonObj).length === 0) {\n                document.getElementById('json').innerHTML = '<div class="no-results">No results to display</div>';\n                console.log('Empty results object');\n              }\n              \n              function escapeHTML(str) {\n                return str.replace(/[&<>]/g, function(tag) {\n                  const chars = {'&':'&amp;','<':'&lt;','>':'&gt;'};\n                  return chars[tag] || tag;\n                });\n              }\n              \n              // Helper function to check if an object has nested objects/arrays\n              function hasNestedObjects(obj) {\n                if (typeof obj !== 'object' || obj === null) return false;\n                \n                if (Array.isArray(obj)) {\n                  return obj.some(item => typeof item === 'object' && item !== null);\n                } else {\n                  return Object.values(obj).some(val => typeof val === 'object' && val !== null);\n                }\n              }\n              \n              function renderYAML(obj, indent = 0, isArrayItem = false) {\n                const INDENT = '  ';\n                const pad = (n) => INDENT.repeat(n);\n                \n                if (typeof obj !== 'object' || obj === null) {\n                  if (typeof obj === 'string') return '<span class="string">' + escapeHTML(obj) + '</span>';\n                  if (typeof obj === 'number') return '<span class="number">' + obj + '</span>';\n                  if (typeof obj === 'boolean') return '<span class="boolean">' + obj + '</span>';\n                  if (obj === null) return '<span class="null">null</span>';\n                  return obj;\n                }\n                \n                if (Array.isArray(obj)) {\n                  if (obj.length === 0) return '[]';\n                  let html = '<ul>';\n                  \n                  for (let i = 0; i < obj.length; i++) {\n                    const value = obj[i];\n                    const indentSpan = '<span class="yaml-indent">' + pad(indent) + '</span>';\n                    \n                    if (typeof value === 'object' && value !== null) {\n                      if (Array.isArray(value)) {\n                        // Array inside array\n                        html += '<li>' + indentSpan + '<span class="yaml-dash">-</span> ' + \n                                renderYAML(value, indent + 1, true) + '</li>';\n                      } else {\n                        // Object inside array\n                        const keys = Object.keys(value);\n                        if (keys.length === 0) {\n                          html += '<li>' + indentSpan + '<span class="yaml-dash">-</span> {}</li>';\n                        } else {\n                          const hasNested = hasNestedObjects(value);\n                          const firstKey = keys[0];\n\n                          if (hasNested) {\n                            // This is a complex object with nested properties\n                            // Use triangle toggle INSTEAD OF dash marker\n                            html += '<li class="active">' + indentSpan + \n                                    '<span class="collapsible"><span class="toggle">▼</span> <span class="key">' + \n                                    escapeHTML(firstKey) + ':</span></span>';\n\n                            if (typeof value[firstKey] === 'object' && value[firstKey] !== null) {\n                              // First value is also an object\n                              html += '<div class="content">' + renderYAML(value[firstKey], indent + 1) + '</div>';\n                            } else {\n                              // First value is a primitive\n                              html += ' ' + renderYAML(value[firstKey], 0);\n                              html += '<div class="content">';\n                              for (let k = 1; k < keys.length; k++) {\n                                html += '<div>' + \n                                        '<span class="yaml-indent">' + pad(indent + 1) + '</span>' +\n                                        '<span class="key">' + escapeHTML(keys[k]) + ':</span> ' + \n                                        renderYAML(value[keys[k]], 0) + '</div>';\n                              }\n                              html += '</div>';\n                            }\n                          } else {\n                            // Simple object - use dash marker\n                            html += '<li>' + indentSpan + '<span class="yaml-dash">-</span> ' +\n                                    '<span class="key">' + escapeHTML(firstKey) + ':</span> ' +\n                                    renderYAML(value[firstKey], 0);\n                            \n                            if (keys.length > 1) {\n                              html += '<div class="simple-obj">';\n                              for (let k = 1; k < keys.length; k++) {\n                                html += '<div>' + \n                                        '<span class="key">' + escapeHTML(keys[k]) + ':</span> ' + \n                                        renderYAML(value[keys[k]], 0) + '</div>';\n                              }\n                              html += '</div>';\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      // Simple value in array\n                      html += '<li>' + indentSpan + '<span class="yaml-dash">-</span> ' + \n                              renderYAML(value, 0, true) + '</li>';\n                    }\n                    html += '</li>';\n                  }\n                  \n                  html += '</ul>';\n                  return html;\n                } else {\n                  // It's an object\n                  const keys = Object.keys(obj);\n                  if (keys.length === 0) return '{}';\n                  \n                  let html = '<ul>';\n                  keys.forEach(function(key) {\n                    const value = obj[key];\n                    const indentation = '<span class="yaml-indent">' + pad(indent) + '</span>';\n                    \n                    if (typeof value === 'object' && value !== null && (hasNestedObjects(value) || Array.isArray(value))) {\n                      // Object with nested structure - use triangle\n                      html += '<li class="active">' + indentation +\n                              '<span class="collapsible"><span class="toggle">▼</span> <span class="key">' + \n                              escapeHTML(key) + ':</span></span>' +\n                              '<div class="content">' + renderYAML(value, indent + 1, Array.isArray(value)) + '</div>' +\n                              '</li>';\n                    } else {\n                      // Simple key-value\n                      html += '<li>' + indentation + '<span class="key">' + \n                              escapeHTML(key) + ':</span> ' + renderYAML(value, 0) + '</li>';\n                    }\n                  });\n                  \n                  html += '</ul>';\n                  return html;\n                }\n              }\n              \n              document.getElementById('json').innerHTML = renderYAML(jsonObj, 0);\n              document.querySelectorAll('.collapsible').forEach(function(el) {\n                el.addEventListener('click', function(e) {\n                  e.stopPropagation();\n                  var parent = el.parentElement;\n                  parent.classList.toggle('active');\n                  \n                  // Update the toggle arrow\n                  const toggleEl = el.querySelector('.toggle');\n                  if (toggleEl) {\n                    toggleEl.textContent = parent.classList.contains('active') ? '▼' : '▶';\n                  }\n                });\n              });\n\n              // Handle theme changes\n              window.addEventListener('message', event => {\n                const message = event.data;\n                if (message.type === 'vscode-theme-updated') {\n                  console.log('Theme updated');\n                }\n              });\n                // Show success message\n              document.getElementById('debug-info').innerHTML = 'Data loaded successfully!';\n              \n              // Initialize VS Code API properly\n              try {\n                const vscode = acquireVsCodeApi();\n                \n                // Add a message to let the extension know we loaded successfully\n                setTimeout(() => {\n                  vscode.postMessage({\n                    command: 'webviewLoaded',\n                    data: { success: true }\n                  });\n                }, 500);\n              } catch (e) {\n                // This might happen if running in a context without VS Code API\n                console.error('Failed to acquire VS Code API:', e);\n                document.getElementById('debug-info').style.display = 'block';\n                document.getElementById('debug-info').innerHTML += '<br>VS Code API error: ' + e.message;\n              }\n            } catch (e) {\n              console.error('Error in webview script:', e);\n              document.getElementById('debug-info').style.display = 'block';\n              document.getElementById('debug-info').innerHTML = 'Error in webview: ' + e.message;\n              document.getElementById('json').innerHTML = \n                '<div class="error-info">Error processing results: ' + e.message + '</div>';\n            }\n          <\/script>\n        </body>\n        </html>`}catch(e){return h(`Error generating HTML: ${e}`),this.getErrorHtml(`Failed to generate HTML: ${e}`)}}}},4332:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i={},r={timestamp:()=>()=>Date.now(),datetime:()=>()=>(new Date).toISOString(),date:()=>()=>(new Date).toISOString().slice(0,10),time:()=>()=>(new Date).toISOString().slice(11),random:()=>()=>Math.random(),randomint:e=>{var t;const i=null!==(t=null==e?void 0:e.max)&&void 0!==t?t:2;return()=>Math.floor(Math.random()*i)},seq:e=>{var t;const r=null!==(t=null==e?void 0:e.name)&&void 0!==t?t:"";return i[r]||(i[r]=0),()=>i[r]++}},s=Object.assign((function(){return{keyword:"dynamicDefaults",type:"object",schemaType:["string","object"],modifying:!0,valid:!0,compile(e,t,i){if(!i.opts.useDefaults||i.compositeRule)return()=>!0;const s={};for(const t in e)s[t]="object"==typeof(n=e[t])?function({func:e,args:t}){const i=r[e];return o(e,i),i(t)}(n):function(e=""){const t=r[e];return o(e,t),t()}(n);var n;const a="empty"===i.opts.useDefaults;return t=>{for(const i in e)(void 0===t[i]||a&&(null===t[i]||""===t[i]))&&(t[i]=s[i]());return!0}},metaSchema:{type:"object",additionalProperties:{anyOf:[{type:"string"},{type:"object",additionalProperties:!1,required:["func","args"],properties:{func:{type:"string"},args:{type:"object"}}}]}}}}),{DEFAULTS:r});function o(e,t){if(!t)throw new Error(`invalid "dynamicDefaults" keyword property value: ${e}`)}t.default=s,e.exports=s},4347:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:function(){return!0},construct:function(){},predicate:function(e){return void 0===e},represent:function(){return""}})},4355:(e,t)=>{"use strict";class i extends Error{constructor(e,t,i,r){super(),this.name=e,this.code=i,this.message=r,this.pos=t}}t.YAMLError=i,t.YAMLParseError=class extends i{constructor(e,t,i){super("YAMLParseError",e,t,i)}},t.YAMLWarning=class extends i{constructor(e,t,i){super("YAMLWarning",e,t,i)}},t.prettifyError=(e,t)=>i=>{if(-1===i.pos[0])return;i.linePos=i.pos.map((e=>t.linePos(e)));const{line:r,col:s}=i.linePos[0];i.message+=` at line ${r}, column ${s}`;let o=s-1,n=e.substring(t.lineStarts[r-1],t.lineStarts[r]).replace(/[\n\r]+$/,"");if(o>=60&&n.length>80){const e=Math.min(o-39,n.length-79);n="…"+n.substring(e),o-=e-1}if(n.length>80&&(n=n.substring(0,79)+"…"),r>1&&/^ *$/.test(n.substring(0,o))){let i=e.substring(t.lineStarts[r-2],t.lineStarts[r-1]);i.length>80&&(i=i.substring(0,79)+"…\n"),n=i+n}if(/[^ ]/.test(n)){let e=1;const t=i.linePos[1];t&&t.line===r&&t.col>s&&(e=Math.max(1,Math.min(t.col-s,80-o)));const a=" ".repeat(o)+"^".repeat(e);i.message+=`:\n\n${n}\n${a}\n`}}},4393:(e,t,i)=>{"use strict";var r=i(9084),s=i(6173),o=i(9933),n=i(8311),a=i(8269),p=i(6667);function c(e){d(this,c.defaults),d(this,e)}function d(e,t){if(u(t))for(var i=Object.keys(t),r=0;r<i.length;r++){var s=i[r],o=t[s],n=e[s];u(o)?e[s]=d(n||{},o):void 0!==o&&(e[s]=o)}return e}function u(e){return e&&"object"==typeof e&&!Array.isArray(e)&&!(e instanceof RegExp)&&!(e instanceof Date)}e.exports=c,c.defaults={parse:{json:r,yaml:s,text:o,binary:n},resolve:{file:a,http:p,external:!0},dereference:{circular:!0}}},4414:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:function(e){if(null===e)return!1;if(0===e.length)return!1;var t=e,i=/\/([gim]*)$/.exec(e),r="";if("/"===t[0]){if(i&&(r=i[1]),r.length>3)return!1;if("/"!==t[t.length-r.length-1])return!1}return!0},construct:function(e){var t=e,i=/\/([gim]*)$/.exec(e),r="";return"/"===t[0]&&(i&&(r=i[1]),t=t.slice(1,t.length-r.length-1)),new RegExp(t,r)},predicate:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},represent:function(e){var t="/"+e.source+"/";return e.global&&(t+="g"),e.multiline&&(t+="m"),e.ignoreCase&&(t+="i"),t}})},4417:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o=i(5803),n={keyword:["maxLength","minLength"],type:"string",schemaType:"number",$data:!0,error:{message({keyword:e,schemaCode:t}){const i="maxLength"===e?"more":"fewer";return r.str`must NOT have ${i} than ${t} characters`},params:({schemaCode:e})=>r._`{limit: ${e}}`},code(e){const{keyword:t,data:i,schemaCode:n,it:a}=e,p="maxLength"===t?r.operators.GT:r.operators.LT,c=!1===a.opts.unicode?r._`${i}.length`:r._`${(0,s.useFunc)(e.gen,o.default)}(${i})`;e.fail$data(r._`${c} ${p} ${n}`)}};t.default=n},4434:e=>{"use strict";e.exports=require("events")},4441:(e,t,i)=>{e.exports=i(9023).format},4459:e=>{"use strict";e.exports=Number.isNaN||function(e){return e!=e}},4462:(e,t,i)=>{var r=i(28);e.exports=function(e,t,i){return r(e,t,null,i)}},4466:(e,t,i)=>{"use strict";var r=i(8433),s=i(5388);function o(e){return 48<=e&&e<=55}function n(e){return 48<=e&&e<=57}e.exports=new s("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,i,r=e.length,s=0,a=!1;if(!r)return!1;if("-"!==(t=e[s])&&"+"!==t||(t=e[++s]),"0"===t){if(s+1===r)return!0;if("b"===(t=e[++s])){for(s++;s<r;s++)if("_"!==(t=e[s])){if("0"!==t&&"1"!==t)return!1;a=!0}return a&&"_"!==t}if("x"===t){for(s++;s<r;s++)if("_"!==(t=e[s])){if(!(48<=(i=e.charCodeAt(s))&&i<=57||65<=i&&i<=70||97<=i&&i<=102))return!1;a=!0}return a&&"_"!==t}if("o"===t){for(s++;s<r;s++)if("_"!==(t=e[s])){if(!o(e.charCodeAt(s)))return!1;a=!0}return a&&"_"!==t}}if("_"===t)return!1;for(;s<r;s++)if("_"!==(t=e[s])){if(!n(e.charCodeAt(s)))return!1;a=!0}return!(!a||"_"===t)},construct:function(e){var t,i=e,r=1;if(-1!==i.indexOf("_")&&(i=i.replace(/_/g,"")),"-"!==(t=i[0])&&"+"!==t||("-"===t&&(r=-1),t=(i=i.slice(1))[0]),"0"===i)return 0;if("0"===t){if("b"===i[1])return r*parseInt(i.slice(2),2);if("x"===i[1])return r*parseInt(i.slice(2),16);if("o"===i[1])return r*parseInt(i.slice(2),8)}return r*parseInt(i,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!r.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},4502:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=void 0;const r=i(7766),s=i(8157);var o=i(8157);function n(e,t,i,o){return(0,s.default)(80,r.default,e,t,i,o)}Object.defineProperty(t,"DNS",{enumerable:!0,get:function(){return o.DNS}}),Object.defineProperty(t,"URL",{enumerable:!0,get:function(){return o.URL}}),n.DNS=s.DNS,n.URL=s.URL,t.default=n},4524:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=(0,r(i(6971)).default)("anyRequired");t.default=s,e.exports=s},4551:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.contentVocabulary=t.metadataVocabulary=void 0,t.metadataVocabulary=["title","description","default","deprecated","readOnly","writeOnly","examples"],t.contentVocabulary=["contentMediaType","contentEncoding","contentSchema"]},4555:e=>{function t(e){"function"==typeof this.jobs[e]&&this.jobs[e]()}e.exports=function(e){Object.keys(e.jobs).forEach(t.bind(e)),e.jobs={}}},4580:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2883),s=i(6675),o={keyword:"pattern",type:"string",schemaType:"string",$data:!0,error:{message:({schemaCode:e})=>s.str`must match pattern "${e}"`,params:({schemaCode:e})=>s._`{pattern: ${e}}`},code(e){const{data:t,$data:i,schema:o,schemaCode:n,it:a}=e,p=a.opts.unicodeRegExp?"u":"",c=i?s._`(new RegExp(${n}, ${p}))`:(0,r.usePattern)(e,o);e.fail$data(s._`!${c}.test(${t})`)}};t.default=o},4605:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(9613)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},4694:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(7892),s=i(6729),o=i(4417),n=i(4580),a=i(2148),p=i(4173),c=i(3857),d=i(8895),u=i(7309),l=i(2337),h=[r.default,s.default,o.default,n.default,a.default,p.default,c.default,d.default,{keyword:"type",schemaType:["string","array"]},{keyword:"nullable",schemaType:"boolean"},u.default,l.default];t.default=h},4781:(e,t,i)=>{"use strict";var r=i(8433),s=i(1231),o=i(5489),n=Object.prototype.toString,a=Object.prototype.hasOwnProperty,p=65279,c={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},d=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],u=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function l(e){var t,i,o;if(t=e.toString(16).toUpperCase(),e<=255)i="x",o=2;else if(e<=65535)i="u",o=4;else{if(!(e<=4294967295))throw new s("code point within a string may not be greater than 0xFFFFFFFF");i="U",o=8}return"\\"+i+r.repeat("0",o-t.length)+t}function h(e){this.schema=e.schema||o,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=r.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var i,r,s,o,n,p,c;if(null===t)return{};for(i={},s=0,o=(r=Object.keys(t)).length;s<o;s+=1)n=r[s],p=String(t[n]),"!!"===n.slice(0,2)&&(n="tag:yaml.org,2002:"+n.slice(2)),(c=e.compiledTypeMap.fallback[n])&&a.call(c.styleAliases,p)&&(p=c.styleAliases[p]),i[n]=p;return i}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.quotingType='"'===e.quotingType?2:1,this.forceQuotes=e.forceQuotes||!1,this.replacer="function"==typeof e.replacer?e.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function m(e,t){for(var i,s=r.repeat(" ",t),o=0,n=-1,a="",p=e.length;o<p;)-1===(n=e.indexOf("\n",o))?(i=e.slice(o),o=p):(i=e.slice(o,n+1),o=n+1),i.length&&"\n"!==i&&(a+=s),a+=i;return a}function f(e,t){return"\n"+r.repeat(" ",e.indent*t)}function y(e){return 32===e||9===e}function g(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&e!==p||65536<=e&&e<=1114111}function x(e){return g(e)&&e!==p&&13!==e&&10!==e}function b(e,t,i){var r=x(e),s=r&&!y(e);return(i?r:r&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e)&&35!==e&&!(58===t&&!s)||x(t)&&!y(t)&&35===e||58===t&&s}function v(e,t){var i,r=e.charCodeAt(t);return r>=55296&&r<=56319&&t+1<e.length&&(i=e.charCodeAt(t+1))>=56320&&i<=57343?1024*(r-55296)+i-56320+65536:r}function w(e){return/^\n* /.test(e)}function I(e,t,i,r,o){e.dump=function(){if(0===t.length)return 2===e.quotingType?'""':"''";if(!e.noCompatMode&&(-1!==d.indexOf(t)||u.test(t)))return 2===e.quotingType?'"'+t+'"':"'"+t+"'";var n=e.indent*Math.max(1,i),a=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-n),h=r||e.flowLevel>-1&&i>=e.flowLevel;switch(function(e,t,i,r,s,o,n,a){var c,d,u=0,l=null,h=!1,m=!1,f=-1!==r,x=-1,I=g(d=v(e,0))&&d!==p&&!y(d)&&45!==d&&63!==d&&58!==d&&44!==d&&91!==d&&93!==d&&123!==d&&125!==d&&35!==d&&38!==d&&42!==d&&33!==d&&124!==d&&61!==d&&62!==d&&39!==d&&34!==d&&37!==d&&64!==d&&96!==d&&function(e){return!y(e)&&58!==e}(v(e,e.length-1));if(t||n)for(c=0;c<e.length;u>=65536?c+=2:c++){if(!g(u=v(e,c)))return 5;I=I&&b(u,l,a),l=u}else{for(c=0;c<e.length;u>=65536?c+=2:c++){if(10===(u=v(e,c)))h=!0,f&&(m=m||c-x-1>r&&" "!==e[x+1],x=c);else if(!g(u))return 5;I=I&&b(u,l,a),l=u}m=m||f&&c-x-1>r&&" "!==e[x+1]}return h||m?i>9&&w(e)?5:n?2===o?5:2:m?4:3:!I||n||s(e)?2===o?5:2:1}(t,h,e.indent,a,(function(t){return function(e,t){var i,r;for(i=0,r=e.implicitTypes.length;i<r;i+=1)if(e.implicitTypes[i].resolve(t))return!0;return!1}(e,t)}),e.quotingType,e.forceQuotes&&!r,o)){case 1:return t;case 2:return"'"+t.replace(/'/g,"''")+"'";case 3:return"|"+k(t,e.indent)+P(m(t,n));case 4:return">"+k(t,e.indent)+P(m(function(e,t){for(var i,r,s,o=/(\n+)([^\n]*)/g,n=(s=-1!==(s=e.indexOf("\n"))?s:e.length,o.lastIndex=s,j(e.slice(0,s),t)),a="\n"===e[0]||" "===e[0];r=o.exec(e);){var p=r[1],c=r[2];i=" "===c[0],n+=p+(a||i||""===c?"":"\n")+j(c,t),a=i}return n}(t,a),n));case 5:return'"'+function(e){for(var t,i="",r=0,s=0;s<e.length;r>=65536?s+=2:s++)r=v(e,s),!(t=c[r])&&g(r)?(i+=e[s],r>=65536&&(i+=e[s+1])):i+=t||l(r);return i}(t)+'"';default:throw new s("impossible error: invalid scalar style")}}()}function k(e,t){var i=w(e)?String(t):"",r="\n"===e[e.length-1];return i+(!r||"\n"!==e[e.length-2]&&"\n"!==e?r?"":"-":"+")+"\n"}function P(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function j(e,t){if(""===e||" "===e[0])return e;for(var i,r,s=/ [^ ]/g,o=0,n=0,a=0,p="";i=s.exec(e);)(a=i.index)-o>t&&(r=n>o?n:a,p+="\n"+e.slice(o,r),o=r+1),n=a;return p+="\n",e.length-o>t&&n>o?p+=e.slice(o,n)+"\n"+e.slice(n+1):p+=e.slice(o),p.slice(1)}function A(e,t,i,r){var s,o,n,a="",p=e.tag;for(s=0,o=i.length;s<o;s+=1)n=i[s],e.replacer&&(n=e.replacer.call(i,String(s),n)),(E(e,t+1,n,!0,!0,!1,!0)||void 0===n&&E(e,t+1,null,!0,!0,!1,!0))&&(r&&""===a||(a+=f(e,t)),e.dump&&10===e.dump.charCodeAt(0)?a+="-":a+="- ",a+=e.dump);e.tag=p,e.dump=a||"[]"}function O(e,t,i){var r,o,p,c,d,u;for(p=0,c=(o=i?e.explicitTypes:e.implicitTypes).length;p<c;p+=1)if(((d=o[p]).instanceOf||d.predicate)&&(!d.instanceOf||"object"==typeof t&&t instanceof d.instanceOf)&&(!d.predicate||d.predicate(t))){if(i?d.multi&&d.representName?e.tag=d.representName(t):e.tag=d.tag:e.tag="?",d.represent){if(u=e.styleMap[d.tag]||d.defaultStyle,"[object Function]"===n.call(d.represent))r=d.represent(t,u);else{if(!a.call(d.represent,u))throw new s("!<"+d.tag+'> tag resolver accepts not "'+u+'" style');r=d.represent[u](t,u)}e.dump=r}return!0}return!1}function E(e,t,i,r,o,a,p){e.tag=null,e.dump=i,O(e,i,!1)||O(e,i,!0);var c,d=n.call(e.dump),u=r;r&&(r=e.flowLevel<0||e.flowLevel>t);var l,h,m="[object Object]"===d||"[object Array]"===d;if(m&&(h=-1!==(l=e.duplicates.indexOf(i))),(null!==e.tag&&"?"!==e.tag||h||2!==e.indent&&t>0)&&(o=!1),h&&e.usedDuplicates[l])e.dump="*ref_"+l;else{if(m&&h&&!e.usedDuplicates[l]&&(e.usedDuplicates[l]=!0),"[object Object]"===d)r&&0!==Object.keys(e.dump).length?(function(e,t,i,r){var o,n,a,p,c,d,u="",l=e.tag,h=Object.keys(i);if(!0===e.sortKeys)h.sort();else if("function"==typeof e.sortKeys)h.sort(e.sortKeys);else if(e.sortKeys)throw new s("sortKeys must be a boolean or a function");for(o=0,n=h.length;o<n;o+=1)d="",r&&""===u||(d+=f(e,t)),p=i[a=h[o]],e.replacer&&(p=e.replacer.call(i,a,p)),E(e,t+1,a,!0,!0,!0)&&((c=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?d+="?":d+="? "),d+=e.dump,c&&(d+=f(e,t)),E(e,t+1,p,!0,c)&&(e.dump&&10===e.dump.charCodeAt(0)?d+=":":d+=": ",u+=d+=e.dump));e.tag=l,e.dump=u||"{}"}(e,t,e.dump,o),h&&(e.dump="&ref_"+l+e.dump)):(function(e,t,i){var r,s,o,n,a,p="",c=e.tag,d=Object.keys(i);for(r=0,s=d.length;r<s;r+=1)a="",""!==p&&(a+=", "),e.condenseFlow&&(a+='"'),n=i[o=d[r]],e.replacer&&(n=e.replacer.call(i,o,n)),E(e,t,o,!1,!1)&&(e.dump.length>1024&&(a+="? "),a+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),E(e,t,n,!1,!1)&&(p+=a+=e.dump));e.tag=c,e.dump="{"+p+"}"}(e,t,e.dump),h&&(e.dump="&ref_"+l+" "+e.dump));else if("[object Array]"===d)r&&0!==e.dump.length?(e.noArrayIndent&&!p&&t>0?A(e,t-1,e.dump,o):A(e,t,e.dump,o),h&&(e.dump="&ref_"+l+e.dump)):(function(e,t,i){var r,s,o,n="",a=e.tag;for(r=0,s=i.length;r<s;r+=1)o=i[r],e.replacer&&(o=e.replacer.call(i,String(r),o)),(E(e,t,o,!1,!1)||void 0===o&&E(e,t,null,!1,!1))&&(""!==n&&(n+=","+(e.condenseFlow?"":" ")),n+=e.dump);e.tag=a,e.dump="["+n+"]"}(e,t,e.dump),h&&(e.dump="&ref_"+l+" "+e.dump));else{if("[object String]"!==d){if("[object Undefined]"===d)return!1;if(e.skipInvalid)return!1;throw new s("unacceptable kind of an object to dump "+d)}"?"!==e.tag&&I(e,e.dump,t,a,u)}null!==e.tag&&"?"!==e.tag&&(c=encodeURI("!"===e.tag[0]?e.tag.slice(1):e.tag).replace(/!/g,"%21"),c="!"===e.tag[0]?"!"+c:"tag:yaml.org,2002:"===c.slice(0,18)?"!!"+c.slice(18):"!<"+c+">",e.dump=c+" "+e.dump)}return!0}function S(e,t){var i,r,s=[],o=[];for(D(e,s,o),i=0,r=o.length;i<r;i+=1)t.duplicates.push(s[o[i]]);t.usedDuplicates=new Array(r)}function D(e,t,i){var r,s,o;if(null!==e&&"object"==typeof e)if(-1!==(s=t.indexOf(e)))-1===i.indexOf(s)&&i.push(s);else if(t.push(e),Array.isArray(e))for(s=0,o=e.length;s<o;s+=1)D(e[s],t,i);else for(s=0,o=(r=Object.keys(e)).length;s<o;s+=1)D(e[r[s]],t,i)}e.exports.dump=function(e,t){var i=new h(t=t||{});i.noRefs||S(e,i);var r=e;return i.replacer&&(r=i.replacer.call({"":r},"",r)),E(i,0,r,!0,!0)?i.dump+"\n":""}},4834:(e,t,i)=>{"use strict";const{HEX:r}=i(4914),s=/^(?:(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)$/u;function o(e){if(c(e,".")<3)return{host:e,isIPV4:!1};const t=e.match(s)||[],[i]=t;return i?{host:p(i,"."),isIPV4:!0}:{host:e,isIPV4:!1}}function n(e,t=!1){let i="",s=!0;for(const t of e){if(void 0===r[t])return;"0"!==t&&!0===s&&(s=!1),s||(i+=t)}return t&&0===i.length&&(i="0"),i}function a(e){if(c(e,":")<2)return{host:e,isIPV6:!1};const t=function(e){let t=0;const i={error:!1,address:"",zone:""},r=[],s=[];let o=!1,a=!1,p=!1;function c(){if(s.length){if(!1===o){const e=n(s);if(void 0===e)return i.error=!0,!1;r.push(e)}s.length=0}return!0}for(let n=0;n<e.length;n++){const d=e[n];if("["!==d&&"]"!==d)if(":"!==d)if("%"===d){if(!c())break;o=!0}else s.push(d);else{if(!0===a&&(p=!0),!c())break;if(t++,r.push(":"),t>7){i.error=!0;break}n-1>=0&&":"===e[n-1]&&(a=!0)}}return s.length&&(o?i.zone=s.join(""):p?r.push(s.join("")):r.push(n(s))),i.address=r.join(""),i}(e);if(t.error)return{host:e,isIPV6:!1};{let e=t.address,i=t.address;return t.zone&&(e+="%"+t.zone,i+="%25"+t.zone),{host:e,escapedHost:i,isIPV6:!0}}}function p(e,t){let i="",r=!0;const s=e.length;for(let o=0;o<s;o++){const n=e[o];"0"===n&&r?(o+1<=s&&e[o+1]===t||o+1===s)&&(i+=n,r=!1):(r=n===t,i+=n)}return i}function c(e,t){let i=0;for(let r=0;r<e.length;r++)e[r]===t&&i++;return i}const d=/^\.\.?\//u,u=/^\/\.(?:\/|$)/u,l=/^\/\.\.(?:\/|$)/u,h=/^\/?(?:.|\n)*?(?=\/|$)/u;e.exports={recomposeAuthority:function(e){const t=[];if(void 0!==e.userinfo&&(t.push(e.userinfo),t.push("@")),void 0!==e.host){let i=unescape(e.host);const r=o(i);if(r.isIPV4)i=r.host;else{const t=a(r.host);i=!0===t.isIPV6?`[${t.escapedHost}]`:e.host}t.push(i)}return"number"!=typeof e.port&&"string"!=typeof e.port||(t.push(":"),t.push(String(e.port))),t.length?t.join(""):void 0},normalizeComponentEncoding:function(e,t){const i=!0!==t?escape:unescape;return void 0!==e.scheme&&(e.scheme=i(e.scheme)),void 0!==e.userinfo&&(e.userinfo=i(e.userinfo)),void 0!==e.host&&(e.host=i(e.host)),void 0!==e.path&&(e.path=i(e.path)),void 0!==e.query&&(e.query=i(e.query)),void 0!==e.fragment&&(e.fragment=i(e.fragment)),e},removeDotSegments:function(e){const t=[];for(;e.length;)if(e.match(d))e=e.replace(d,"");else if(e.match(u))e=e.replace(u,"/");else if(e.match(l))e=e.replace(l,"/"),t.pop();else if("."===e||".."===e)e="";else{const i=e.match(h);if(!i)throw new Error("Unexpected dot segment condition");{const r=i[0];e=e.slice(r.length),t.push(r)}}return t.join("")},normalizeIPv4:o,normalizeIPv6:a,stringArrayToHexStripped:n}},4898:(e,t,i)=>{"use strict";var r=i(6145),s=i(8300);function o(e){return 48<=e&&e<=55}function n(e){return 48<=e&&e<=57}e.exports=new s("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,i,r=e.length,s=0,a=!1;if(!r)return!1;if("-"!==(t=e[s])&&"+"!==t||(t=e[++s]),"0"===t){if(s+1===r)return!0;if("b"===(t=e[++s])){for(s++;s<r;s++)if("_"!==(t=e[s])){if("0"!==t&&"1"!==t)return!1;a=!0}return a&&"_"!==t}if("x"===t){for(s++;s<r;s++)if("_"!==(t=e[s])){if(!(48<=(i=e.charCodeAt(s))&&i<=57||65<=i&&i<=70||97<=i&&i<=102))return!1;a=!0}return a&&"_"!==t}for(;s<r;s++)if("_"!==(t=e[s])){if(!o(e.charCodeAt(s)))return!1;a=!0}return a&&"_"!==t}if("_"===t)return!1;for(;s<r;s++)if("_"!==(t=e[s])){if(":"===t)break;if(!n(e.charCodeAt(s)))return!1;a=!0}return!(!a||"_"===t)&&(":"!==t||/^(:[0-5]?[0-9])+$/.test(e.slice(s)))},construct:function(e){var t,i,r=e,s=1,o=[];return-1!==r.indexOf("_")&&(r=r.replace(/_/g,"")),"-"!==(t=r[0])&&"+"!==t||("-"===t&&(s=-1),t=(r=r.slice(1))[0]),"0"===r?0:"0"===t?"b"===r[1]?s*parseInt(r.slice(2),2):"x"===r[1]?s*parseInt(r,16):s*parseInt(r,8):-1!==r.indexOf(":")?(r.split(":").forEach((function(e){o.unshift(parseInt(e,10))})),r=0,i=1,o.forEach((function(e){r+=e*i,i*=60})),s*r):s*parseInt(r,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!r.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0"+e.toString(8):"-0"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},4914:e=>{"use strict";e.exports={HEX:{0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15}}},4927:(e,t,i)=>{"use strict";var r=i(932),s=i(8673),o=i(9046),n=i(4355),a=i(484),p=i(2206),c=i(6845);function d(e){if("number"==typeof e)return[e,e+1];if(Array.isArray(e))return 2===e.length?e:[e[0],e[1]];const{offset:t,source:i}=e;return[t,t+("string"==typeof i?i.length:1)]}function u(e){let t="",i=!1,r=!1;for(let s=0;s<e.length;++s){const o=e[s];switch(o[0]){case"#":t+=(""===t?"":r?"\n\n":"\n")+(o.substring(1)||" "),i=!0,r=!1;break;case"%":"#"!==e[s+1]?.[0]&&(s+=1),i=!1;break;default:i||(r=!0),i=!1}}return{comment:t,afterEmptyLine:r}}t.Composer=class{constructor(e={}){this.doc=null,this.atDirectives=!1,this.prelude=[],this.errors=[],this.warnings=[],this.onError=(e,t,i,r)=>{const s=d(e);r?this.warnings.push(new n.YAMLWarning(s,t,i)):this.errors.push(new n.YAMLParseError(s,t,i))},this.directives=new s.Directives({version:e.version||"1.2"}),this.options=e}decorate(e,t){const{comment:i,afterEmptyLine:r}=u(this.prelude);if(i){const s=e.contents;if(t)e.comment=e.comment?`${e.comment}\n${i}`:i;else if(r||e.directives.docStart||!s)e.commentBefore=i;else if(a.isCollection(s)&&!s.flow&&s.items.length>0){let e=s.items[0];a.isPair(e)&&(e=e.key);const t=e.commentBefore;e.commentBefore=t?`${i}\n${t}`:i}else{const e=s.commentBefore;s.commentBefore=e?`${i}\n${e}`:i}}t?(Array.prototype.push.apply(e.errors,this.errors),Array.prototype.push.apply(e.warnings,this.warnings)):(e.errors=this.errors,e.warnings=this.warnings),this.prelude=[],this.errors=[],this.warnings=[]}streamInfo(){return{comment:u(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}*compose(e,t=!1,i=-1){for(const t of e)yield*this.next(t);yield*this.end(t,i)}*next(e){switch(r.env.LOG_STREAM&&console.dir(e,{depth:null}),e.type){case"directive":this.directives.add(e.source,((t,i,r)=>{const s=d(e);s[0]+=t,this.onError(s,"BAD_DIRECTIVE",i,r)})),this.prelude.push(e.source),this.atDirectives=!0;break;case"document":{const t=p.composeDoc(this.options,this.directives,e,this.onError);this.atDirectives&&!t.directives.docStart&&this.onError(e,"MISSING_CHAR","Missing directives-end/doc-start indicator line"),this.decorate(t,!1),this.doc&&(yield this.doc),this.doc=t,this.atDirectives=!1;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(e.source);break;case"error":{const t=e.source?`${e.message}: ${JSON.stringify(e.source)}`:e.message,i=new n.YAMLParseError(d(e),"UNEXPECTED_TOKEN",t);this.atDirectives||!this.doc?this.errors.push(i):this.doc.errors.push(i);break}case"doc-end":{if(!this.doc){const t="Unexpected doc-end without preceding document";this.errors.push(new n.YAMLParseError(d(e),"UNEXPECTED_TOKEN",t));break}this.doc.directives.docEnd=!0;const t=c.resolveEnd(e.end,e.offset+e.source.length,this.doc.options.strict,this.onError);if(this.decorate(this.doc,!0),t.comment){const e=this.doc.comment;this.doc.comment=e?`${e}\n${t.comment}`:t.comment}this.doc.range[2]=t.offset;break}default:this.errors.push(new n.YAMLParseError(d(e),"UNEXPECTED_TOKEN",`Unsupported token ${e.type}`))}}*end(e=!1,t=-1){if(this.doc)this.decorate(this.doc,!0),yield this.doc,this.doc=null;else if(e){const e=Object.assign({_directives:this.directives},this.options),i=new o.Document(void 0,e);this.atDirectives&&this.onError(t,"MISSING_CHAR","Missing directives-end indicator line"),i.range=[0,t,t],this.decorate(i,!1),yield i}}}},4988:(e,t,i)=>{"use strict";var r=i(9714),s=i(3334),o=i(1919);function n(e){return"bigint"==typeof e||Number.isInteger(e)}const a=({value:e})=>JSON.stringify(e),p=[{identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:e=>e,stringify:a},{identify:e=>null==e,createNode:()=>new r.Scalar(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:a},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^true$|^false$/,resolve:e=>"true"===e,stringify:a},{identify:n,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(e,t,{intAsBigInt:i})=>i?BigInt(e):parseInt(e,10),stringify:({value:e})=>n(e)?e.toString():JSON.stringify(e)},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:e=>parseFloat(e),stringify:a}],c={default:!0,tag:"",test:/^/,resolve:(e,t)=>(t(`Unresolved plain scalar ${JSON.stringify(e)}`),e)},d=[s.map,o.seq].concat(p,c);t.schema=d},4993:(e,t,i)=>{"use strict";var r=i(3479);e.exports=r.DEFAULT=new r({include:[i(3665)],explicit:[i(4347),i(4414),i(9311)]})},5058:(e,t,i)=>{"use strict";var r=i(8300),s=Object.prototype.hasOwnProperty,o=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,i,r,n,a,p=[],c=e;for(t=0,i=c.length;t<i;t+=1){if(r=c[t],a=!1,"[object Object]"!==o.call(r))return!1;for(n in r)if(s.call(r,n)){if(a)return!1;a=!0}if(!a)return!1;if(-1!==p.indexOf(n))return!1;p.push(n)}return!0},construct:function(e){return null!==e?e:[]}})},5082:(e,t,i)=>{"use strict";e.exports=d;var r=i(1774),s=i(1893),o=i(8543),n=/\//g,a=/~/g,p=/~1/g,c=/~0/g;function d(e,t,i){this.$ref=e,this.path=t,this.originalPath=i||t,this.value=void 0,this.circular=!1,this.indirections=0}function u(e,t){if(r.isAllowed$Ref(e.value,t)){var i=s.resolve(e.path,e.value.$ref);if(i!==e.path){var o=e.$ref.$refs._resolve(i,t);return e.indirections+=o.indirections+1,r.isExtended$Ref(e.value)?(e.value=r.dereference(e.value,o.value),!1):(e.$ref=o.$ref,e.path=o.path,e.value=o.value,!0)}e.circular=!0}}function l(e,t,i){if(!e.value||"object"!=typeof e.value)throw o.syntax('Error assigning $ref pointer "%s". \nCannot set "%s" of a non-object.',e.path,t);return"-"===t&&Array.isArray(e.value)?e.value.push(i):e.value[t]=i,i}d.prototype.resolve=function(e,t){var i=d.parse(this.path);this.value=e;for(var r=0;r<i.length;r++){u(this,t)&&(this.path=d.join(this.path,i.slice(r)));var s=i[r];if(void 0===this.value[s])throw o.syntax('Error resolving $ref pointer "%s". \nToken "%s" does not exist.',this.originalPath,s);this.value=this.value[s]}return u(this,t),this},d.prototype.set=function(e,t,i){var r,s=d.parse(this.path);if(0===s.length)return this.value=t,t;this.value=e;for(var o=0;o<s.length-1;o++)u(this,i),r=s[o],this.value&&void 0!==this.value[r]?this.value=this.value[r]:this.value=l(this,r,{});return u(this,i),l(this,r=s[s.length-1],t),e},d.parse=function(e){var t=s.getHash(e).substr(1);if(!t)return[];t=t.split("/");for(var i=0;i<t.length;i++)t[i]=decodeURIComponent(t[i].replace(p,"/").replace(c,"~"));if(""!==t[0])throw o.syntax('Invalid $ref pointer "%s". Pointers must begin with "#/"',t);return t.slice(1)},d.join=function(e,t){-1===e.indexOf("#")&&(e+="#"),t=Array.isArray(t)?t:[t];for(var i=0;i<t.length;i++){var r=t[i];e+="/"+encodeURIComponent(r.replace(a,"~0").replace(n,"~1"))}return e}},5102:e=>{"use strict";e.exports=JSON.parse('{"checkLink_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]},"click_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},"config_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"config","description":"Configuration options for Doc Detective operations.","type":"object","additionalProperties":false,"dynamicDefaults":{"configId":"uuid"},"properties":{"configId":{"description":"Identifier for the configuration.","type":"string"},"configPath":{"description":"Path to the configuration file.","type":"string","readOnly":true},"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","default":".","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"output":{"description":"Path of the directory in which to store the output of Doc Detective commands. If a file path is specified, Doc Detective attempts to honor the file name specified, but file path behavior is controlled by the configured reporters.","type":"string","default":"."},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specifications and source files.","type":"boolean","default":true},"relativePathBase":{"description":"Whether paths should be interpreted as relative to the current working directory (`cwd`) or to the file in which they\'re specified (`file`).","type":"string","enum":["cwd","file"],"default":"file"},"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]},"origin":{"description":"Default protocol and domain to use for relative URLs.","type":"string"},"beforeAny":{"description":"Path(s) to test specifications to perform before those specified by `input`. Useful for setting up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"afterAll":{"description":"Path(s) to test specifications to perform after those specified by `input`. Useful for cleaning up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on defined markup.","default":true},"logLevel":{"description":"Amount of detail to output when performing an operation.","type":"string","enum":["silent","error","warning","info","debug"],"default":"info"},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"fileTypes":{"description":"Configuration for file types and their markup detection.","default":["markdown","asciidoc","html"],"anyOf":[{"type":"array","minItems":1,"items":{"anyOf":[{"$comment":"Simple mode: Reference predefined templates by name.","title":"Predefined","type":"string","enum":["markdown","asciidoc","html"]},{"$comment":"Custom mode: Extend predefined templates or write whole new ones.","title":"Custom","type":"object","required":["extensions"],"properties":{"name":{"description":"Name of the file type.","type":"string"},"extends":{"$comment":"In development","description":"Base template to extend.","type":"string","enum":["markdown","asciidoc","html"]},"extensions":{"description":"File extensions to use with type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"inlineStatements":{"description":"Statements to include tests and steps inside the content of the file, such as within Markdown.","type":"object","properties":{"testStart":{"description":"Regular expressions that indicate the start of a test. If capture groups are used, the first capture group is used for the statement. If no capture groups are used, the entire match is used for the statement.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"testEnd":{"description":"Regular expressions that indicate that the current test is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreStart":{"description":"Regular expressions that indicates that the following content should be ignored for testing purposes.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreEnd":{"description":"Regular expressions that indicate that the ignored section of content is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"step":{"description":"Regular expressions that indicate a step in a test.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]}}},"markup":{"description":"Markup definitions for the file type.","type":"array","minItems":1,"items":{"type":"object","properties":{"name":{"description":"Name of the markup definition","type":"string"},"regex":{"description":"Regular expressions to match the markup type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"batchMatches":{"description":"If `true`, all matches are combined into a single string.","type":"boolean","default":false},"actions":{"description":"Actions to perform when the markup type is detected.","anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"type":"array","items":{"anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}]}}]}}}}}},{"title":"Executable","$comment":"Executable mode: Convert executable inputs directly into tests.","type":"object","required":["extensions"],"properties":{"extensions":{"description":"File extensions to use with type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"runShell":{"description":"`runShell` step to perform for this file type. Use $1 as a placeholder for the file path.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}]}}}]}}]},"integrations":{"description":"Options for connecting to external services.","type":"object","additionalProperties":false,"properties":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"telemetry":{"description":"Options around sending telemetry for Doc Detective usage.","type":"object","additionalProperties":false,"properties":{"send":{"description":"If `true`, sends Doc Detective telemetry.","type":"boolean","default":true},"userId":{"description":"Identifier for the organization, group, or individual running Doc Detective.","type":"string"}},"required":["send"],"default":{"send":true}},"environment":{"type":"object","description":"Environment information for the system running Doc Detective.","readOnly":true,"additionalProperties":false,"required":["platform"],"properties":{"workingDirectory":{"description":"The current working directory of the process running Doc Detective.","type":"string"},"platform":{"description":"The operating system type running Doc Detective.","type":"string","enum":["linux","mac","windows"]},"arch":{"description":"The processor architecture of the system running Doc Detective.","type":"string","enum":["arm32","arm64","x32","x64"]}}}},"components":{"schemas":{"environment":{"type":"object","description":"Environment information for the system running Doc Detective.","readOnly":true,"additionalProperties":false,"required":["platform"],"properties":{"workingDirectory":{"description":"The current working directory of the process running Doc Detective.","type":"string"},"platform":{"description":"The operating system type running Doc Detective.","type":"string","enum":["linux","mac","windows"]},"arch":{"description":"The processor architecture of the system running Doc Detective.","type":"string","enum":["arm32","arm64","x32","x64"]}}},"markupDefinition":{"type":"object","properties":{"name":{"description":"Name of the markup definition","type":"string"},"regex":{"description":"Regular expressions to match the markup type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"batchMatches":{"description":"If `true`, all matches are combined into a single string.","type":"boolean","default":false},"actions":{"description":"Actions to perform when the markup type is detected.","anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"type":"array","items":{"anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}]}}]}}},"markupActionString":{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},"inlineStatements":{"description":"Statements to include tests and steps inside the content of the file, such as within Markdown.","type":"object","properties":{"testStart":{"description":"Regular expressions that indicate the start of a test. If capture groups are used, the first capture group is used for the statement. If no capture groups are used, the entire match is used for the statement.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"testEnd":{"description":"Regular expressions that indicate that the current test is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreStart":{"description":"Regular expressions that indicates that the following content should be ignored for testing purposes.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreEnd":{"description":"Regular expressions that indicate that the ignored section of content is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"step":{"description":"Regular expressions that indicate a step in a test.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]}}},"stringOrArray":{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}}},"examples":[{},{"input":".","output":".","recursive":true,"loadVariables":".env","fileTypes":["markdown"]},{"fileTypes":[{"extends":"markdown","extensions":["md","markdown","mdx"],"inlineStatements":{"testStart":"\x3c!--\\\\s*testStart\\\\s*(.*?)\\\\s*--\x3e","testEnd":"\x3c!-- testEnd --\x3e","ignoreStart":"\x3c!-- ignoreStart --\x3e","ignoreEnd":"\x3c!-- ignoreEnd --\x3e","step":"\x3c!--\\\\s*step\\\\s*(.*?)\\\\s*--\x3e"},"markup":[{"name":"onscreenText","regex":"\\\\*\\\\*.+?\\\\*\\\\*","actions":"find"}]}]},{"fileTypes":[{"name":"Jupyter Notebooks","extensions":"ipynb","runShell":{"command":"jupyter","args":["nbconvert","--to","script","--execute","$1","--stdout"]}},{"name":"JavaScript","extensions":"js","runShell":{"command":"node $1"}},{"name":"Python","extensions":"py","runShell":{"command":"python $1"}}]},{"environment":{"platform":"windows","arch":"x64"}}]},"context_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]},"find_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]},"goTo_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]},"loadVariables_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]},"httpRequest_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]},"openApi_v3":{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},"record_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]},"resolvedTests_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"resolvedTests","description":"A collection of resolved tests ready to be performed.","type":"object","dynamicDefaults":{"resolvedTestsId":"uuid"},"properties":{"resolvedTestsId":{"type":"string","description":"Unique identifier for the resolved tests."},"config":{"$schema":"http://json-schema.org/draft-07/schema#","title":"config","description":"Configuration options for Doc Detective operations.","type":"object","additionalProperties":false,"dynamicDefaults":{"configId":"uuid"},"properties":{"configId":{"description":"Identifier for the configuration.","type":"string"},"configPath":{"description":"Path to the configuration file.","type":"string","readOnly":true},"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","default":".","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"output":{"description":"Path of the directory in which to store the output of Doc Detective commands. If a file path is specified, Doc Detective attempts to honor the file name specified, but file path behavior is controlled by the configured reporters.","type":"string","default":"."},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specifications and source files.","type":"boolean","default":true},"relativePathBase":{"description":"Whether paths should be interpreted as relative to the current working directory (`cwd`) or to the file in which they\'re specified (`file`).","type":"string","enum":["cwd","file"],"default":"file"},"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]},"origin":{"description":"Default protocol and domain to use for relative URLs.","type":"string"},"beforeAny":{"description":"Path(s) to test specifications to perform before those specified by `input`. Useful for setting up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"afterAll":{"description":"Path(s) to test specifications to perform after those specified by `input`. Useful for cleaning up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on defined markup.","default":true},"logLevel":{"description":"Amount of detail to output when performing an operation.","type":"string","enum":["silent","error","warning","info","debug"],"default":"info"},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"fileTypes":{"description":"Configuration for file types and their markup detection.","default":["markdown","asciidoc","html"],"anyOf":[{"type":"array","minItems":1,"items":{"anyOf":[{"$comment":"Simple mode: Reference predefined templates by name.","title":"Predefined","type":"string","enum":["markdown","asciidoc","html"]},{"$comment":"Custom mode: Extend predefined templates or write whole new ones.","title":"Custom","type":"object","required":["extensions"],"properties":{"name":{"description":"Name of the file type.","type":"string"},"extends":{"$comment":"In development","description":"Base template to extend.","type":"string","enum":["markdown","asciidoc","html"]},"extensions":{"description":"File extensions to use with type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"inlineStatements":{"description":"Statements to include tests and steps inside the content of the file, such as within Markdown.","type":"object","properties":{"testStart":{"description":"Regular expressions that indicate the start of a test. If capture groups are used, the first capture group is used for the statement. If no capture groups are used, the entire match is used for the statement.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"testEnd":{"description":"Regular expressions that indicate that the current test is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreStart":{"description":"Regular expressions that indicates that the following content should be ignored for testing purposes.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreEnd":{"description":"Regular expressions that indicate that the ignored section of content is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"step":{"description":"Regular expressions that indicate a step in a test.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]}}},"markup":{"description":"Markup definitions for the file type.","type":"array","minItems":1,"items":{"type":"object","properties":{"name":{"description":"Name of the markup definition","type":"string"},"regex":{"description":"Regular expressions to match the markup type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"batchMatches":{"description":"If `true`, all matches are combined into a single string.","type":"boolean","default":false},"actions":{"description":"Actions to perform when the markup type is detected.","anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"type":"array","items":{"anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}]}}]}}}}}},{"title":"Executable","$comment":"Executable mode: Convert executable inputs directly into tests.","type":"object","required":["extensions"],"properties":{"extensions":{"description":"File extensions to use with type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"runShell":{"description":"`runShell` step to perform for this file type. Use $1 as a placeholder for the file path.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}]}}}]}}]},"integrations":{"description":"Options for connecting to external services.","type":"object","additionalProperties":false,"properties":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"telemetry":{"description":"Options around sending telemetry for Doc Detective usage.","type":"object","additionalProperties":false,"properties":{"send":{"description":"If `true`, sends Doc Detective telemetry.","type":"boolean","default":true},"userId":{"description":"Identifier for the organization, group, or individual running Doc Detective.","type":"string"}},"required":["send"],"default":{"send":true}},"environment":{"type":"object","description":"Environment information for the system running Doc Detective.","readOnly":true,"additionalProperties":false,"required":["platform"],"properties":{"workingDirectory":{"description":"The current working directory of the process running Doc Detective.","type":"string"},"platform":{"description":"The operating system type running Doc Detective.","type":"string","enum":["linux","mac","windows"]},"arch":{"description":"The processor architecture of the system running Doc Detective.","type":"string","enum":["arm32","arm64","x32","x64"]}}}},"components":{"schemas":{"environment":{"type":"object","description":"Environment information for the system running Doc Detective.","readOnly":true,"additionalProperties":false,"required":["platform"],"properties":{"workingDirectory":{"description":"The current working directory of the process running Doc Detective.","type":"string"},"platform":{"description":"The operating system type running Doc Detective.","type":"string","enum":["linux","mac","windows"]},"arch":{"description":"The processor architecture of the system running Doc Detective.","type":"string","enum":["arm32","arm64","x32","x64"]}}},"markupDefinition":{"type":"object","properties":{"name":{"description":"Name of the markup definition","type":"string"},"regex":{"description":"Regular expressions to match the markup type.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"batchMatches":{"description":"If `true`, all matches are combined into a single string.","type":"boolean","default":false},"actions":{"description":"Actions to perform when the markup type is detected.","anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"type":"array","items":{"anyOf":[{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}]}}]}}},"markupActionString":{"type":"string","enum":["checkLink","click","find","goTo","httpRequest","loadVariables","record","runCode","runShell","screenshot","stopRecord","type","wait"]},"inlineStatements":{"description":"Statements to include tests and steps inside the content of the file, such as within Markdown.","type":"object","properties":{"testStart":{"description":"Regular expressions that indicate the start of a test. If capture groups are used, the first capture group is used for the statement. If no capture groups are used, the entire match is used for the statement.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"testEnd":{"description":"Regular expressions that indicate that the current test is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreStart":{"description":"Regular expressions that indicates that the following content should be ignored for testing purposes.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"ignoreEnd":{"description":"Regular expressions that indicate that the ignored section of content is complete.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]},"step":{"description":"Regular expressions that indicate a step in a test.","anyOf":[{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}]}}},"stringOrArray":{"anyOf":[{"type":"string"},{"type":"array","minItems":1,"items":{"type":"string"}}]}}},"examples":[{},{"input":".","output":".","recursive":true,"loadVariables":".env","fileTypes":["markdown"]},{"fileTypes":[{"extends":"markdown","extensions":["md","markdown","mdx"],"inlineStatements":{"testStart":"\x3c!--\\\\s*testStart\\\\s*(.*?)\\\\s*--\x3e","testEnd":"\x3c!-- testEnd --\x3e","ignoreStart":"\x3c!-- ignoreStart --\x3e","ignoreEnd":"\x3c!-- ignoreEnd --\x3e","step":"\x3c!--\\\\s*step\\\\s*(.*?)\\\\s*--\x3e"},"markup":[{"name":"onscreenText","regex":"\\\\*\\\\*.+?\\\\*\\\\*","actions":"find"}]}]},{"fileTypes":[{"name":"Jupyter Notebooks","extensions":"ipynb","runShell":{"command":"jupyter","args":["nbconvert","--to","script","--execute","$1","--stdout"]}},{"name":"JavaScript","extensions":"js","runShell":{"command":"node $1"}},{"name":"Python","extensions":"py","runShell":{"command":"python $1"}}]},{"environment":{"platform":"windows","arch":"x64"}}]},"specs":{"description":"Test specifications that were performed.","type":"array","minItems":1,"items":{"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"specification","type":"object","dynamicDefaults":{"specId":"uuid"},"properties":{"specId":{"type":"string","description":"Unique identifier for the test specification."},"description":{"type":"string","description":"Description of the test specification."},"specPath":{"type":"string","description":"Path to the test specification."},"contentPath":{"type":"string","description":"Path to the content that the specification is associated with."},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"tests":{"description":"[Tests](test) to perform.","type":"array","minItems":1,"items":{"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"test","type":"object","description":"A Doc Detective test.","properties":{"testId":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"contentPath":{"type":"string","description":"Path to the content that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex.","default":true},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"before":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"after":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}},"contexts":{"title":"Resolved contexts","type":"array","readOnly":true,"description":"Resolved contexts to run the test in. This is a resolved version of the `runOn` property. It is not user-defined and should not be used in test specifications.","items":{"type":"object","properties":{"platform":{"type":"string","description":"Platform to run the test on. This is a resolved version of the `platforms` property."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}}}}}},"dynamicDefaults":{"testId":"uuid"},"anyOf":[{"required":["steps"]},{"required":["contexts"]}],"additionalProperties":false,"components":{"schemas":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"examples":[{"steps":[{"checkLink":"https://www.duckduckgo.com"}]},{"steps":[{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","click":true,"type":{"keys":["shorthair cats","$ENTER$"]}}}]},{"testId":"Do all the things! - Test","description":"This test includes every property across all actions.","before":"setup.json","after":"cleanup.json","runOn":[{"platforms":["linux"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true},{"testId":"c61b02e8-7485-44d3-8065-f873673379c6","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","validateAgainstSchema":"both","useExample":"none","exampleKey":"","name":"Acme"}],"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}],"detectSteps":true}]}]}}},"required":["tests"],"examples":[{"tests":[{"steps":[{"checkLink":{"url":"https://www.duckduckgo.com"}}]}]},{"specId":"Do all the things! - Spec","runOn":[{"platforms":["windows","mac"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"tests":[{"testId":"Do all the things! - Test","description":"This test includes nearly every property across all actions.","runOn":[{"platforms":"linux","browsers":"firefox"}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true}]},{"specId":"Make a request from an OpenAPI definition","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","name":"Acme"}],"tests":[{"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}]}]}]}]}}},"required":["specs"],"examples":[{"config":{"input":["/home/hawkeyexl/Workspaces/resolver/dev/doc-content-yaml.md"],"logLevel":"debug","output":".","recursive":true,"relativePathBase":"file","detectSteps":true,"fileTypes":[{"name":"markdown","extensions":["md","markdown","mdx"],"inlineStatements":{"testStart":["{\\\\/\\\\*\\\\s*test\\\\s+?([\\\\s\\\\S]*?)\\\\s*\\\\*\\\\/}","\x3c!--\\\\s*test\\\\s*([\\\\s\\\\S]*?)\\\\s*--\x3e","\\\\[comment\\\\]:\\\\s+#\\\\s+\\\\(test\\\\s*(.*?)\\\\s*\\\\)","\\\\[comment\\\\]:\\\\s+#\\\\s+\\\\(test start\\\\s*(.*?)\\\\s*\\\\)"],"testEnd":["{\\\\/\\\\*\\\\s*test end\\\\s*\\\\*\\\\/}","\x3c!--\\\\s*test end\\\\s*([\\\\s\\\\S]*?)\\\\s*--\x3e","\\\\[comment\\\\]:\\\\s+#\\\\s+\\\\(test end\\\\)"],"ignoreStart":["{\\\\/\\\\*\\\\s*test ignore start\\\\s*\\\\*\\\\/}","\x3c!--\\\\s*test ignore start\\\\s*--\x3e"],"ignoreEnd":["{\\\\/\\\\*\\\\s*test ignore end\\\\s*\\\\*\\\\/}","\x3c!--\\\\s*test ignore end\\\\s*--\x3e"],"step":["{\\\\/\\\\*\\\\s*step\\\\s+?([\\\\s\\\\S]*?)\\\\s*\\\\*\\\\/}","\x3c!--\\\\s*step\\\\s*([\\\\s\\\\S]*?)\\\\s*--\x3e","\\\\[comment\\\\]:\\\\s+#\\\\s+\\\\(step\\\\s*(.*?)\\\\s*\\\\)"]},"markup":[{"name":"checkHyperlink","regex":["(?<!\\\\!)\\\\[[^\\\\]]+\\\\]\\\\(\\\\s*(https?:\\\\/\\\\/[^\\\\s)]+)(?:\\\\s+\\"[^\\"]*\\")?\\\\s*\\\\)"],"actions":["checkLink"]},{"name":"clickOnscreenText","regex":["\\\\b(?:[Cc]lick|[Tt]ap|[Ll]eft-click|[Cc]hoose|[Ss]elect|[Cc]heck)\\\\b\\\\s+\\\\*\\\\*((?:(?!\\\\*\\\\*).)+)\\\\*\\\\*"],"actions":["click"]},{"name":"findOnscreenText","regex":["\\\\*\\\\*((?:(?!\\\\*\\\\*).)+)\\\\*\\\\*"],"actions":["find"]},{"name":"goToUrl","regex":["\\\\b(?:[Gg]o\\\\s+to|[Oo]pen|[Nn]avigate\\\\s+to|[Vv]isit|[Aa]ccess|[Pp]roceed\\\\s+to|[Ll]aunch)\\\\b\\\\s+\\\\[[^\\\\]]+\\\\]\\\\(\\\\s*(https?:\\\\/\\\\/[^\\\\s)]+)(?:\\\\s+\\"[^\\"]*\\")?\\\\s*\\\\)"],"actions":["goTo"]},{"name":"screenshotImage","regex":["!\\\\[[^\\\\]]*\\\\]\\\\(\\\\s*([^\\\\s)]+)(?:\\\\s+\\"[^\\"]*\\")?\\\\s*\\\\)\\\\s*\\\\{(?=[^}]*\\\\.screenshot)[^}]*\\\\}"],"actions":["screenshot"]},{"name":"typeText","regex":["\\\\b(?:press|enter|type)\\\\b\\\\s+\\"([^\\"]+)\\""],"actions":["type"]}]},{"name":"asciidoc","extensions":["adoc","asciidoc","asc"],"inlineStatements":{"testStart":["\\\\/\\\\/\\\\s+\\\\(\\\\s*test\\\\s+([\\\\s\\\\S]*?)\\\\s*\\\\)"],"testEnd":["\\\\/\\\\/\\\\s+\\\\(\\\\s*test end\\\\s*\\\\)"],"ignoreStart":["\\\\/\\\\/\\\\s+\\\\(\\\\s*test ignore start\\\\s*\\\\)"],"ignoreEnd":["\\\\/\\\\/\\\\s+\\\\(\\\\s*test ignore end\\\\s*\\\\)"],"step":["\\\\/\\\\/\\\\s+\\\\(\\\\s*step\\\\s+([\\\\s\\\\S]*?)\\\\s*\\\\)"]},"markup":[]},{"name":"html","extensions":["html","htm"],"inlineStatements":{"testStart":["\x3c!--\\\\s*test\\\\s+?([\\\\s\\\\S]*?)\\\\s*--\x3e"],"testEnd":["\x3c!--\\\\s*test end\\\\s*([\\\\s\\\\S]*?)\\\\s*--\x3e"],"ignoreStart":["\x3c!--\\\\s*test ignore start\\\\s*--\x3e"],"ignoreEnd":["\x3c!--\\\\s*test ignore end\\\\s*--\x3e"],"step":["\x3c!--\\\\s*step\\\\s+?([\\\\s\\\\S]*?)\\\\s*--\x3e"]},"markup":[]}],"telemetry":{"send":true},"configId":"3e467e5d-27cb-41f3-800f-aeb3c20dcb4c","environment":{"arch":"x64","platform":"linux","workingDirectory":"/home/hawkeyexl/Workspaces/resolver"}},"specs":[{"specId":"cc656bba-132f-4f0f-b093-2cfbdd784f69","contentPath":"/home/hawkeyexl/Workspaces/resolver/dev/doc-content-yaml.md","tests":[{"testId":"doc-detective-docs","detectSteps":false,"runOn":[],"openApi":[],"contexts":[{"steps":[{"checkLink":"https://doc-detective.com"},{"checkLink":"https://doc-detective.com/docs/get-started/intro"},{"goTo":"https://doc-detective.com/docs/get-started/actions/type"},{"find":"Special keys"},{"screenshot":"reference.png"}],"contextId":"eec1d123-7dfd-4362-b41a-942f36e0da5a"}]}],"runOn":[],"openApi":[]}]}]},"report_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"report","type":"object","dynamicDefaults":{"reportId":"uuid"},"properties":{"reportId":{"type":"string","description":"Unique identifier for the test specification."},"specs":{"description":"Test specifications that were performed.","type":"array","minItems":1,"items":{"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"specification","type":"object","dynamicDefaults":{"specId":"uuid"},"properties":{"specId":{"type":"string","description":"Unique identifier for the test specification."},"description":{"type":"string","description":"Description of the test specification."},"specPath":{"type":"string","description":"Path to the test specification."},"contentPath":{"type":"string","description":"Path to the content that the specification is associated with."},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"tests":{"description":"[Tests](test) to perform.","type":"array","minItems":1,"items":{"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"test","type":"object","description":"A Doc Detective test.","properties":{"testId":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"contentPath":{"type":"string","description":"Path to the content that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex.","default":true},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"before":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"after":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}},"contexts":{"title":"Resolved contexts","type":"array","readOnly":true,"description":"Resolved contexts to run the test in. This is a resolved version of the `runOn` property. It is not user-defined and should not be used in test specifications.","items":{"type":"object","properties":{"platform":{"type":"string","description":"Platform to run the test on. This is a resolved version of the `platforms` property."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}}}}}},"dynamicDefaults":{"testId":"uuid"},"anyOf":[{"required":["steps"]},{"required":["contexts"]}],"additionalProperties":false,"components":{"schemas":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"examples":[{"steps":[{"checkLink":"https://www.duckduckgo.com"}]},{"steps":[{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","click":true,"type":{"keys":["shorthair cats","$ENTER$"]}}}]},{"testId":"Do all the things! - Test","description":"This test includes every property across all actions.","before":"setup.json","after":"cleanup.json","runOn":[{"platforms":["linux"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true},{"testId":"c61b02e8-7485-44d3-8065-f873673379c6","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","validateAgainstSchema":"both","useExample":"none","exampleKey":"","name":"Acme"}],"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}],"detectSteps":true}]}]}}},"required":["tests"],"examples":[{"tests":[{"steps":[{"checkLink":{"url":"https://www.duckduckgo.com"}}]}]},{"specId":"Do all the things! - Spec","runOn":[{"platforms":["windows","mac"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"tests":[{"testId":"Do all the things! - Test","description":"This test includes nearly every property across all actions.","runOn":[{"platforms":"linux","browsers":"firefox"}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true}]},{"specId":"Make a request from an OpenAPI definition","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","name":"Acme"}],"tests":[{"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}]}]}]}]}}},"required":["specs"],"examples":[{"specs":[{"tests":[{"steps":[{"checkLink":{"url":"https://www.duckduckgo.com"}}]}]}]},{"specs":[{"specId":"Do all the things! - Spec","runOn":[{"platforms":["windows","mac"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"tests":[{"testId":"Do all the things! - Test","description":"This test includes nearly every property across all actions.","runOn":[{"platforms":"linux","browsers":"firefox"}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true}]}]},{"specs":[{"specId":"Make a request from an OpenAPI definition","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","name":"Acme"}],"tests":[{"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}]}]}]}]},"runCode_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]},"runShell_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]},"screenshot_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]},"spec_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"specification","type":"object","dynamicDefaults":{"specId":"uuid"},"properties":{"specId":{"type":"string","description":"Unique identifier for the test specification."},"description":{"type":"string","description":"Description of the test specification."},"specPath":{"type":"string","description":"Path to the test specification."},"contentPath":{"type":"string","description":"Path to the content that the specification is associated with."},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"tests":{"description":"[Tests](test) to perform.","type":"array","minItems":1,"items":{"anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"test","type":"object","description":"A Doc Detective test.","properties":{"testId":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"contentPath":{"type":"string","description":"Path to the content that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex.","default":true},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"before":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"after":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}},"contexts":{"title":"Resolved contexts","type":"array","readOnly":true,"description":"Resolved contexts to run the test in. This is a resolved version of the `runOn` property. It is not user-defined and should not be used in test specifications.","items":{"type":"object","properties":{"platform":{"type":"string","description":"Platform to run the test on. This is a resolved version of the `platforms` property."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}}}}}},"dynamicDefaults":{"testId":"uuid"},"anyOf":[{"required":["steps"]},{"required":["contexts"]}],"additionalProperties":false,"components":{"schemas":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"examples":[{"steps":[{"checkLink":"https://www.duckduckgo.com"}]},{"steps":[{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","click":true,"type":{"keys":["shorthair cats","$ENTER$"]}}}]},{"testId":"Do all the things! - Test","description":"This test includes every property across all actions.","before":"setup.json","after":"cleanup.json","runOn":[{"platforms":["linux"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true},{"testId":"c61b02e8-7485-44d3-8065-f873673379c6","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","validateAgainstSchema":"both","useExample":"none","exampleKey":"","name":"Acme"}],"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}],"detectSteps":true}]}]}}},"required":["tests"],"examples":[{"tests":[{"steps":[{"checkLink":{"url":"https://www.duckduckgo.com"}}]}]},{"specId":"Do all the things! - Spec","runOn":[{"platforms":["windows","mac"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"tests":[{"testId":"Do all the things! - Test","description":"This test includes nearly every property across all actions.","runOn":[{"platforms":"linux","browsers":"firefox"}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true}]},{"specId":"Make a request from an OpenAPI definition","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","name":"Acme"}],"tests":[{"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}]}]}]},"step_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]},"stopRecord_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]},"test_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"test","type":"object","description":"A Doc Detective test.","properties":{"testId":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"contentPath":{"type":"string","description":"Path to the content that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex.","default":true},"runOn":{"type":"array","description":"Contexts to run the test in. Overrides contexts defined at the config and spec levels.","items":{"oneOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"context","type":"object","description":"A context in which to perform tests. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For example, if a browser isn\'t specified but is required by steps in the test, Doc Detective will search for and use a supported browser available in the current environment.","additionalProperties":false,"dynamicDefaults":{"contextId":"uuid"},"properties":{"contextId":{"type":"string","description":"Unique identifier for the context."},"platforms":{"description":"Platforms to run tests on.","anyOf":[{"type":"string","enum":["linux","mac","windows"]},{"type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}]},"browsers":{"description":"Browsers to run tests on.","anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},{"type":"array","items":{"anyOf":[{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}]}}]}},"components":{"schemas":{"platform":{"type":"string","enum":["linux","mac","windows"]},"browserName":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}}}},"examples":[{"platforms":"linux","browsers":"chrome"},{"platforms":["windows","mac","linux"],"browsers":["chrome","firefox","webkit"]},{"browsers":{"name":"chrome","headless":true}},{"browsers":[{"name":"chrome","headless":true},{"name":"firefox"}]},{"platforms":["mac","linux"],"browsers":{"name":"chrome","headless":true}},{"platforms":["windows","mac","linux"],"browsers":[{"name":"chrome","headless":true,"window":{"width":1920,"height":1080},"viewport":{"width":1600,"height":900}},{"name":"firefox","window":{"width":1366,"height":768}},{"name":"webkit","headless":false,"viewport":{"width":1440,"height":900}}]},{"platforms":"mac","browsers":[{"name":"safari","window":{"width":1280,"height":800}}]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"before":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"after":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}},"contexts":{"title":"Resolved contexts","type":"array","readOnly":true,"description":"Resolved contexts to run the test in. This is a resolved version of the `runOn` property. It is not user-defined and should not be used in test specifications.","items":{"type":"object","properties":{"platform":{"type":"string","description":"Platform to run the test on. This is a resolved version of the `platforms` property."},"browser":{"type":"object","description":"Browser configuration.","required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the browser.","enum":["chrome","firefox","safari","webkit"],"$comment":"`safari` is just a shortcut for `webkit`. Included for visibility and to reduce questions."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode.","default":true},"window":{"type":"object","description":"Browser dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the browser window in pixels."},"height":{"type":"integer","description":"Height of the browser window in pixels."}}},"viewport":{"type":"object","description":"Viewport dimensions.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the viewport in pixels."},"height":{"type":"integer","description":"Height of the viewport in pixels."}}}}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}},"steps":{"description":"Steps to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails. By default, if a step fails, the test stops and the remaining steps are not executed.","type":"array","minItems":1,"items":{"$schema":"http://json-schema.org/draft-07/schema#","title":"step","description":"A step in a test.","type":"object","components":{"schemas":{"common":{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},"anyOf":[{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["checkLink"],"properties":{"checkLink":{"$schema":"http://json-schema.org/draft-07/schema#","title":"checkLink","anyOf":[{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}],"components":{"schemas":{"string":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"string","pattern":"(^(http://|https://|\\\\/).*|\\\\$[A-Za-z0-9_]+$)","transform":["trim"]},"object":{"description":"Check if an HTTP or HTTPS URL returns an acceptable status code from a GET request.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to check. Can be a full URL or a path. If a path is provided, `origin` must be specified.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","anyOf":[{"type":"integer"},{"type":"array","items":{"oneOf":[{"type":"integer"}]}}],"default":[200,301,302,307,308]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com","statusCodes":200},{"url":"/search","origin":"www.google.com","statusCodes":[200]}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["click"],"properties":{"click":{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["find"],"properties":{"find":{"$schema":"http://json-schema.org/draft-07/schema#","title":"find","description":"Find an element based on display text or a selector, then optionally interact with it.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"object":{"title":"Find element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"additionalProperties":false,"properties":{"elementText":{"type":"string","description":"Display text of the element to find. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to find. If combined with `elementText`, the element must match both the text and the selector."},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view.","type":"boolean","default":true},"click":{"description":"Click the element.","anyOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"click","description":"Click or tap an element.","anyOf":[{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}},{"type":"boolean"}],"components":{"schemas":{"string":{"title":"Find element (simple)","type":"string","description":"Display text or selector of the element to find."},"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"object":{"title":"Click element (detailed)","type":"object","anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]},"elementText":{"type":"string","description":"Display text of the element to click. If combined with `selector`, the element must match both the text and the selector."},"selector":{"type":"string","description":"Selector of the element to click. If combined with `elementText`, the element must match both the text and the selector."}}}}},"examples":[true,"right",{"button":"left","elementText":"Element text"},{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}]},{"type":"object","properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"type":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`type`](type). To type in the element, make the element active with the `click` parameter.","allOf":[{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},{"not":{"type":"object","required":["selector","elementText"]}}]}}}}},"examples":["Find me!",{"selector":"[title=Search]"},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"},{"selector":"[title=Search]","click":{"button":"right"}},{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["goTo"],"properties":{"goTo":{"$schema":"http://json-schema.org/draft-07/schema#","title":"goTo","anyOf":[{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}],"components":{"schemas":{"string":{"description":"Navigate to an HTTP or HTTPS URL. Can be a full URL or a path. If a path is provided, navigates relative to the current URL, if any.","type":"string","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"description":"Navigate to an HTTP or HTTPS URL.","type":"object","additionalProperties":false,"required":["url"],"properties":{"url":{"type":"string","description":"URL to navigate to. Can be a full URL or a path. If a path is provided and `origin` is specified, prepends `origin` to `url`. If a path is provided but `origin` isn\'t specified, attempts to navigate relative to the current URL, if any.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}}}}},"examples":["https://www.google.com","/search",{"url":"https://www.google.com"},{"url":"/search","origin":"www.google.com"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["httpRequest"],"properties":{"httpRequest":{"$schema":"http://json-schema.org/draft-07/schema#","title":"httpRequest","description":"Perform a generic HTTP request, for example to an API.","anyOf":[{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}],"components":{"schemas":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","anyOf":[{"required":["url"]},{"required":["openApi"]}],"additionalProperties":false,"properties":{"url":{"title":"URL","type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"anyOf":[{"allOf":[{"type":"string","description":"ID of the operation to use for the request."},{"title":"Operation ID","description":"Operation ID from the OpenAPI schema. Only valid if the OpenAPI description path is specified elsewhere and the operation ID is unique among all specified OpenAPI descriptions."}]},{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","required":["operationId"]}]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"request":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"parameters":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"body":{"description":"JSON object to include as the body of the HTTP request.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"response":{"type":"object","additionalProperties":false,"properties":{"headers":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"body":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","anyOf":[{"type":"object","additionalProperties":true,"properties":{}},{"type":"array","items":{}},{"type":"string"}],"default":{}}}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in the response body.","default":true},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"}}}}},"examples":["https://reqres.in/api/users",{"url":"https://reqres.in/api/users"},{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]},{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]},{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"},{"openApi":"getUserById"},{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runShell"],"properties":{"runShell":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runShell","description":"Perform a native shell command.","anyOf":[{"type":"string","transform":["trim"]},{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"string":{"type":"string","transform":["trim"]},"object":{"type":"object","required":["command"],"additionalProperties":false,"properties":{"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s stdout or stderr. If the expected content can\'t be found in the command\'s stdout or stderr, the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":["docker run hello-world",{"command":"echo","args":["$USER"]},{"command":"echo","args":["hello-world"]},{"command":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"command":"false","exitCodes":[1]},{"command":"echo","args":["setup"],"exitCodes":[0],"stdio":"/.*?/"},{"command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Docker!","path":"docker-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["runCode"],"properties":{"runCode":{"$schema":"http://json-schema.org/draft-07/schema#","title":"runCode","description":"Assemble and run code.","anyOf":[{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}],"components":{"schemas":{"object":{"type":"object","required":["code","language"],"properties":{"language":{"type":"string","description":"Language of the code to run.","enum":["python","bash","javascript"]},"code":{"description":"Code to run.","type":"string"},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"stdio":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"path":{"type":"string","description":"File path to save the command\'s output, relative to `directory`."},"directory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `path`, this value is ignored.","default":0,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing output at `path` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000}}}}},"examples":[{"language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"stdio":"Hello from Docker!"},{"language":"javascript","code":"return false","exitCodes":[1]},{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["type"],"properties":{"type":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["screenshot"],"properties":{"screenshot":{"$schema":"http://json-schema.org/draft-07/schema#","title":"screenshot","description":"Takes a screenshot in PNG format.","anyOf":[{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},{"type":"boolean"}],"components":{"schemas":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","additionalProperties":false,"properties":{"path":{"description":"File path of the PNG file. Accepts absolute paths. If not specified, the file name is the ID of the step.","type":"string","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the existing screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":0.05,"minimum":0,"maximum":1},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `aboveVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","aboveVariation"],"default":"aboveVariation"},"crop":{"anyOf":[{"title":"Crop by element","type":"string","description":"Display text or selector of the element to screenshot."},{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}}]}}},"crop_element":{"title":"Crop by element (detailed)","type":"object","description":"Crop the screenshot to a specific element.","additionalProperties":false,"anyOf":[{"required":["selector"]},{"required":["elementText"]}],"properties":{"elementText":{"type":"string","description":"Display text of the element to screenshot."},"selector":{"type":"string","description":"Selector of the element to screenshot."},"padding":{"anyOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}}},"padding":{"type":"object","additionalProperties":false,"properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}}},"examples":[true,"image.png","static/images/image.png","/User/manny/projects/doc-detective/static/images/image.png",{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"},{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["record"],"properties":{"record":{"$schema":"http://json-schema.org/draft-07/schema#","title":"record","description":"Start recording the current browser viewport. Must be followed by a `stopRecord` step. Only runs in Chrome browsers when they are visible. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","anyOf":[{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"object":{"type":"object","properties":{"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"directory":{"type":"string","description":"Directory of the file. If the directory doesn\'t exist, creates the directory.","transform":["trim"]},"overwrite":{"type":"string","description":"If `true`, overwrites the existing recording at `path` if it exists.","enum":["true","false"]}}}}},"examples":[true,"results.mp4",{"path":"results.mp4","directory":"static/media","overwrite":"true"}]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"type":"object","required":["stopRecord"],"properties":{"stopRecord":{"$schema":"http://json-schema.org/draft-07/schema#","title":"stopRecord","description":"Stop the current recording.","anyOf":[{"type":"boolean","nullable":true}],"examples":[true]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["loadVariables"],"properties":{"loadVariables":{"$schema":"http://json-schema.org/draft-07/schema#","title":"loadVariables","type":"string","description":"Load environment variables from the specified `.env` file.","examples":[".env"]}}}]},{"allOf":[{"type":"object","dynamicDefaults":{"stepId":"uuid"},"properties":{"stepId":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}},"variables":{"type":"object","description":"Environment variables to set from user-defined expressions.","default":{},"patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}}}}},{"required":["wait"],"properties":{"wait":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]}}}]}],"examples":[{"stepId":"uuid","description":"Description of the step.","checkLink":"https://www.google.com","outputs":{"outputKey":"outputValue"},"variables":{"variableKey":"variableValue"}},{"checkLink":"https://www.google.com"},{"stepId":"path-only","checkLink":"/search"},{"stepId":"status-code","checkLink":{"url":"https://www.google.com","statusCodes":[200]}},{"goTo":{"url":"https://www.google.com"}},{"goTo":"https://www.google.com"},{"wait":5000},{"runCode":{"language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"stdio":"Hello from Python!","path":"python-output.txt","directory":"output","maxVariation":0.1,"overwrite":"aboveVariation"}},{"stopRecord":true},{"screenshot":true},{"screenshot":"image.png"},{"screenshot":"static/images/image.png"},{"screenshot":"/User/manny/projects/doc-detective/static/images/image.png"},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":"#elementToScreenshot"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation"}},{"screenshot":{"path":"image.png","directory":"static/images","maxVariation":0.1,"overwrite":"aboveVariation","crop":{"selector":"#elementToScreenshot","elementText":"Element text","padding":{"top":0,"right":0,"bottom":0,"left":0}}}},{"record":true},{"record":"video.mp4"},{"record":"static/media/video.mp4"},{"record":"/User/manny/projects/doc-detective/static/media/video.mp4"},{"record":{"path":"video.mp4","directory":"static/media","overwrite":true}},{"loadVariables":"variables.env"},{"find":"Find me!"},{"find":{"selector":"[title=Search]"}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":"shorthair cat"}},{"find":{"selector":"[title=Search]","click":{"button":"right"}}},{"find":{"selector":"[title=Search]","timeout":10000,"elementText":"Search","moveTo":true,"click":true,"type":{"keys":["shorthair cat"],"inputDelay":100}}},{"click":true},{"click":"right"},{"click":{"button":"left","elementText":"Element text"}},{"click":{"selector":"#elementToScreenshot","elementText":"Element text","button":"middle"}},{"httpRequest":"https://reqres.in/api/users"},{"httpRequest":{"url":"https://reqres.in/api/users"}},{"httpRequest":{"url":"https://reqres.in/api/users/2","method":"put","request":{"body":{"name":"morpheus","job":"zion resident"}}}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201]}},{"httpRequest":{"url":"https://www.api-server.com","method":"post","timeout":30000,"request":{"body":{"field":"value"},"headers":{"header":"value"},"parameters":{"param":"value"}},"response":{"body":{"field":"value"},"headers":{"header":"value"}},"statusCodes":[200]}},{"httpRequest":{"url":"https://reqres.in/api/users","method":"post","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"path":"response.json","directory":"media","maxVariation":0.05,"overwrite":"aboveVariation"}},{"httpRequest":{"openApi":"getUserById"}},{"httpRequest":{"openApi":{"name":"Reqres","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"request":{"parameters":{"id":123}}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}}},{"httpRequest":{"openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","headers":{"Authorization":"Bearer $TOKEN"}}}}]}}}}}},"dynamicDefaults":{"testId":"uuid"},"anyOf":[{"required":["steps"]},{"required":["contexts"]}],"additionalProperties":false,"components":{"schemas":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI description and configuration.","additionalProperties":false,"anyOf":[{"required":["descriptionPath"]},{"required":["operationId"]}],"properties":{"name":{"type":"string","description":"Name of the OpenAPI description, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."},"definition":{"type":"object","readOnly":true,"description":"OpenAPI definition object loaded from the `descriptionPath`. This is a resolved version of the OpenAPI description and should not be user-defined.","additionalProperties":true},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI description."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI description. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI description as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI description as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI description. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"headers":{"type":"object","description":"Request headers to add to requests. For example, to set `Authorization` headers for all requests from the specified OpenAPI document. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"components":{"schemas":{"operationId":{"type":"string","description":"ID of the operation to use for the request."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI description."}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"},{"name":"Reqres","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none"},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true},{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both","exampleKey":"example1","statusCode":201,"validateAgainstSchema":"none","mockResponse":true,"headers":{"Authorization":"Bearer 12345"}}]},{"type":"object","not":{"required":["operationId"]},"required":["name","descriptionPath"]}]}}}},"examples":[{"steps":[{"checkLink":"https://www.duckduckgo.com"}]},{"steps":[{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","click":true,"type":{"keys":["shorthair cats","$ENTER$"]}}}]},{"testId":"Do all the things! - Test","description":"This test includes every property across all actions.","before":"setup.json","after":"cleanup.json","runOn":[{"platforms":["linux"],"browsers":{"name":"firefox","window":{},"viewport":{}}}],"steps":[{"loadVariables":".env"},{"runShell":{"command":"echo","args":["$USER"],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"checkLink":{"url":"https://www.duckduckgo.com"}},{"httpRequest":{"method":"post","url":"https://reqres.in/api/users","request":{"body":{"name":"morpheus","job":"leader"}},"response":{"body":{"name":"morpheus","job":"leader"}},"statusCodes":[200,201],"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}},{"goTo":{"url":"https://www.duckduckgo.com"}},{"find":{"selector":"[title=Search]","elementText":"Search","timeout":10000,"moveTo":true,"click":true,"type":{"keys":["shorthair cat"]}},"variables":{}},{"type":{"keys":["$ENTER$"]}},{"screenshot":{"maxVariation":0,"overwrite":"aboveVariation"}}],"detectSteps":true},{"testId":"c61b02e8-7485-44d3-8065-f873673379c6","openApi":[{"descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","validateAgainstSchema":"both","useExample":"none","exampleKey":"","name":"Acme"}],"steps":[{"httpRequest":{"openApi":{"operationId":"getUserById","validateAgainstSchema":"both","useExample":"none","exampleKey":""},"request":{"parameters":{"id":123}},"response":{},"maxVariation":0,"overwrite":"aboveVariation"},"variables":{}}],"detectSteps":true}]},"type_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"typeKeys","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s keyword. For example, to type the Escape key, enter `$ESCAPE$`.","anyOf":[{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}],"components":{"schemas":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"object":{"type":"object","properties":{"keys":{"description":"Sequence of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"inputDelay":{"type":"number","description":"Delay in milliseconds between each key press during a recording","default":100},"selector":{"type":"string","description":"Selector for the element to type into. If not specified, the typing occurs in the active element."}},"required":["keys"],"additionalProperties":false}}},"examples":["kittens",["$ENTER$"],["kittens","$ENTER$"],{"keys":"kittens"},{"keys":["$ENTER$"]},{"keys":["kittens","$ENTER$"],"inputDelay":500}]},"wait_v3":{"$schema":"http://json-schema.org/draft-07/schema#","title":"wait","description":"Pause (in milliseconds) before performing the next action.","default":5000,"anyOf":[{"type":"number"},{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]},{"type":"boolean"}],"components":{"schemas":{"string":{"type":"string","pattern":"(\\\\$[A-Za-z0-9_]+)","transform":["trim"]}}},"examples":[5000,"$WAIT_DURATION",true]},"checkLink_v2":{"title":"checkLink","type":"object","description":"Check if a URL returns an acceptable status code from a GET request.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"checkLink","description":"Action to perform."},"url":{"type":"string","description":"URL to check.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201,202]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"checkLink","url":"https://www.google.com"},{"action":"checkLink","url":"https://www.google.com","statusCodes":[200]},{"action":"checkLink","url":"/search","origin":"www.google.com","statusCodes":[200]}]},"config_v2":{"title":"config","description":"Configuration options for Doc Detective operations.","type":"object","additionalProperties":false,"properties":{"defaultCommand":{"description":"Default command to run when no command is specified.","type":"string","enum":["runTests","runCoverage"]},"input":{"default":".","description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"output":{"default":".","description":"Path of the of the file or directory in which to store the output of Doc Detective commands. If a file path is specified, the output is written to that file. If a file of that name already exists, Doc Detective creates appends an integer to the result file name. If a directory path is specified, the output file name is dependent on the command being run.","type":"string"},"recursive":{"default":true,"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specificaions and source files.","type":"boolean"},"relativePathBase":{"description":"Whether paths should be interpreted as relative to the current working directory (`cwd`) or to the file in which they\'re specified (`file`).","type":"string","enum":["cwd","file"],"default":"cwd"},"envVariables":{"description":"Path to a `.env` file to load before performing a Doc Detective operation.","type":"string"},"runTests":{"type":"object","additionalProperties":false,"description":"Options for running tests. When running tests, values set here override general configuration options.","properties":{"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"output":{"description":"Path of the of the file or directory in which to store the output of Doc Detective commands. If a file path is specified, the output is written to that file. If a file of that name already exists, Doc Detective creates appends an integer to the result file name. If a directory path is specified, the output file name is dependent on the command being run.","type":"string","default":"."},"setup":{"description":"Path(s) to test specifications to perform before those specified by `input`. Useful for setting up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"cleanup":{"description":"Path(s) to test specifications to perform after those specified by `input`. Useful for cleaning up testing environments.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specificaions and source files.","type":"boolean"},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex.","default":false},"mediaDirectory":{"description":"DEPRECATED.","type":"string","default":"."},"downloadDirectory":{"description":"Path of the directory in which to store downloaded files.","type":"string","default":"."},"contexts":{"type":"array","description":"Application/platform sets to run tests in. If no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it.","items":{"oneOf":[{"title":"context","type":"object","description":"An application and supported platforms.\\n\\nIf no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For browsers, context priority is Firefox > Chrome > Chromium.","properties":{"app":{"type":"object","description":"The application to run.","additionalProperties":false,"required":["name"],"properties":{"name":{"type":"string","description":"Name of the application.","enum":["chrome","firefox","safari","edge"]},"path":{"type":"string","description":"Absolute path or command for the application. If not specified, defaults to typical install paths per platform. If specified but the path is invalid, the context is skipped."},"options":{"type":"object","description":"Options to pass to the app. Only works when `name` is `firefox` or `chrome`.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the window in pixels."},"height":{"type":"integer","description":"Height of the window in pixels."},"viewport_height":{"type":"integer","description":"Height of the viewport in pixels. Overrides `height`."},"viewport_width":{"type":"integer","description":"Width of the viewport in pixels. Overrides `width`."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode. Not supported by Safari."},"driverPath":{"type":"string","description":"Path to the browser driver. If not specified, defaults to internally managed dependencies."}}}}},"platforms":{"description":"Supported platforms for the application.","type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}},"required":["app","platforms"],"additionalProperties":false,"examples":[{"app":{"name":"chrome"},"platforms":["linux"]},{"app":{"name":"chrome","options":{"viewport_width":800,"viewport_height":600}},"platforms":["linux"]},{"app":{"name":"firefox","options":{"width":800,"height":600,"headless":false,"driverPath":"/usr/bin/geckodriver"}},"platforms":["linux","windows","mac"]},{"app":{"name":"safari"},"platforms":["mac"]},{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}]}]},"default":[{"app":{"name":"firefox","options":{"width":1200,"height":800,"headless":true}},"platforms":["linux","mac","windows"]}]}}},"runCoverage":{"description":"Options for performing test coverage analysis on documentation source files.  When performing coveration analysis, values set here override general configuration options.","type":"object","additionalProperties":false,"properties":{"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"output":{"description":"Path of the of the file or directory in which to store the output of Doc Detective commands. If a file path is specified, the output is written to that file. If a file of that name already exists, Doc Detective creates appends an integer to the result file name. If a directory path is specified, the output file name is dependent on the command being run.","type":"string","default":"."},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specificaions and source files.","type":"boolean"},"markup":{"default":["onscreenText","emphasis","image","hyperlink","codeInline","codeBlock","interaction"],"description":"Markup types to include when performing this operation. If no markup types are specified, the operation includes all markup types as defined in `fileTypes`.","type":"array","items":{"oneOf":[{"type":"string"}]}}}},"suggestTests":{"description":"Options for suggesting tests based on documentation source files.  When suggesting tests, values set here override general condiguration options.","type":"object","additionalProperties":false,"properties":{"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"output":{"description":"Path of the of the file or directory in which to store the output of Doc Detective commands. If a file path is specified, the output is written to that file. If a file of that name already exists, Doc Detective creates appends an integer to the result file name. If a directory path is specified, the output file name is dependent on the command being run.","type":"string","default":"."},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specificaions and source files.","type":"boolean"},"markup":{"default":["onscreenText","emphasis","image","hyperlink","codeInline","codeBlock","interaction"],"description":"Markup types to include when performing this operation. If no markup types are specified, the operation includes all markup types as defined in `fileTypes`.","type":"array","items":{"oneOf":[{"type":"string"}]}}}},"fileTypes":{"description":"Information on supported file types and how to parse the markup within them.","type":"array","items":{"oneOf":[{"type":"object","additionalProperties":false,"properties":{"name":{"description":"Name of the file type.","type":"string"},"extensions":{"description":"File extensions to support with this configuration.","type":"array","items":{"oneOf":[{"type":"string"}]}},"testStartStatementOpen":{"description":"Opening of an in-document test start statement.","type":"string"},"testStartStatementClose":{"description":"Close of an in-document test start statement.","type":"string"},"testIgnoreStatement":{"description":"Text for an in-document test ignore statement.","type":"string"},"testEndStatement":{"description":"Text for an in-document test end statement.","type":"string"},"stepStatementOpen":{"description":"Opening of an in-document step statement.","type":"string"},"stepStatementClose":{"description":"Close of an in-document step statement.","type":"string"},"markup":{"description":"Markup types and associated regex patterns to find in documentation source files.","type":"array","items":{"oneOf":[{"type":"object","additionalProperties":false,"properties":{"name":{"description":"Name of the markup type.","type":"string"},"regex":{"description":"Regex patterns to find the markup type in documentation source files.","type":"array","minItems":1,"items":{"oneOf":[{"type":"string"}]}},"actions":{"description":"Actions that apply to the markup type.","type":"array","items":{"oneOf":[{"type":"string","enum":["checkLink","find","goTo","httpRequest","runShell","saveScreenshot","setVariables","startRecording","stopRecording","typeKeys","wait"]},{"type":"object","additionalProperties":false,"properties":{"name":{"description":"Name of the action.","type":"string","enum":["checkLink","find","goTo","httpRequest","runShell","saveScreenshot","setVariables","startRecording","stopRecording","typeKeys","wait"]},"params":{"description":"Parameters for the action.","type":"object","additionalProperties":true}},"required":["name"]},{"title":"checkLink","type":"object","description":"Check if a URL returns an acceptable status code from a GET request.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"checkLink","description":"Action to perform."},"url":{"type":"string","description":"URL to check.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201,202]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"checkLink","url":"https://www.google.com"},{"action":"checkLink","url":"https://www.google.com","statusCodes":[200]},{"action":"checkLink","url":"/search","origin":"www.google.com","statusCodes":[200]}]},{"title":"find","type":"object","description":"Check if an element exists with the specified CSS selector.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"find","description":"Action to perform."},"selector":{"description":"Selector that uniquely identifies the element.","type":"string"},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"matchText":{"type":"string","description":"Text that the element should contain. If the element doesn\'t contain the text, the step fails. Accepts both strings an regular expressions. To use a regular expression, the expression should start and end with a `/`. For example, `/search/`."},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view. Only runs the if the test is being recorded.","oneOf":[{"type":"boolean"}],"default":false},"click":{"description":"Click the element.","oneOf":[{"type":"boolean","default":false},{"type":"object","additionalProperties":false,"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"typeKeys":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`typeKeys`](typeKeys). To type in the element, make the element active with the `click` parameter.","oneOf":[{"type":"string"},{"type":"object","additionalProperties":false,"properties":{"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}}}]},"setVariables":{"type":"array","description":"Extract environment variables from the element\'s text.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the element\'s text.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"required":["action","selector"],"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"examples":[{"action":"find","selector":"[title=Search]"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":"shorthair cat"},{"action":"find","selector":"[title=Search]","click":{"button":"right"}},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"],"delay":100}},{"action":"find","selector":"[title=ResultsCount]","setVariables":[{"name":"resultsCount","regex":".*"}]}]},{"title":"goTo","type":"object","description":"Navigate to a specified URL.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"goTo","description":"Action to perform."},"url":{"type":"string","description":"URL to navigate to.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!","action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516756","description":"This is a test!","action":"goTo","url":"/search","origin":"https://www.google.com"}]},{"title":"httpRequest","type":"object","description":"Perform a generic HTTP request, for example to an API.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"httpRequest","description":"Aciton to perform."},"url":{"type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","required":["operationId"]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"requestHeaders":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"responseHeaders":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"requestParams":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseParams":{"description":"DEPRECATED.","type":"object","additionalProperties":true,"default":{},"properties":{}},"requestData":{"description":"JSON object to include as the body of the HTTP request.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseData":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"default":{},"properties":{}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in `responseData`.","default":true},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"envsFromResponseData":{"description":"Environment variables to set based on response variables, as an object of the environment variable name and the jq filter applied to the response data to identify the variable\'s value.","type":"array","default":[],"items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"jqFilter":{"description":"jq filter to apply to the response data. If the filter doesn\'t return a value, the environment variable isn\'t set.","type":"string"}},"required":["name","jqFilter"]}]}}},"dynamicDefaults":{"id":"uuid"},"anyOf":[{"required":["url"]},{"required":["openApi"]}],"required":["action"],"additionalProperties":false,"examples":[{"action":"httpRequest","url":"https://reqres.in/api/users"},{"action":"httpRequest","url":"https://reqres.in/api/users/2","method":"put","requestData":{"name":"morpheus","job":"zion resident"}},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"httpRequest","url":"https://www.api-server.com","method":"post","timeout":30000,"requestHeaders":{"header":"value"},"requestParams":{"param":"value"},"requestData":{"field":"value"},"responseHeaders":{"header":"value"},"responseData":{"field":"value"},"statusCodes":[200]},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201],"savePath":"response.json","saveDirectory":"media","maxVariation":5,"overwrite":"byVariation"},{"action":"httpRequest","openApi":{"name":"Reqres","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","requestHeaders":{"Authorization":"Bearer $TOKEN"}}}]},{"title":"runShell","type":"object","description":"Perform a native shell command.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runShell","description":"The action to perform."},"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","command"],"examples":[{"action":"runShell","command":"echo","args":["$USER"]},{"action":"runShell","command":"echo","args":["hello-world"],"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!"},{"action":"runShell","command":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runShell","command":"false","exitCodes":[1]},{"action":"runShell","command":"echo","args":["setup"],"exitCodes":[0],"output":"/.*?/","setVariables":[{"name":"TEST","regex":".*"}]},{"action":"runShell","command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"output":"Hello from Docker!","savePath":"docker-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},{"title":"saveScreenshot","type":"object","description":"Takes a screenshot in PNG format.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"saveScreenshot","description":"The action to perform."},"path":{"type":"string","description":"File path of the PNG file, relative to `directory`. If not specified, the file name is the ID of the step.","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the exisitng screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":5,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `byVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"crop":{"type":"object","description":"Crops the screenshot.","properties":{"selector":{"type":"string","description":"Selector of the element to crop the image to."},"padding":{"oneOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}},"required":["selector"],"additionalProperties":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"saveScreenshot"},{"action":"saveScreenshot","path":"results.png"},{"action":"saveScreenshot","path":"results.png","directory":"static/images"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","maxVariation":10,"overwrite":"byVariation"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element"}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":10}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":{"top":10,"right":20,"bottom":30,"left":40}}}]},{"title":"setVariables","type":"object","description":"Load environment variables from a `.env` file.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"setVariables","description":"Action to perform."},"path":{"type":"string","description":"Path to the `.env` file."}},"dynamicDefaults":{"id":"uuid"},"required":["action","path"],"additionalProperties":false,"examples":[{"action":"setVariables","path":".env"}]},{"title":"startRecording","type":"object","description":"Start recording the current browser viewport. Must be followed by a `stopRecording` action. Only runs when the context `app` is `chrome` and `headless` is `false`. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"startRecording","description":"The action to perform."},"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the file. Attempts to create the directory if it doesn\'t exist."},"overwrite":{"type":"boolean","description":"If `true`, overwrites the existing file at `path` if it exists.","default":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"startRecording"},{"action":"startRecording","path":"results.mp4"},{"action":"startRecording","path":"results.mp4","directory":"static/media","overwrite":true}]},{"title":"stopRecording","type":"object","description":"Stop the current recording.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"stopRecording","description":"The action to perform."}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"stopRecording"}]},{"title":"typeKeys","type":"object","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s enum. For example, to type the Escape key, enter `$ESCAPE$`.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"typeKeys","description":"The action to perform."},"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}},"dynamicDefaults":{"id":"uuid"},"required":["action","keys"],"additionalProperties":false,"examples":[{"action":"typeKeys","keys":"kittens"},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"typeKeys","keys":["kittens","$ENTER$"],"delay":500}]},{"title":"wait","type":"object","description":"Pause before performing the next action.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"wait","description":"The action to perform."},"duration":{"type":"number","description":"Milliseconds to wait.","default":5000}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"wait"},{"action":"wait","duration":5000}]}]}}},"required":["name","regex"]}]}}},"required":["extensions","testStartStatementOpen","testStartStatementClose","testIgnoreStatement","testEndStatement","stepStatementOpen","stepStatementClose","markup"]}]},"default":[{"name":"Markdown","extensions":[".md",".markdown",".mdx"],"testStartStatementOpen":"[comment]: # (test start","testStartStatementClose":")","testIgnoreStatement":"[comment]: # (test ignore)","testEndStatement":"[comment]: # (test end)","stepStatementOpen":"[comment]: # (step","stepStatementClose":")","markup":[{"name":"onscreenText","regex":["\\\\*\\\\*.+?\\\\*\\\\*"],"actions":["find"]},{"name":"emphasis","regex":["(?<!\\\\*)\\\\*(?!\\\\*).+?(?<!\\\\*)\\\\*(?!\\\\*)"]},{"name":"image","regex":["!\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"hyperlink","regex":["(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"navigationLink","regex":["(?:[Cc]hose|[Oo]pen|[Cc]lick|[Nn]avigate to|[Gg]o to)(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["goTo"]},{"name":"orderedList","regex":["(?<=\\n) *?[0-9][0-9]?[0-9]?.\\\\s*.*"]},{"name":"unorderedList","regex":["(?<=\\n) *?\\\\*.\\\\s*.*","(?<=\\n) *?-.\\\\s*.*"]},{"name":"codeInline","regex":["(?<!`)`(?!`).+?(?<!`)`(?!`)"]},{"name":"interaction","regex":["[cC]lick","[tT]ap","[tT]ouch","[sS]elect","[cC]hoose","[tT]oggle","[eE]nable","[dD]isable","[tT]urn [oO][ff|n]","[tT]ype","[eE]nter","[sS]end","[aA]dd","[rR]emove","[dD]elete","[uU]pload","[dD]ownload","[sS]croll","[sS]earch","[fF]ilter","[sS]ort","[cC]opy","[pP]aste","[cC]ut","[rR]eplace","[cC]lear","[rR]efresh","[rR]evert","[rR]estore","[rR]eset","[lL]ogin","[lL]ogout","[sS]ign [iI]n","[sS]ign [oO]ut","[sS]ubmit","[cC]ancel","[cC]lose","[aA]ccept","[dD]ecline","[dD]eny","[rR]eject","[rR]etry","[rR]estart","[rR]esume"]}]},{"name":"AsciiDoc","extensions":[".adoc",".asciidoc, .asc"],"testStartStatementOpen":"// (test start","testStartStatementClose":")","testIgnoreStatement":"// (test ignore)","testEndStatement":"// (test end)","stepStatementOpen":"// (step","stepStatementClose":")","markup":[]},{"name":"HTML/XML","extensions":[".html",".htm",".xml",".xhtml"],"testStartStatementOpen":"\x3c!-- test start","testStartStatementClose":"--\x3e","testIgnoreStatement":"\x3c!-- test ignore --\x3e","testEndStatement":"\x3c!-- test end --\x3e","stepStatementOpen":"\x3c!-- step","stepStatementClose":"--\x3e","markup":[]}]},"integrations":{"description":"Options for connecting to external services.","type":"object","additionalProperties":false,"properties":{"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","properties":{"operationId":{"type":"null","$commment":"Only allow operationId at the step level."}},"required":["name","descriptionPath"]}]}}}},"telemetry":{"description":"Options around sending telemetry for Doc Detective usage.","type":"object","additionalProperties":false,"properties":{"send":{"description":"If `true`, sends Doc Detective telemetry.","type":"boolean","default":true},"userId":{"description":"Identifier for the organization, group, or individual running Doc Detective.","type":"string"}},"required":["send"],"default":{"send":true}},"logLevel":{"description":"Amount of detail to output when performing an operation.","type":"string","enum":["silent","error","warning","info","debug"],"default":"info"}},"definitions":{"input":{"description":"Path(s) to test specifications and documentation source files. May be paths to specific files or to directories to scan for files.","anyOf":[{"type":"string"},{"type":"array","items":{"anyOf":[{"type":"string"}]}}]},"recursive":{"description":"If `true` searches `input`, `setup`, and `cleanup` paths recursively for test specificaions and source files.","type":"boolean"},"output":{"description":"Path of the of the file or directory in which to store the output of Doc Detective commands. If a file path is specified, the output is written to that file. If a file of that name already exists, Doc Detective creates appends an integer to the result file name. If a directory path is specified, the output file name is dependent on the command being run.","type":"string","default":"."},"markupToInclude":{"description":"Markup types to include when performing this operation. If no markup types are specified, the operation includes all markup types as defined in `fileTypes`.","type":"array","items":{"oneOf":[{"type":"string"}]}}},"examples":[{},{"input":".","output":"."},{"defaultCommand":"runTests","envVariables":"","input":".","output":".","recursive":true,"logLevel":"info","runTests":{"input":".","output":".","setup":"","cleanup":"","recursive":true,"downloadDirectory":".","contexts":[{"app":{"name":"firefox","path":""},"platforms":["linux","mac","windows"]}]}},{"integrations":{"openApi":[{"name":"Acme","descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com","mockResponse":true}]}},{"envVariables":"","input":".","output":".","recursive":true,"logLevel":"info","runTests":{"input":".","output":".","setup":"","cleanup":"","recursive":true,"downloadDirectory":".","contexts":[{"app":{"name":"firefox","path":""},"platforms":["linux","mac","windows"]}]},"runCoverage":{"recursive":true,"input":".","output":".","markup":[]},"fileTypes":[{"name":"Markdown","extensions":[".md",".markdown",".mdx"],"testStartStatementOpen":"[comment]: # (test start","testStartStatementClose":")","testIgnoreStatement":"[comment]: # (test ignore)","testEndStatement":"[comment]: # (test end)","stepStatementOpen":"[comment]: # (step","stepStatementClose":")","markup":[{"name":"onscreenText","regex":["\\\\*\\\\*.+?\\\\*\\\\*"],"actions":["find"]},{"name":"emphasis","regex":["(?<!\\\\*)\\\\*(?!\\\\*).+?(?<!\\\\*)\\\\*(?!\\\\*)"]},{"name":"image","regex":["!\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"hyperlink","regex":["(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"navigationLink","regex":["(?:[Cc]hose|[Oo]pen|[Cc]lick|[Nn]avigate to|[Gg]o to)(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["goTo"]},{"name":"orderedList","regex":["(?<=\\n) *?[0-9][0-9]?[0-9]?.\\\\s*.*"]},{"name":"unorderedList","regex":["(?<=\\n) *?\\\\*.\\\\s*.*","(?<=\\n) *?-.\\\\s*.*"]},{"name":"codeInline","regex":["(?<!`)`(?!`).+?(?<!`)`(?!`)"]},{"name":"codeBlock","regex":["(?=(```))(\\\\w|\\\\W)*(?<=```)"]},{"name":"interaction","regex":["[cC]lick","[tT]ap","[tT]ouch","[sS]elect","[cC]hoose","[tT]oggle","[eE]nable","[dD]isable","[tT]urn [oO][ff|n]","[tT]ype","[eE]nter","[sS]end","[aA]dd","[rR]emove","[dD]elete","[uU]pload","[dD]ownload","[sS]croll","[sS]earch","[fF]ilter","[sS]ort","[cC]opy","[pP]aste","[cC]ut","[rR]eplace","[cC]lear","[rR]efresh","[rR]evert","[rR]estore","[rR]eset","[lL]ogin","[lL]ogout","[sS]ign [iI]n","[sS]ign [oO]ut","[sS]ubmit","[cC]ancel","[cC]lose","[aA]ccept","[dD]ecline","[dD]eny","[rR]eject","[rR]etry","[rR]estart","[rR]esume"]}]}],"integrations":{},"telemetry":{"send":true,"userId":"Doc Detective"}},{"envVariables":"","input":["."],"output":".","recursive":true,"relativePathBase":"cwd","logLevel":"info","runTests":{"input":["."],"output":".","setup":["."],"cleanup":["."],"recursive":true,"downloadDirectory":".","contexts":[{"app":{"name":"firefox","options":{"width":1200,"height":800,"headless":true}},"platforms":["linux","mac","windows"]}]},"runCoverage":{"recursive":true,"input":["."],"output":".","markup":[]},"fileTypes":[{"name":"Markdown","extensions":[".md",".markdown",".mdx"],"testStartStatementOpen":"[comment]: # (test start","testStartStatementClose":")","testIgnoreStatement":"[comment]: # (test ignore)","testEndStatement":"[comment]: # (test end)","stepStatementOpen":"[comment]: # (step","stepStatementClose":")","markup":[{"name":"onscreenText","regex":["\\\\*\\\\*.+?\\\\*\\\\*"],"actions":["find"]},{"name":"emphasis","regex":["(?<!\\\\*)\\\\*(?!\\\\*).+?(?<!\\\\*)\\\\*(?!\\\\*)"]},{"name":"image","regex":["!\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"hyperlink","regex":["(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["checkLink"]},{"name":"navigationLink","regex":["(?:[Cc]hose|[Oo]pen|[Cc]lick|[Nn]avigate to|[Gg]o to)(?<!!)\\\\[.+?\\\\]\\\\(.+?\\\\)"],"actions":["goTo"]},{"name":"orderedList","regex":["(?<=\\n) *?[0-9][0-9]?[0-9]?.\\\\s*.*"]},{"name":"unorderedList","regex":["(?<=\\n) *?\\\\*.\\\\s*.*","(?<=\\n) *?-.\\\\s*.*"]},{"name":"codeInline","regex":["(?<!`)`(?!`).+?(?<!`)`(?!`)"]},{"name":"codeBlock","regex":["(?=(```))(\\\\w|\\\\W)*(?<=```)"]},{"name":"interaction","regex":["[cC]lick","[tT]ap","[tT]ouch","[sS]elect","[cC]hoose","[tT]oggle","[eE]nable","[dD]isable","[tT]urn [oO][ff|n]","[tT]ype","[eE]nter","[sS]end","[aA]dd","[rR]emove","[dD]elete","[uU]pload","[dD]ownload","[sS]croll","[sS]earch","[fF]ilter","[sS]ort","[cC]opy","[pP]aste","[cC]ut","[rR]eplace","[cC]lear","[rR]efresh","[rR]evert","[rR]estore","[rR]eset","[lL]ogin","[lL]ogout","[sS]ign [iI]n","[sS]ign [oO]ut","[sS]ubmit","[cC]ancel","[cC]lose","[aA]ccept","[dD]ecline","[dD]eny","[rR]eject","[rR]etry","[rR]estart","[rR]esume"]}]},{"name":"AsciiDoc","extensions":[".adoc",".asciidoc, .asc"],"testStartStatementOpen":"// (test start","testStartStatementClose":")","testIgnoreStatement":"// (test ignore)","testEndStatement":"// (test end)","stepStatementOpen":"// (step","stepStatementClose":")","markup":[]},{"name":"HTML/XML","extensions":[".html",".htm",".xml",".xhtml"],"testStartStatementOpen":"\x3c!-- test start","testStartStatementClose":"--\x3e","testIgnoreStatement":"\x3c!-- test ignore --\x3e","testEndStatement":"\x3c!-- test end --\x3e","stepStatementOpen":"\x3c!-- step","stepStatementClose":"--\x3e","markup":[]}],"integrations":{},"telemetry":{"send":true,"userId":"Doc Detective"}}]},"context_v2":{"title":"context","type":"object","description":"An application and supported platforms.\\n\\nIf no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For browsers, context priority is Firefox > Chrome > Chromium.","properties":{"app":{"type":"object","description":"The application to run.","additionalProperties":false,"required":["name"],"properties":{"name":{"type":"string","description":"Name of the application.","enum":["chrome","firefox","safari","edge"]},"path":{"type":"string","description":"Absolute path or command for the application. If not specified, defaults to typical install paths per platform. If specified but the path is invalid, the context is skipped."},"options":{"type":"object","description":"Options to pass to the app. Only works when `name` is `firefox` or `chrome`.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the window in pixels."},"height":{"type":"integer","description":"Height of the window in pixels."},"viewport_height":{"type":"integer","description":"Height of the viewport in pixels. Overrides `height`."},"viewport_width":{"type":"integer","description":"Width of the viewport in pixels. Overrides `width`."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode. Not supported by Safari."},"driverPath":{"type":"string","description":"Path to the browser driver. If not specified, defaults to internally managed dependencies."}}}}},"platforms":{"description":"Supported platforms for the application.","type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}},"required":["app","platforms"],"additionalProperties":false,"examples":[{"app":{"name":"chrome"},"platforms":["linux"]},{"app":{"name":"chrome","options":{"viewport_width":800,"viewport_height":600}},"platforms":["linux"]},{"app":{"name":"firefox","options":{"width":800,"height":600,"headless":false,"driverPath":"/usr/bin/geckodriver"}},"platforms":["linux","windows","mac"]},{"app":{"name":"safari"},"platforms":["mac"]},{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}]},"find_v2":{"title":"find","type":"object","description":"Check if an element exists with the specified CSS selector.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"find","description":"Action to perform."},"selector":{"description":"Selector that uniquely identifies the element.","type":"string"},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"matchText":{"type":"string","description":"Text that the element should contain. If the element doesn\'t contain the text, the step fails. Accepts both strings an regular expressions. To use a regular expression, the expression should start and end with a `/`. For example, `/search/`."},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view. Only runs the if the test is being recorded.","oneOf":[{"type":"boolean"}],"default":false},"click":{"description":"Click the element.","oneOf":[{"type":"boolean","default":false},{"type":"object","additionalProperties":false,"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"typeKeys":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`typeKeys`](typeKeys). To type in the element, make the element active with the `click` parameter.","oneOf":[{"type":"string"},{"type":"object","additionalProperties":false,"properties":{"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}}}]},"setVariables":{"type":"array","description":"Extract environment variables from the element\'s text.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the element\'s text.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"required":["action","selector"],"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"examples":[{"action":"find","selector":"[title=Search]"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":"shorthair cat"},{"action":"find","selector":"[title=Search]","click":{"button":"right"}},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"],"delay":100}},{"action":"find","selector":"[title=ResultsCount]","setVariables":[{"name":"resultsCount","regex":".*"}]}]},"goTo_v2":{"title":"goTo","type":"object","description":"Navigate to a specified URL.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"goTo","description":"Action to perform."},"url":{"type":"string","description":"URL to navigate to.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!","action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516756","description":"This is a test!","action":"goTo","url":"/search","origin":"https://www.google.com"}]},"httpRequest_v2":{"title":"httpRequest","type":"object","description":"Perform a generic HTTP request, for example to an API.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"httpRequest","description":"Aciton to perform."},"url":{"type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","required":["operationId"]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"requestHeaders":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"responseHeaders":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"requestParams":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseParams":{"description":"DEPRECATED.","type":"object","additionalProperties":true,"default":{},"properties":{}},"requestData":{"description":"JSON object to include as the body of the HTTP request.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseData":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"default":{},"properties":{}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in `responseData`.","default":true},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"envsFromResponseData":{"description":"Environment variables to set based on response variables, as an object of the environment variable name and the jq filter applied to the response data to identify the variable\'s value.","type":"array","default":[],"items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"jqFilter":{"description":"jq filter to apply to the response data. If the filter doesn\'t return a value, the environment variable isn\'t set.","type":"string"}},"required":["name","jqFilter"]}]}}},"dynamicDefaults":{"id":"uuid"},"anyOf":[{"required":["url"]},{"required":["openApi"]}],"required":["action"],"additionalProperties":false,"examples":[{"action":"httpRequest","url":"https://reqres.in/api/users"},{"action":"httpRequest","url":"https://reqres.in/api/users/2","method":"put","requestData":{"name":"morpheus","job":"zion resident"}},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"httpRequest","url":"https://www.api-server.com","method":"post","timeout":30000,"requestHeaders":{"header":"value"},"requestParams":{"param":"value"},"requestData":{"field":"value"},"responseHeaders":{"header":"value"},"responseData":{"field":"value"},"statusCodes":[200]},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201],"savePath":"response.json","saveDirectory":"media","maxVariation":5,"overwrite":"byVariation"},{"action":"httpRequest","openApi":{"name":"Reqres","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","requestHeaders":{"Authorization":"Bearer $TOKEN"}}}]},"moveTo_v2":{"title":"moveTo","type":"object","description":"Move the mouse to a specific location.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"moveTo","description":"The action to perform."},"selector":{"description":"Selector for the element to move to.","type":"string"},"alignment":{"description":"Alignment of the element to move to.","type":"string","enum":["top","bottom","left","right","center"],"default":"center"},"offset":{"description":"Offset from the element to move to.","type":"object","properties":{"x":{"description":"Offset from the element to move to in x direction. Negative values move left, positive values move right.","type":"number","default":0},"y":{"description":"Offset from the element to move to in y direction. Negative values move up, positive values move down.","type":"number","default":0}},"default":{},"additionalProperties":false},"duration":{"description":"Duration of the move in milliseconds.","type":"number","minimum":0,"default":500}},"dynamicDefaults":{"id":"uuid"},"required":["action","selector"],"additionalProperties":false,"examples":[{"action":"moveTo","selector":"#searchInput"},{"action":"moveTo","selector":"#searchInput","alignment":"left"},{"action":"moveTo","selector":"#searchInput","alignment":"left","offset":{"x":10,"y":10}},{"action":"moveTo","selector":"#searchInput","alignment":"left","offset":{"x":10,"y":10},"duration":1000}]},"openApi_v2":{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},"runShell_v2":{"title":"runShell","type":"object","description":"Perform a native shell command.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runShell","description":"The action to perform."},"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","command"],"examples":[{"action":"runShell","command":"echo","args":["$USER"]},{"action":"runShell","command":"echo","args":["hello-world"],"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!"},{"action":"runShell","command":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runShell","command":"false","exitCodes":[1]},{"action":"runShell","command":"echo","args":["setup"],"exitCodes":[0],"output":"/.*?/","setVariables":[{"name":"TEST","regex":".*"}]},{"action":"runShell","command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"output":"Hello from Docker!","savePath":"docker-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},"runCode_v2":{"title":"runCode","type":"object","description":"Assemble and run code.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runCode","description":"The action to perform."},"language":{"type":"string","description":"Language of the code to run. If not specified, the code is run in the shell.","enum":["python","bash","javascript"]},"code":{"type":"string","description":"Code to run."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}},"properties":{"stdout":{"type":"string","description":"Standard output of the command.","readOnly":true},"stderr":{"type":"string","description":"Standard error of the command.","readOnly":true},"exitCode":{"type":"integer","description":"Exit code of the command.","readOnly":true}}}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","code","language"],"examples":[{"action":"runCode","language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"action":"runCode","language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runCode","language":"javascript","code":"return false","exitCodes":[1]},{"action":"runCode","language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"output":"Hello from Python!","savePath":"python-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},"saveScreenshot_v2":{"title":"saveScreenshot","type":"object","description":"Takes a screenshot in PNG format.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"saveScreenshot","description":"The action to perform."},"path":{"type":"string","description":"File path of the PNG file, relative to `directory`. If not specified, the file name is the ID of the step.","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the exisitng screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":5,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `byVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"crop":{"type":"object","description":"Crops the screenshot.","properties":{"selector":{"type":"string","description":"Selector of the element to crop the image to."},"padding":{"oneOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}},"required":["selector"],"additionalProperties":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"saveScreenshot"},{"action":"saveScreenshot","path":"results.png"},{"action":"saveScreenshot","path":"results.png","directory":"static/images"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","maxVariation":10,"overwrite":"byVariation"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element"}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":10}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":{"top":10,"right":20,"bottom":30,"left":40}}}]},"setVariables_v2":{"title":"setVariables","type":"object","description":"Load environment variables from a `.env` file.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"setVariables","description":"Action to perform."},"path":{"type":"string","description":"Path to the `.env` file."}},"dynamicDefaults":{"id":"uuid"},"required":["action","path"],"additionalProperties":false,"examples":[{"action":"setVariables","path":".env"}]},"startRecording_v2":{"title":"startRecording","type":"object","description":"Start recording the current browser viewport. Must be followed by a `stopRecording` action. Only runs when the context `app` is `chrome` and `headless` is `false`. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"startRecording","description":"The action to perform."},"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the file. Attempts to create the directory if it doesn\'t exist."},"overwrite":{"type":"boolean","description":"If `true`, overwrites the existing file at `path` if it exists.","default":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"startRecording"},{"action":"startRecording","path":"results.mp4"},{"action":"startRecording","path":"results.mp4","directory":"static/media","overwrite":true}]},"stopRecording_v2":{"title":"stopRecording","type":"object","description":"Stop the current recording.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"stopRecording","description":"The action to perform."}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"stopRecording"}]},"spec_v2":{"title":"specification","type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the test specification."},"description":{"type":"string","description":"Description of the test specification."},"file":{"type":"string","description":"Path to the file that the specification is associated with."},"contexts":{"type":"array","description":"Application/platform sets to run tests in. Overrides `contexts` defined at the config-level.","items":{"oneOf":[{"title":"context","type":"object","description":"An application and supported platforms.\\n\\nIf no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For browsers, context priority is Firefox > Chrome > Chromium.","properties":{"app":{"type":"object","description":"The application to run.","additionalProperties":false,"required":["name"],"properties":{"name":{"type":"string","description":"Name of the application.","enum":["chrome","firefox","safari","edge"]},"path":{"type":"string","description":"Absolute path or command for the application. If not specified, defaults to typical install paths per platform. If specified but the path is invalid, the context is skipped."},"options":{"type":"object","description":"Options to pass to the app. Only works when `name` is `firefox` or `chrome`.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the window in pixels."},"height":{"type":"integer","description":"Height of the window in pixels."},"viewport_height":{"type":"integer","description":"Height of the viewport in pixels. Overrides `height`."},"viewport_width":{"type":"integer","description":"Width of the viewport in pixels. Overrides `width`."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode. Not supported by Safari."},"driverPath":{"type":"string","description":"Path to the browser driver. If not specified, defaults to internally managed dependencies."}}}}},"platforms":{"description":"Supported platforms for the application.","type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}},"required":["app","platforms"],"additionalProperties":false,"examples":[{"app":{"name":"chrome"},"platforms":["linux"]},{"app":{"name":"chrome","options":{"viewport_width":800,"viewport_height":600}},"platforms":["linux"]},{"app":{"name":"firefox","options":{"width":800,"height":600,"headless":false,"driverPath":"/usr/bin/geckodriver"}},"platforms":["linux","windows","mac"]},{"app":{"name":"safari"},"platforms":["mac"]},{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","properties":{"operationId":{"type":"null","$commment":"Only allow operationId at the step level."}},"required":["name","descriptionPath"]}]}},"tests":{"description":"[Tests](test) to perform.","type":"array","minItems":1,"items":{"oneOf":[{"title":"test","type":"object","description":"A Doc Detective test.","properties":{"id":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"file":{"type":"string","description":"Path to the file that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex. Defaults to `true`."},"contexts":{"type":"array","description":"Application/platform sets to run the test in. Overrides `contexts` defined at the config-level and spec-level.","items":{"oneOf":[{"title":"context","type":"object","description":"An application and supported platforms.\\n\\nIf no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For browsers, context priority is Firefox > Chrome > Chromium.","properties":{"app":{"type":"object","description":"The application to run.","additionalProperties":false,"required":["name"],"properties":{"name":{"type":"string","description":"Name of the application.","enum":["chrome","firefox","safari","edge"]},"path":{"type":"string","description":"Absolute path or command for the application. If not specified, defaults to typical install paths per platform. If specified but the path is invalid, the context is skipped."},"options":{"type":"object","description":"Options to pass to the app. Only works when `name` is `firefox` or `chrome`.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the window in pixels."},"height":{"type":"integer","description":"Height of the window in pixels."},"viewport_height":{"type":"integer","description":"Height of the viewport in pixels. Overrides `height`."},"viewport_width":{"type":"integer","description":"Width of the viewport in pixels. Overrides `width`."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode. Not supported by Safari."},"driverPath":{"type":"string","description":"Path to the browser driver. If not specified, defaults to internally managed dependencies."}}}}},"platforms":{"description":"Supported platforms for the application.","type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}},"required":["app","platforms"],"additionalProperties":false,"examples":[{"app":{"name":"chrome"},"platforms":["linux"]},{"app":{"name":"chrome","options":{"viewport_width":800,"viewport_height":600}},"platforms":["linux"]},{"app":{"name":"firefox","options":{"width":800,"height":600,"headless":false,"driverPath":"/usr/bin/geckodriver"}},"platforms":["linux","windows","mac"]},{"app":{"name":"safari"},"platforms":["mac"]},{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","properties":{"operationId":{"type":"null","$commment":"Only allow operationId at the step level."}},"required":["name","descriptionPath"]}]}},"setup":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"cleanup":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Actions to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails.","type":"array","minItems":1,"items":{"anyOf":[{"title":"checkLink","type":"object","description":"Check if a URL returns an acceptable status code from a GET request.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"checkLink","description":"Action to perform."},"url":{"type":"string","description":"URL to check.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201,202]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"checkLink","url":"https://www.google.com"},{"action":"checkLink","url":"https://www.google.com","statusCodes":[200]},{"action":"checkLink","url":"/search","origin":"www.google.com","statusCodes":[200]}]},{"title":"goTo","type":"object","description":"Navigate to a specified URL.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"goTo","description":"Action to perform."},"url":{"type":"string","description":"URL to navigate to.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!","action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516756","description":"This is a test!","action":"goTo","url":"/search","origin":"https://www.google.com"}]},{"title":"httpRequest","type":"object","description":"Perform a generic HTTP request, for example to an API.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"httpRequest","description":"Aciton to perform."},"url":{"type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","required":["operationId"]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"requestHeaders":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"responseHeaders":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"requestParams":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseParams":{"description":"DEPRECATED.","type":"object","additionalProperties":true,"default":{},"properties":{}},"requestData":{"description":"JSON object to include as the body of the HTTP request.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseData":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"default":{},"properties":{}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in `responseData`.","default":true},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"envsFromResponseData":{"description":"Environment variables to set based on response variables, as an object of the environment variable name and the jq filter applied to the response data to identify the variable\'s value.","type":"array","default":[],"items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"jqFilter":{"description":"jq filter to apply to the response data. If the filter doesn\'t return a value, the environment variable isn\'t set.","type":"string"}},"required":["name","jqFilter"]}]}}},"dynamicDefaults":{"id":"uuid"},"anyOf":[{"required":["url"]},{"required":["openApi"]}],"required":["action"],"additionalProperties":false,"examples":[{"action":"httpRequest","url":"https://reqres.in/api/users"},{"action":"httpRequest","url":"https://reqres.in/api/users/2","method":"put","requestData":{"name":"morpheus","job":"zion resident"}},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"httpRequest","url":"https://www.api-server.com","method":"post","timeout":30000,"requestHeaders":{"header":"value"},"requestParams":{"param":"value"},"requestData":{"field":"value"},"responseHeaders":{"header":"value"},"responseData":{"field":"value"},"statusCodes":[200]},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201],"savePath":"response.json","saveDirectory":"media","maxVariation":5,"overwrite":"byVariation"},{"action":"httpRequest","openApi":{"name":"Reqres","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","requestHeaders":{"Authorization":"Bearer $TOKEN"}}}]},{"title":"runCode","type":"object","description":"Assemble and run code.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runCode","description":"The action to perform."},"language":{"type":"string","description":"Language of the code to run. If not specified, the code is run in the shell.","enum":["python","bash","javascript"]},"code":{"type":"string","description":"Code to run."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}},"properties":{"stdout":{"type":"string","description":"Standard output of the command.","readOnly":true},"stderr":{"type":"string","description":"Standard error of the command.","readOnly":true},"exitCode":{"type":"integer","description":"Exit code of the command.","readOnly":true}}}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","code","language"],"examples":[{"action":"runCode","language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"action":"runCode","language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runCode","language":"javascript","code":"return false","exitCodes":[1]},{"action":"runCode","language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"output":"Hello from Python!","savePath":"python-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},{"title":"runShell","type":"object","description":"Perform a native shell command.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runShell","description":"The action to perform."},"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","command"],"examples":[{"action":"runShell","command":"echo","args":["$USER"]},{"action":"runShell","command":"echo","args":["hello-world"],"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!"},{"action":"runShell","command":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runShell","command":"false","exitCodes":[1]},{"action":"runShell","command":"echo","args":["setup"],"exitCodes":[0],"output":"/.*?/","setVariables":[{"name":"TEST","regex":".*"}]},{"action":"runShell","command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"output":"Hello from Docker!","savePath":"docker-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},{"title":"saveScreenshot","type":"object","description":"Takes a screenshot in PNG format.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"saveScreenshot","description":"The action to perform."},"path":{"type":"string","description":"File path of the PNG file, relative to `directory`. If not specified, the file name is the ID of the step.","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the exisitng screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":5,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `byVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"crop":{"type":"object","description":"Crops the screenshot.","properties":{"selector":{"type":"string","description":"Selector of the element to crop the image to."},"padding":{"oneOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}},"required":["selector"],"additionalProperties":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"saveScreenshot"},{"action":"saveScreenshot","path":"results.png"},{"action":"saveScreenshot","path":"results.png","directory":"static/images"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","maxVariation":10,"overwrite":"byVariation"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element"}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":10}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":{"top":10,"right":20,"bottom":30,"left":40}}}]},{"title":"setVariables","type":"object","description":"Load environment variables from a `.env` file.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"setVariables","description":"Action to perform."},"path":{"type":"string","description":"Path to the `.env` file."}},"dynamicDefaults":{"id":"uuid"},"required":["action","path"],"additionalProperties":false,"examples":[{"action":"setVariables","path":".env"}]},{"title":"startRecording","type":"object","description":"Start recording the current browser viewport. Must be followed by a `stopRecording` action. Only runs when the context `app` is `chrome` and `headless` is `false`. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"startRecording","description":"The action to perform."},"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the file. Attempts to create the directory if it doesn\'t exist."},"overwrite":{"type":"boolean","description":"If `true`, overwrites the existing file at `path` if it exists.","default":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"startRecording"},{"action":"startRecording","path":"results.mp4"},{"action":"startRecording","path":"results.mp4","directory":"static/media","overwrite":true}]},{"title":"stopRecording","type":"object","description":"Stop the current recording.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"stopRecording","description":"The action to perform."}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"stopRecording"}]},{"title":"typeKeys","type":"object","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s enum. For example, to type the Escape key, enter `$ESCAPE$`.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"typeKeys","description":"The action to perform."},"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}},"dynamicDefaults":{"id":"uuid"},"required":["action","keys"],"additionalProperties":false,"examples":[{"action":"typeKeys","keys":"kittens"},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"typeKeys","keys":["kittens","$ENTER$"],"delay":500}]},{"title":"find","type":"object","description":"Check if an element exists with the specified CSS selector.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"find","description":"Action to perform."},"selector":{"description":"Selector that uniquely identifies the element.","type":"string"},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"matchText":{"type":"string","description":"Text that the element should contain. If the element doesn\'t contain the text, the step fails. Accepts both strings an regular expressions. To use a regular expression, the expression should start and end with a `/`. For example, `/search/`."},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view. Only runs the if the test is being recorded.","oneOf":[{"type":"boolean"}],"default":false},"click":{"description":"Click the element.","oneOf":[{"type":"boolean","default":false},{"type":"object","additionalProperties":false,"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"typeKeys":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`typeKeys`](typeKeys). To type in the element, make the element active with the `click` parameter.","oneOf":[{"type":"string"},{"type":"object","additionalProperties":false,"properties":{"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}}}]},"setVariables":{"type":"array","description":"Extract environment variables from the element\'s text.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the element\'s text.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"required":["action","selector"],"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"examples":[{"action":"find","selector":"[title=Search]"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":"shorthair cat"},{"action":"find","selector":"[title=Search]","click":{"button":"right"}},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"],"delay":100}},{"action":"find","selector":"[title=ResultsCount]","setVariables":[{"name":"resultsCount","regex":".*"}]}]},{"title":"wait","type":"object","description":"Pause before performing the next action.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"wait","description":"The action to perform."},"duration":{"type":"number","description":"Milliseconds to wait.","default":5000}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"wait"},{"action":"wait","duration":5000}]}]}}},"dynamicDefaults":{"id":"uuid"},"required":["steps"],"additionalProperties":false,"examples":[{"steps":[{"action":"checkLink","url":"https://www.duckduckgo.com"}]},{"steps":[{"action":"goTo","url":"https://www.duckduckgo.com"},{"action":"find","selector":"[title=Search]","click":true,"typeKeys":{"keys":["shorthair cats","$ENTER$"]}}]},{"id":"Do all the things! - Test","description":"This test includes every property across all actions.","contexts":[{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}],"setup":"setup.json","cleanup":"cleanup.json","steps":[{"action":"setVariables","path":".env"},{"action":"runShell","command":"echo","args":["$USER"]},{"action":"checkLink","url":"https://www.duckduckgo.com"},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"goTo","url":"https://www.duckduckgo.com"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"]}},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"saveScreenshot"}]},{"openApi":[{"name":"Acme","descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com"}],"steps":[{"action":"httpRequest","openApi":{"operationId":"getUserById"},"requestParams":{"id":123}}]}]}]}}},"required":["tests"],"examples":[{"tests":[{"steps":[{"action":"checkLink","url":"https://www.duckduckgo.com"}]}]},{"id":"Do all the things! - Spec","contexts":[{"app":{"name":"chrome","path":"/usr/bin/firefox"},"platforms":["windows","mac"]}],"tests":[{"id":"Do all the things! - Test","description":"This test includes nearly every property across all actions.","contexts":[{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}],"steps":[{"action":"setVariables","path":".env"},{"action":"runShell","command":"echo","args":["$USER"]},{"action":"checkLink","url":"https://www.duckduckgo.com"},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"goTo","url":"https://www.duckduckgo.com"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"]}},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"saveScreenshot"}]}]},{"id":"Make a request from an OpenAPI definition","openApi":[{"name":"Acme","descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com"}],"tests":[{"steps":[{"action":"httpRequest","openApi":{"operationId":"getUserById"},"requestParams":{"id":123}}]}]}]},"test_v2":{"title":"test","type":"object","description":"A Doc Detective test.","properties":{"id":{"type":"string","description":"Unique identifier for the test."},"description":{"type":"string","description":"Description of the test."},"file":{"type":"string","description":"Path to the file that the test is associated with."},"detectSteps":{"type":"boolean","description":"Whether or not to detect steps in input files based on markup regex. Defaults to `true`."},"contexts":{"type":"array","description":"Application/platform sets to run the test in. Overrides `contexts` defined at the config-level and spec-level.","items":{"oneOf":[{"title":"context","type":"object","description":"An application and supported platforms.\\n\\nIf no contexts are specified but a context is required by one or more tests, Doc Detective attempts to identify a supported context in the current environment and run tests against it. For browsers, context priority is Firefox > Chrome > Chromium.","properties":{"app":{"type":"object","description":"The application to run.","additionalProperties":false,"required":["name"],"properties":{"name":{"type":"string","description":"Name of the application.","enum":["chrome","firefox","safari","edge"]},"path":{"type":"string","description":"Absolute path or command for the application. If not specified, defaults to typical install paths per platform. If specified but the path is invalid, the context is skipped."},"options":{"type":"object","description":"Options to pass to the app. Only works when `name` is `firefox` or `chrome`.","additionalProperties":false,"properties":{"width":{"type":"integer","description":"Width of the window in pixels."},"height":{"type":"integer","description":"Height of the window in pixels."},"viewport_height":{"type":"integer","description":"Height of the viewport in pixels. Overrides `height`."},"viewport_width":{"type":"integer","description":"Width of the viewport in pixels. Overrides `width`."},"headless":{"type":"boolean","description":"If `true`, runs the browser in headless mode. Not supported by Safari."},"driverPath":{"type":"string","description":"Path to the browser driver. If not specified, defaults to internally managed dependencies."}}}}},"platforms":{"description":"Supported platforms for the application.","type":"array","items":{"type":"string","enum":["linux","mac","windows"]}}},"required":["app","platforms"],"additionalProperties":false,"examples":[{"app":{"name":"chrome"},"platforms":["linux"]},{"app":{"name":"chrome","options":{"viewport_width":800,"viewport_height":600}},"platforms":["linux"]},{"app":{"name":"firefox","options":{"width":800,"height":600,"headless":false,"driverPath":"/usr/bin/geckodriver"}},"platforms":["linux","windows","mac"]},{"app":{"name":"safari"},"platforms":["mac"]},{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}]}]}},"openApi":{"type":"array","items":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","properties":{"operationId":{"type":"null","$commment":"Only allow operationId at the step level."}},"required":["name","descriptionPath"]}]}},"setup":{"type":"string","description":"Path to a test specification to perform before this test, while maintaining this test\'s context. Useful for setting up testing environments. Only the `steps` property is used from the first test in the setup spec."},"cleanup":{"type":"string","description":"Path to a test specification to perform after this test, while maintaining this test\'s context. Useful for cleaning up testing environments. Only the `steps` property is used from the first test in the cleanup spec."},"steps":{"description":"Actions to perform as part of the test. Performed in the sequence defined. If one or more actions fail, the test fails.","type":"array","minItems":1,"items":{"anyOf":[{"title":"checkLink","type":"object","description":"Check if a URL returns an acceptable status code from a GET request.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"checkLink","description":"Action to perform."},"url":{"type":"string","description":"URL to check.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200,201,202]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"checkLink","url":"https://www.google.com"},{"action":"checkLink","url":"https://www.google.com","statusCodes":[200]},{"action":"checkLink","url":"/search","origin":"www.google.com","statusCodes":[200]}]},{"title":"goTo","type":"object","description":"Navigate to a specified URL.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"goTo","description":"Action to perform."},"url":{"type":"string","description":"URL to navigate to.","pattern":"(^(http://|https://|/).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"origin":{"type":"string","description":"Protocol and domain to navigate to. Prepended to `url`.","transform":["trim"]}},"dynamicDefaults":{"id":"uuid"},"required":["action","url"],"additionalProperties":false,"examples":[{"action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!","action":"goTo","url":"https://www.google.com"},{"id":"ddec5e20-2e81-4f38-867c-92c8d9516756","description":"This is a test!","action":"goTo","url":"/search","origin":"https://www.google.com"}]},{"title":"httpRequest","type":"object","description":"Perform a generic HTTP request, for example to an API.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"httpRequest","description":"Aciton to perform."},"url":{"type":"string","description":"URL for the HTTP request.","pattern":"(^(http://|https://).*|\\\\$[A-Za-z0-9_]+)","transform":["trim"]},"openApi":{"allOf":[{"version":"1.0.0","$schema":"http://json-schema.org/draft-07/schema#","title":"openApi","type":"object","description":"OpenAPI definition and configuration.","additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the OpenAPI definition, as defined in your configuration."},"descriptionPath":{"type":"string","description":"URL or local path to the OpenAPI definition."},"operationId":{"type":"string","description":"ID of the operation to use for the request."},"server":{"type":"string","description":"Server to use for example requests. Only valid if `useExample` is `request` or `both`. If not specified but an example is used for the request, uses the first server defined in the OpenAPI definition."},"validateAgainstSchema":{"type":"string","description":"Validates the request and/or response against the schema in the OpenAPI definition. If the request or response doesn\'t match the schema, the step fails.","enum":["request","response","both","none"],"default":"both"},"mockResponse":{"type":"boolean","description":"If `true`, doesn\'t make the HTTP request, but instead uses the response example or schema from the OpenAPI definition as the response data. Useful for creating tests when an API isn\'t fully implemented yet. If `statusCode` isn\'t specified, uses the first defined response code."},"statusCode":{"type":"integer","description":"Response code to use for validation, examples, and status code checking. If the response code doesn\'t match, the step fails. `statusCodes` overrides this value when specified."},"useExample":{"type":["string"],"description":"Uses the example from the OpenAPI definition as the request and response data. If the request or response has multiple examples, specify `exampleKey`. If `statusCode` isn\'t specified, uses the first defined response code. `requestData`, `requestParams`, and `requestHeaders` override portions of request examples when specified. `responseData` overrides portions of response examples when specified.","enum":["request","response","both","none"],"default":"none"},"exampleKey":{"type":"string","description":"Key of the example to use from the `examples` property in the OpenAPI definition. If an `examples` key isn\'t specified or isn\'t available for a given parameter or object, the `example` property value is used.","default":""},"requestHeaders":{"type":"object","description":"Request headers to add to the request. If specified in both a config and a step, the step value overrides the config value.","additionalProperties":{"type":"string"}}},"examples":[{"descriptionPath":"https://petstore.swagger.io/v2/swagger.json"}]},{"type":"object","required":["operationId"]}]},"statusCodes":{"description":"Accepted status codes. If the specified URL returns a code other than what is specified here, the action fails.","type":"array","items":{"oneOf":[{"type":"integer"}]},"default":[200]},"method":{"type":"string","description":"Method of the HTTP request","enum":["get","put","post","patch","delete"],"transform":["trim","toEnumCase"],"default":"get"},"timeout":{"type":"integer","description":"Timeout for the HTTP request, in milliseconds.","default":60000},"requestHeaders":{"description":"Headers to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"properties":{},"default":{}},"responseHeaders":{"description":"Headers expected in the response, in key/value format. If one or more `responseHeaders` entries aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"properties":{},"default":{}},"requestParams":{"description":"URL parameters to include in the HTTP request, in key/value format.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseParams":{"description":"DEPRECATED.","type":"object","additionalProperties":true,"default":{},"properties":{}},"requestData":{"description":"JSON object to include as the body of the HTTP request.","type":"object","additionalProperties":true,"default":{},"properties":{}},"responseData":{"description":"JSON object expected in the response. If one or more key/value pairs aren\'t present in the response, the step fails.","type":"object","additionalProperties":true,"default":{},"properties":{}},"allowAdditionalFields":{"type":"boolean","description":"If `false`, the step fails when the response data contains fields not specified in `responseData`.","default":true},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`. Specify a file extension that matches the expected response type, such as `.json` for JSON content or `.txt` for strings."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"envsFromResponseData":{"description":"Environment variables to set based on response variables, as an object of the environment variable name and the jq filter applied to the response data to identify the variable\'s value.","type":"array","default":[],"items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"jqFilter":{"description":"jq filter to apply to the response data. If the filter doesn\'t return a value, the environment variable isn\'t set.","type":"string"}},"required":["name","jqFilter"]}]}}},"dynamicDefaults":{"id":"uuid"},"anyOf":[{"required":["url"]},{"required":["openApi"]}],"required":["action"],"additionalProperties":false,"examples":[{"action":"httpRequest","url":"https://reqres.in/api/users"},{"action":"httpRequest","url":"https://reqres.in/api/users/2","method":"put","requestData":{"name":"morpheus","job":"zion resident"}},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"httpRequest","url":"https://www.api-server.com","method":"post","timeout":30000,"requestHeaders":{"header":"value"},"requestParams":{"param":"value"},"requestData":{"field":"value"},"responseHeaders":{"header":"value"},"responseData":{"field":"value"},"statusCodes":[200]},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201],"savePath":"response.json","saveDirectory":"media","maxVariation":5,"overwrite":"byVariation"},{"action":"httpRequest","openApi":{"name":"Reqres","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"getUserById"},"requestParams":{"id":123}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"createUser","useExample":"both"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme"}},{"action":"httpRequest","openApi":{"descriptionPath":"https://api.example.com/openapi.json","operationId":"updateUser","useExample":"request","exampleKey":"acme","requestHeaders":{"Authorization":"Bearer $TOKEN"}}}]},{"title":"runCode","type":"object","description":"Assemble and run code.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runCode","description":"The action to perform."},"language":{"type":"string","description":"Language of the code to run. If not specified, the code is run in the shell.","enum":["python","bash","javascript"]},"code":{"type":"string","description":"Code to run."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]},"outputs":{"type":"object","description":"Outputs from step processes and user-defined expressions. Use the `outputs` object to reference outputs in subsequent steps. If a user-defined output matches the key for a step-defined output, the user-defined output takes precedence.","patternProperties":{"^[A-Za-z0-9_]+$":{"type":"string","description":"Runtime expression for a user-defined output value."}},"properties":{"stdout":{"type":"string","description":"Standard output of the command.","readOnly":true},"stderr":{"type":"string","description":"Standard error of the command.","readOnly":true},"exitCode":{"type":"integer","description":"Exit code of the command.","readOnly":true}}}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","code","language"],"examples":[{"action":"runCode","language":"javascript","code":"console.log(\'Hello, ${process.env.USER}!\');"},{"action":"runCode","language":"bash","code":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runCode","language":"javascript","code":"return false","exitCodes":[1]},{"action":"runCode","language":"python","code":"print(\'Hello from Python\')","workingDirectory":".","exitCodes":[0],"output":"Hello from Python!","savePath":"python-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},{"title":"runShell","type":"object","description":"Perform a native shell command.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"runShell","description":"The action to perform."},"command":{"type":"string","description":"Command to perform in the machine\'s default shell."},"args":{"type":"array","description":"Arguments for the command.","items":{"oneOf":[{"type":"string"}]},"default":[]},"workingDirectory":{"type":"string","description":"Working directory for the command.","default":"."},"exitCodes":{"type":"array","description":"Expected exit codes of the command. If the command\'s actual exit code isn\'t in this list, the step fails.","items":{"oneOf":[{"type":"integer"}]},"default":[0]},"output":{"type":"string","description":"Content expected in the command\'s output. If the expected content can\'t be found in the command\'s output (either stdout or stderr), the step fails. Supports strings and regular expressions. To use a regular expression, the string must start and end with a forward slash, like in `/^hello-world.*/`."},"savePath":{"type":"string","description":"File path to save the command\'s output, relative to `saveDirectory`."},"saveDirectory":{"type":"string","description":"Directory to save the command\'s output. If the directory doesn\'t exist, creates the directory. If not specified, the directory is your media directory."},"maxVariation":{"type":"integer","description":"Allowed variation in percentage of text different between the current output and previously saved output. If the difference between the current output and the previous output is greater than `maxVariation`, the step fails. If output doesn\'t exist at `savePath`, this value is ignored.","default":0,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing output at `savePath` if it exists.\\nIf `byVariation`, overwrites the existing output at `savePath` if the difference between the new output and the existing output is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"timeout":{"type":"integer","description":"Max time in milliseconds the command is allowed to run. If the command runs longer than this, the step fails.","default":60000},"setVariables":{"type":"array","description":"Extract environment variables from the command\'s output.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the command\'s output.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"required":["action","command"],"examples":[{"action":"runShell","command":"echo","args":["$USER"]},{"action":"runShell","command":"echo","args":["hello-world"],"id":"ddec5e20-2e81-4f38-867c-92c8d9516755","description":"This is a test!"},{"action":"runShell","command":"docker run hello-world","timeout":20000,"exitCodes":[0],"output":"Hello from Docker!"},{"action":"runShell","command":"false","exitCodes":[1]},{"action":"runShell","command":"echo","args":["setup"],"exitCodes":[0],"output":"/.*?/","setVariables":[{"name":"TEST","regex":".*"}]},{"action":"runShell","command":"docker run hello-world","workingDirectory":".","exitCodes":[0],"output":"Hello from Docker!","savePath":"docker-output.txt","saveDirectory":"output","maxVariation":10,"overwrite":"byVariation"}]},{"title":"saveScreenshot","type":"object","description":"Takes a screenshot in PNG format.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"saveScreenshot","description":"The action to perform."},"path":{"type":"string","description":"File path of the PNG file, relative to `directory`. If not specified, the file name is the ID of the step.","pattern":"([A-Za-z0-9_-]*\\\\.(png|PNG)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the PNG file. If the directory doesn\'t exist, creates the directory."},"maxVariation":{"type":"number","description":"Allowed variation in percentage of pixels between the new screenshot and the exisitng screenshot at `path`. If the difference between the new screenshot and the existing screenshot is greater than `maxVariation`, the step fails. If a screenshot doesn\'t exist at `path`, this value is ignored.","default":5,"minimum":0,"maximum":100},"overwrite":{"type":"string","description":"If `true`, overwrites the existing screenshot at `path` if it exists.\\nIf `byVariation`, overwrites the existing screenshot at `path` if the difference between the new screenshot and the existing screenshot is greater than `maxVariation`.","enum":["true","false","byVariation"],"default":"false"},"crop":{"type":"object","description":"Crops the screenshot.","properties":{"selector":{"type":"string","description":"Selector of the element to crop the image to."},"padding":{"oneOf":[{"type":"number","description":"Padding in pixels to add to the bounds of the element.","minimum":0},{"type":"object","properties":{"top":{"type":"number","minimum":0},"right":{"type":"number","minimum":0},"bottom":{"type":"number","minimum":0},"left":{"type":"number","minimum":0}}}]}},"required":["selector"],"additionalProperties":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"saveScreenshot"},{"action":"saveScreenshot","path":"results.png"},{"action":"saveScreenshot","path":"results.png","directory":"static/images"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","maxVariation":10,"overwrite":"byVariation"},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element"}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":10}},{"action":"saveScreenshot","path":"results.png","directory":"static/images","crop":{"selector":"#element","padding":{"top":10,"right":20,"bottom":30,"left":40}}}]},{"title":"setVariables","type":"object","description":"Load environment variables from a `.env` file.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"setVariables","description":"Action to perform."},"path":{"type":"string","description":"Path to the `.env` file."}},"dynamicDefaults":{"id":"uuid"},"required":["action","path"],"additionalProperties":false,"examples":[{"action":"setVariables","path":".env"}]},{"title":"startRecording","type":"object","description":"Start recording the current browser viewport. Must be followed by a `stopRecording` action. Only runs when the context `app` is `chrome` and `headless` is `false`. Supported extensions: [ \'.mp4\', \'.webm\', \'.gif\' ]","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"startRecording","description":"The action to perform."},"path":{"type":"string","description":"File path of the recording. Supports the `.mp4`, `.webm`, and `.gif` extensions. If not specified, the file name is the ID of the step, and the extension is `.mp4`.","pattern":"([A-Za-z0-9_-]*\\\\.(mp4|webm|gif)$|\\\\$[A-Za-z0-9_]+)"},"directory":{"type":"string","description":"Directory of the file. Attempts to create the directory if it doesn\'t exist."},"overwrite":{"type":"boolean","description":"If `true`, overwrites the existing file at `path` if it exists.","default":false}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"startRecording"},{"action":"startRecording","path":"results.mp4"},{"action":"startRecording","path":"results.mp4","directory":"static/media","overwrite":true}]},{"title":"stopRecording","type":"object","description":"Stop the current recording.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"stopRecording","description":"The action to perform."}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"stopRecording"}]},{"title":"typeKeys","type":"object","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s enum. For example, to type the Escape key, enter `$ESCAPE$`.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"typeKeys","description":"The action to perform."},"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}},"dynamicDefaults":{"id":"uuid"},"required":["action","keys"],"additionalProperties":false,"examples":[{"action":"typeKeys","keys":"kittens"},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"typeKeys","keys":["kittens","$ENTER$"],"delay":500}]},{"title":"find","type":"object","description":"Check if an element exists with the specified CSS selector.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"find","description":"Action to perform."},"selector":{"description":"Selector that uniquely identifies the element.","type":"string"},"timeout":{"type":"integer","description":"Max duration in milliseconds to wait for the element to exist.","default":5000},"matchText":{"type":"string","description":"Text that the element should contain. If the element doesn\'t contain the text, the step fails. Accepts both strings an regular expressions. To use a regular expression, the expression should start and end with a `/`. For example, `/search/`."},"moveTo":{"description":"Move to the element. If the element isn\'t visible, it\'s scrolled into view. Only runs the if the test is being recorded.","oneOf":[{"type":"boolean"}],"default":false},"click":{"description":"Click the element.","oneOf":[{"type":"boolean","default":false},{"type":"object","additionalProperties":false,"properties":{"button":{"description":"Kind of click to perform.","type":"string","enum":["left","right","middle"]}}}]},"typeKeys":{"description":"Type keys after finding the element. Either a string or an object with a `keys` field as defined in [`typeKeys`](typeKeys). To type in the element, make the element active with the `click` parameter.","oneOf":[{"type":"string"},{"type":"object","additionalProperties":false,"properties":{"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}}}]},"setVariables":{"type":"array","description":"Extract environment variables from the element\'s text.","items":{"oneOf":[{"description":"","type":"object","properties":{"name":{"description":"Name of the environment variable to set.","type":"string"},"regex":{"description":"Regex to extract the environment variable from the element\'s text.","type":"string"}},"required":["name","regex"]}]},"default":[]}},"required":["action","selector"],"dynamicDefaults":{"id":"uuid"},"additionalProperties":false,"examples":[{"action":"find","selector":"[title=Search]"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":"shorthair cat"},{"action":"find","selector":"[title=Search]","click":{"button":"right"}},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"],"delay":100}},{"action":"find","selector":"[title=ResultsCount]","setVariables":[{"name":"resultsCount","regex":".*"}]}]},{"title":"wait","type":"object","description":"Pause before performing the next action.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"wait","description":"The action to perform."},"duration":{"type":"number","description":"Milliseconds to wait.","default":5000}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"wait"},{"action":"wait","duration":5000}]}]}}},"dynamicDefaults":{"id":"uuid"},"required":["steps"],"additionalProperties":false,"examples":[{"steps":[{"action":"checkLink","url":"https://www.duckduckgo.com"}]},{"steps":[{"action":"goTo","url":"https://www.duckduckgo.com"},{"action":"find","selector":"[title=Search]","click":true,"typeKeys":{"keys":["shorthair cats","$ENTER$"]}}]},{"id":"Do all the things! - Test","description":"This test includes every property across all actions.","contexts":[{"app":{"name":"firefox","path":"/usr/bin/firefox"},"platforms":["linux"]}],"setup":"setup.json","cleanup":"cleanup.json","steps":[{"action":"setVariables","path":".env"},{"action":"runShell","command":"echo","args":["$USER"]},{"action":"checkLink","url":"https://www.duckduckgo.com"},{"action":"httpRequest","url":"https://reqres.in/api/users","method":"post","requestData":{"name":"morpheus","job":"leader"},"responseData":{"name":"morpheus","job":"leader"},"statusCodes":[200,201]},{"action":"goTo","url":"https://www.duckduckgo.com"},{"action":"find","selector":"[title=Search]","timeout":10000,"matchText":"Search","moveTo":true,"click":true,"typeKeys":{"keys":["shorthair cat"]}},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"saveScreenshot"}]},{"openApi":[{"name":"Acme","descriptionPath":"https://www.acme.com/openapi.json","server":"https://api.acme.com"}],"steps":[{"action":"httpRequest","openApi":{"operationId":"getUserById"},"requestParams":{"id":123}}]}]},"typeKeys_v2":{"title":"typeKeys","type":"object","description":"Type keys. To type special keys, begin and end the string with `$` and use the special key\'s enum. For example, to type the Escape key, enter `$ESCAPE$`.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"typeKeys","description":"The action to perform."},"keys":{"description":"String of keys to enter.","anyOf":[{"type":"string"},{"type":"array","items":{"oneOf":[{"type":"string"}]}}]},"delay":{"type":"number","description":"Delay in milliseconds between each key press. Only valid during a recording.","default":100}},"dynamicDefaults":{"id":"uuid"},"required":["action","keys"],"additionalProperties":false,"examples":[{"action":"typeKeys","keys":"kittens"},{"action":"typeKeys","keys":["$ENTER$"]},{"action":"typeKeys","keys":["kittens","$ENTER$"],"delay":500}]},"wait_v2":{"title":"wait","type":"object","description":"Pause before performing the next action.","properties":{"id":{"type":"string","description":"ID of the step."},"description":{"type":"string","description":"Description of the step."},"action":{"type":"string","const":"wait","description":"The action to perform."},"duration":{"type":"number","description":"Milliseconds to wait.","default":5000}},"dynamicDefaults":{"id":"uuid"},"required":["action"],"additionalProperties":false,"examples":[{"action":"wait"},{"action":"wait","duration":5000}]}}')},5125:(e,t,i)=>{"use strict";var r=i(6955),s=i(2493);function o(e){return function(){throw new Error("Function "+e+" is deprecated and cannot be used.")}}e.exports.Type=i(8300),e.exports.Schema=i(3479),e.exports.FAILSAFE_SCHEMA=i(8575),e.exports.JSON_SCHEMA=i(5528),e.exports.CORE_SCHEMA=i(1113),e.exports.DEFAULT_SAFE_SCHEMA=i(3665),e.exports.DEFAULT_FULL_SCHEMA=i(4993),e.exports.load=r.load,e.exports.loadAll=r.loadAll,e.exports.safeLoad=r.safeLoad,e.exports.safeLoadAll=r.safeLoadAll,e.exports.dump=s.dump,e.exports.safeDump=s.safeDump,e.exports.YAMLException=i(9343),e.exports.MINIMAL_SCHEMA=i(8575),e.exports.SAFE_SCHEMA=i(3665),e.exports.DEFAULT_SCHEMA=i(4993),e.exports.scan=o("scan"),e.exports.parse=o("parse"),e.exports.compose=o("compose"),e.exports.addConstructor=o("addConstructor")},5132:(e,t,i)=>{"use strict";var r=i(9714);const s={identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:e=>new r.Scalar("t"===e[0]||"T"===e[0]),stringify:({source:e,value:t},i)=>e&&s.test.test(e)&&t===("t"===e[0]||"T"===e[0])?e:t?i.options.trueStr:i.options.falseStr};t.boolTag=s},5137:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(7697)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},5139:(e,t,i)=>{"use strict";var r=i(7444),s=i(9637),o=i(3793),n=i(484),a=i(3732);t.addPairToJSMap=function(e,t,{key:i,value:p}){if(n.isNode(i)&&i.addToJSMap)i.addToJSMap(e,t,p);else if(s.isMergeKey(e,i))s.addMergeToJSMap(e,t,p);else{const s=a.toJS(i,"",e);if(t instanceof Map)t.set(s,a.toJS(p,s,e));else if(t instanceof Set)t.add(s);else{const c=function(e,t,i){if(null===t)return"";if("object"!=typeof t)return String(t);if(n.isNode(e)&&i?.doc){const t=o.createStringifyContext(i.doc,{});t.anchors=new Set;for(const e of i.anchors.keys())t.anchors.add(e.anchor);t.inFlow=!0,t.inStringifyKey=!0;const s=e.toString(t);if(!i.mapKeyWarned){let e=JSON.stringify(s);e.length>40&&(e=e.substring(0,36)+'..."'),r.warn(i.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${e}. Set mapAsMap: true to use object keys.`),i.mapKeyWarned=!0}return s}return JSON.stringify(t)}(i,s,e),d=a.toJS(p,c,e);c in t?Object.defineProperty(t,c,{value:d,writable:!0,enumerable:!0,configurable:!0}):t[c]=d}}return t}},5141:(e,t,i)=>{"use strict";var r=i(4070),s=i(7571),o=i(4355),n=i(7180);function a(e,t){if(t)for(const i of t)switch(i.type){case"space":case"comment":e.push(i);break;case"newline":return e.push(i),!0}return!1}function p(e,t,i){switch(e.type){case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":e.type=i,e.source=t;break;case"block-scalar":{const r=e.props.slice(1);let s=t.length;"block-scalar-header"===e.props[0].type&&(s-=e.props[0].source.length);for(const e of r)e.offset+=s;delete e.props,Object.assign(e,{type:i,source:t,end:r});break}case"block-map":case"block-seq":{const r={type:"newline",offset:e.offset+t.length,indent:e.indent,source:"\n"};delete e.items,Object.assign(e,{type:i,source:t,end:[r]});break}default:{const r="indent"in e?e.indent:-1,s="end"in e&&Array.isArray(e.end)?e.end.filter((e=>"space"===e.type||"comment"===e.type||"newline"===e.type)):[];for(const t of Object.keys(e))"type"!==t&&"offset"!==t&&delete e[t];Object.assign(e,{type:i,indent:r,source:t,end:s})}}}t.createScalarToken=function(e,t){const{implicitKey:i=!1,indent:r,inFlow:s=!1,offset:o=-1,type:p="PLAIN"}=t,c=n.stringifyString({type:p,value:e},{implicitKey:i,indent:r>0?" ".repeat(r):"",inFlow:s,options:{blockQuote:!0,lineWidth:-1}}),d=t.end??[{type:"newline",offset:-1,indent:r,source:"\n"}];switch(c[0]){case"|":case">":{const e=c.indexOf("\n"),t=c.substring(0,e),i=c.substring(e+1)+"\n",s=[{type:"block-scalar-header",offset:o,indent:r,source:t}];return a(s,d)||s.push({type:"newline",offset:-1,indent:r,source:"\n"}),{type:"block-scalar",offset:o,indent:r,props:s,source:i}}case'"':return{type:"double-quoted-scalar",offset:o,indent:r,source:c,end:d};case"'":return{type:"single-quoted-scalar",offset:o,indent:r,source:c,end:d};default:return{type:"scalar",offset:o,indent:r,source:c,end:d}}},t.resolveAsScalar=function(e,t=!0,i){if(e){const n=(e,t,r)=>{const s="number"==typeof e?e:Array.isArray(e)?e[0]:e.offset;if(!i)throw new o.YAMLParseError([s,s+1],t,r);i(s,t,r)};switch(e.type){case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return s.resolveFlowScalar(e,t,n);case"block-scalar":return r.resolveBlockScalar({options:{strict:t}},e,n)}}return null},t.setScalarValue=function(e,t,i={}){let{afterKey:r=!1,implicitKey:s=!1,inFlow:o=!1,type:c}=i,d="indent"in e?e.indent:null;if(r&&"number"==typeof d&&(d+=2),!c)switch(e.type){case"single-quoted-scalar":c="QUOTE_SINGLE";break;case"double-quoted-scalar":c="QUOTE_DOUBLE";break;case"block-scalar":{const t=e.props[0];if("block-scalar-header"!==t.type)throw new Error("Invalid block scalar header");c=">"===t.source[0]?"BLOCK_FOLDED":"BLOCK_LITERAL";break}default:c="PLAIN"}const u=n.stringifyString({type:c,value:t},{implicitKey:s||null===d,indent:null!==d&&d>0?" ".repeat(d):"",inFlow:o,options:{blockQuote:!0,lineWidth:-1}});switch(u[0]){case"|":case">":!function(e,t){const i=t.indexOf("\n"),r=t.substring(0,i),s=t.substring(i+1)+"\n";if("block-scalar"===e.type){const t=e.props[0];if("block-scalar-header"!==t.type)throw new Error("Invalid block scalar header");t.source=r,e.source=s}else{const{offset:t}=e,i="indent"in e?e.indent:-1,o=[{type:"block-scalar-header",offset:t,indent:i,source:r}];a(o,"end"in e?e.end:void 0)||o.push({type:"newline",offset:-1,indent:i,source:"\n"});for(const t of Object.keys(e))"type"!==t&&"offset"!==t&&delete e[t];Object.assign(e,{type:"block-scalar",indent:i,props:o,source:s})}}(e,u);break;case'"':p(e,u,"double-quoted-scalar");break;case"'":p(e,u,"single-quoted-scalar");break;default:p(e,u,"scalar")}}},5188:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MissingRefError=t.ValidationError=t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=t.Ajv=void 0;const r=i(2300),s=i(6970),o=i(8167),n=i(7045),a=["/properties"],p="http://json-schema.org/draft-07/schema";class c extends r.default{_addVocabularies(){super._addVocabularies(),s.default.forEach((e=>this.addVocabulary(e))),this.opts.discriminator&&this.addKeyword(o.default)}_addDefaultMetaSchema(){if(super._addDefaultMetaSchema(),!this.opts.meta)return;const e=this.opts.$data?this.$dataMetaSchema(n,a):n;this.addMetaSchema(e,p,!1),this.refs["http://json-schema.org/schema"]=p}defaultMeta(){return this.opts.defaultMeta=super.defaultMeta()||(this.getSchema(p)?p:void 0)}}t.Ajv=c,e.exports=t=c,e.exports.Ajv=c,Object.defineProperty(t,"__esModule",{value:!0}),t.default=c;var d=i(2648);Object.defineProperty(t,"KeywordCxt",{enumerable:!0,get:function(){return d.KeywordCxt}});var u=i(6675);Object.defineProperty(t,"_",{enumerable:!0,get:function(){return u._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return u.str}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return u.stringify}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return u.nil}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return u.Name}}),Object.defineProperty(t,"CodeGen",{enumerable:!0,get:function(){return u.CodeGen}});var l=i(6288);Object.defineProperty(t,"ValidationError",{enumerable:!0,get:function(){return l.default}});var h=i(6649);Object.defineProperty(t,"MissingRefError",{enumerable:!0,get:function(){return h.default}})},5219:(e,t,i)=>{"use strict";var r=i(1736),s=i(484),o=i(9714);t.createNode=function(e,t,i){if(s.isDocument(e)&&(e=e.contents),s.isNode(e))return e;if(s.isPair(e)){const t=i.schema[s.MAP].createNode?.(i.schema,null,i);return t.items.push(e),t}(e instanceof String||e instanceof Number||e instanceof Boolean||"undefined"!=typeof BigInt&&e instanceof BigInt)&&(e=e.valueOf());const{aliasDuplicateObjects:n,onAnchor:a,onTagObj:p,schema:c,sourceObjects:d}=i;let u;if(n&&e&&"object"==typeof e){if(u=d.get(e),u)return u.anchor??(u.anchor=a(e)),new r.Alias(u.anchor);u={anchor:null,node:null},d.set(e,u)}t?.startsWith("!!")&&(t="tag:yaml.org,2002:"+t.slice(2));let l=function(e,t,i){if(t){const e=i.filter((e=>e.tag===t)),r=e.find((e=>!e.format))??e[0];if(!r)throw new Error(`Tag ${t} not found`);return r}return i.find((t=>t.identify?.(e)&&!t.format))}(e,t,c.tags);if(!l){if(e&&"function"==typeof e.toJSON&&(e=e.toJSON()),!e||"object"!=typeof e){const t=new o.Scalar(e);return u&&(u.node=t),t}l=e instanceof Map?c[s.MAP]:Symbol.iterator in Object(e)?c[s.SEQ]:c[s.MAP]}p&&(p(l),delete i.onTagObj);const h=l?.createNode?l.createNode(i.schema,e,i):"function"==typeof l?.nodeClass?.from?l.nodeClass.from(i.schema,e,i):new o.Scalar(e);return t?h.tag=t:l.default||(h.tag=l.tag),u&&(u.node=h),h}},5250:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extendErrors=t.resetErrorsCount=t.reportExtraError=t.reportError=t.keyword$DataError=t.keywordError=void 0;const r=i(6675),s=i(749),o=i(3701);function n(e,t){const i=e.const("err",t);e.if(r._`${o.default.vErrors} === null`,(()=>e.assign(o.default.vErrors,r._`[${i}]`)),r._`${o.default.vErrors}.push(${i})`),e.code(r._`${o.default.errors}++`)}function a(e,t){const{gen:i,validateName:s,schemaEnv:o}=e;o.$async?i.throw(r._`new ${e.ValidationError}(${t})`):(i.assign(r._`${s}.errors`,t),i.return(!1))}t.keywordError={message:({keyword:e})=>r.str`must pass "${e}" keyword validation`},t.keyword$DataError={message:({keyword:e,schemaType:t})=>t?r.str`"${e}" keyword must be ${t} ($data)`:r.str`"${e}" keyword is invalid ($data)`},t.reportError=function(e,i=t.keywordError,s,o){const{it:p}=e,{gen:d,compositeRule:u,allErrors:l}=p,h=c(e,i,s);(null!=o?o:u||l)?n(d,h):a(p,r._`[${h}]`)},t.reportExtraError=function(e,i=t.keywordError,r){const{it:s}=e,{gen:p,compositeRule:d,allErrors:u}=s;n(p,c(e,i,r)),d||u||a(s,o.default.vErrors)},t.resetErrorsCount=function(e,t){e.assign(o.default.errors,t),e.if(r._`${o.default.vErrors} !== null`,(()=>e.if(t,(()=>e.assign(r._`${o.default.vErrors}.length`,t)),(()=>e.assign(o.default.vErrors,null)))))},t.extendErrors=function({gen:e,keyword:t,schemaValue:i,data:s,errsCount:n,it:a}){if(void 0===n)throw new Error("ajv implementation error");const p=e.name("err");e.forRange("i",n,o.default.errors,(n=>{e.const(p,r._`${o.default.vErrors}[${n}]`),e.if(r._`${p}.instancePath === undefined`,(()=>e.assign(r._`${p}.instancePath`,(0,r.strConcat)(o.default.instancePath,a.errorPath)))),e.assign(r._`${p}.schemaPath`,r.str`${a.errSchemaPath}/${t}`),a.opts.verbose&&(e.assign(r._`${p}.schema`,i),e.assign(r._`${p}.data`,s))}))};const p={keyword:new r.Name("keyword"),schemaPath:new r.Name("schemaPath"),params:new r.Name("params"),propertyName:new r.Name("propertyName"),message:new r.Name("message"),schema:new r.Name("schema"),parentSchema:new r.Name("parentSchema")};function c(e,t,i){const{createErrors:s}=e.it;return!1===s?r._`{}`:function(e,t,i={}){const{gen:s,it:n}=e,a=[d(n,i),u(e,i)];return function(e,{params:t,message:i},s){const{keyword:n,data:a,schemaValue:c,it:d}=e,{opts:u,propertyName:l,topSchemaRef:h,schemaPath:m}=d;s.push([p.keyword,n],[p.params,"function"==typeof t?t(e):t||r._`{}`]),u.messages&&s.push([p.message,"function"==typeof i?i(e):i]),u.verbose&&s.push([p.schema,c],[p.parentSchema,r._`${h}${m}`],[o.default.data,a]),l&&s.push([p.propertyName,l])}(e,t,a),s.object(...a)}(e,t,i)}function d({errorPath:e},{instancePath:t}){const i=t?r.str`${e}${(0,s.getErrorPath)(t,s.Type.Str)}`:e;return[o.default.instancePath,(0,r.strConcat)(o.default.instancePath,i)]}function u({keyword:e,it:{errSchemaPath:t}},{schemaPath:i,parentSchema:o}){let n=o?t:r.str`${t}/${e}`;return i&&(n=r.str`${n}${(0,s.getErrorPath)(i,s.Type.Str)}`),[p.schemaPath,n]}},5288:(e,t)=>{"use strict";function i(e,t,i,r,s){const o=e[t];if("function"==typeof o)return o.apply(e,[i,r,s]);if(!r){if(o instanceof RegExp)return o.test(i.url);if("string"==typeof o)return o===i.extension;if(Array.isArray(o))return-1!==o.indexOf(i.extension)}return o}Object.defineProperty(t,"__esModule",{value:!0}),t.all=function(e){return Object.keys(e||{}).filter((t=>"object"==typeof e[t])).map((t=>(e[t].name=t,e[t])))},t.filter=function(e,t,r){return e.filter((e=>!!i(e,t,r)))},t.sort=function(e){for(const t of e)t.order=t.order||Number.MAX_SAFE_INTEGER;return e.sort(((e,t)=>e.order-t.order))},t.run=async function(e,t,r,s){let o,n,a=0;return new Promise(((p,c)=>{function d(){if(o=e[a++],!o)return c(n);try{const n=i(o,t,r,u,s);if(n&&"function"==typeof n.then)n.then(l,h);else if(void 0!==n)l(n);else if(a===e.length)throw new Error("No promise has been returned or callback has been called.")}catch(e){h(e)}}function u(e,t){e?h(e):l(t)}function l(e){p({plugin:o,result:e})}function h(e){n={plugin:o,error:e},d()}d()}))}},5292:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(156)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},5317:e=>{"use strict";e.exports=require("child_process")},5345:e=>{"use strict";e.exports=URIError},5346:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=(0,r(i(3969)).default)("exclusiveRange");t.default=s,e.exports=s},5387:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(9243)),o=(e,t)=>((0,s.default)(t).forEach((t=>e.addKeyword(t))),e);t.default=o,e.exports=o},5388:(e,t,i)=>{"use strict";var r=i(1231),s=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],o=["scalar","sequence","mapping"];e.exports=function(e,t){if(t=t||{},Object.keys(t).forEach((function(t){if(-1===s.indexOf(t))throw new r('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.options=t,this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.representName=t.representName||null,this.defaultStyle=t.defaultStyle||null,this.multi=t.multi||!1,this.styleAliases=function(e){var t={};return null!==e&&Object.keys(e).forEach((function(i){e[i].forEach((function(e){t[String(e)]=i}))})),t}(t.styleAliases||null),-1===o.indexOf(this.kind))throw new r('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},5437:(e,t,i)=>{"use strict";var r=i(3144);function s(e,t){const i=e[0],r="-"===i||"+"===i?e.substring(1):e,s=e=>t?BigInt(e):Number(e),o=r.replace(/_/g,"").split(":").reduce(((e,t)=>e*s(60)+s(t)),s(0));return"-"===i?s(-1)*o:o}function o(e){let{value:t}=e,i=e=>e;if("bigint"==typeof t)i=e=>BigInt(e);else if(isNaN(t)||!isFinite(t))return r.stringifyNumber(e);let s="";t<0&&(s="-",t*=i(-1));const o=i(60),n=[t%o];return t<60?n.unshift(0):(t=(t-n[0])/o,n.unshift(t%o),t>=60&&(t=(t-n[0])/o,n.unshift(t))),s+n.map((e=>String(e).padStart(2,"0"))).join(":").replace(/000000\d*$/,"")}const n={identify:e=>"bigint"==typeof e||Number.isInteger(e),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(e,t,{intAsBigInt:i})=>s(e,i),stringify:o},a={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:e=>s(e,!1),stringify:o},p={identify:e=>e instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(e){const t=e.match(p.test);if(!t)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,i,r,o,n,a,c]=t.map(Number),d=t[7]?Number((t[7]+"00").substr(1,3)):0;let u=Date.UTC(i,r-1,o,n||0,a||0,c||0,d);const l=t[8];if(l&&"Z"!==l){let e=s(l,!1);Math.abs(e)<30&&(e*=60),u-=6e4*e}return new Date(u)},stringify:({value:e})=>e?.toISOString().replace(/(T00:00:00)?\.000Z$/,"")??""};t.floatTime=a,t.intTime=n,t.timestamp=p},5459:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=a(i(7906)),c=a(i(270)),d=i(7184),u=n(i(6385)),l=i(2270);function h(e,t,i,r,s,o,n,a,d){let u;const l={value:e,circular:!1};f(d,a);const g=a.dereference||{},x=g.excludedPathMatcher||(()=>!1);if(("ignore"===g?.circular||!s.has(e))&&e&&"object"==typeof e&&!ArrayBuffer.isView(e)&&!x(i)){if(r.add(e),s.add(e),p.default.isAllowed$Ref(e,a))u=m(e,t,i,r,s,o,n,a,d),l.circular=u.circular,l.value=u.value;else for(const b of Object.keys(e)){f(d,a);const v=c.default.join(t,b),w=c.default.join(i,b);if(x(w))continue;const I=e[b];let k=!1;if(p.default.isAllowed$Ref(I,a)){if(u=m(I,v,w,r,s,o,n,a,d),k=u.circular,e[b]!==u.value){const t=new Map;g?.preservedProperties&&("object"!=typeof e[b]||Array.isArray(e[b])||g?.preservedProperties.forEach((i=>{i in e[b]&&t.set(i,e[b][i])}))),e[b]=u.value,g?.preservedProperties&&t.size&&"object"==typeof e[b]&&!Array.isArray(e[b])&&t.forEach(((t,i)=>{e[b][i]=t})),g?.onDereference?.(I.$ref,e[b],e,b)}}else r.has(I)?k=y(v,n,a):(u=h(I,v,w,r,s,o,n,a,d),k=u.circular,e[b]!==u.value&&(e[b]=u.value));l.circular=l.circular||k}r.delete(e)}return l}function m(e,t,i,r,s,o,n,a,c){const d=p.default.isExternal$Ref(e)&&"root"===a?.dereference?.externalReferenceResolution,l=u.resolve(d?u.cwd():t,e.$ref),m=o.get(l);if(m){if(!m.circular){const t=Object.keys(e);if(t.length>1){const i={};for(const r of t)"$ref"===r||r in m.value||(i[r]=e[r]);return{circular:m.circular,value:Object.assign({},m.value,i)}}return m}if("object"!=typeof m.value||!("$ref"in m.value)||!("$ref"in e))return m;if(m.value.$ref===e.$ref)return m}const f=n._resolve(l,t,a);if(null===f)return{circular:!1,value:null};const g=f.circular;let x=g||r.has(f.value);x&&y(t,n,a);let b=p.default.dereference(e,f.value);if(!x){const e=h(b,f.path,i,r,s,o,n,a,c);x=e.circular,b=e.value}x&&!g&&"ignore"===a.dereference?.circular&&(b=e),g&&(b.$ref=i);const v={circular:x,value:b};return 1===Object.keys(e).length&&o.set(l,v),v}function f(e,t){if(t&&t.timeoutMs&&Date.now()-e>t.timeoutMs)throw new l.TimeoutError(t.timeoutMs)}function y(e,t,i){if(t.circular=!0,i?.dereference?.onCircular?.(e),!i.dereference.circular)throw d.ono.reference(`Circular $ref pointer found at ${e}`);return!0}t.default=function(e,t){const i=Date.now(),r=h(e.schema,e.$refs._root$Ref.path,"#",new Set,new Set,new Map,e.$refs,t,i);e.$refs.circular=r.circular,e.schema=r.value}},5463:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(5687)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},5472:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2017);r.code='require("ajv/dist/runtime/equal").default',t.default=r},5489:(e,t,i)=>{"use strict";e.exports=i(1769).extend({implicit:[i(127),i(1851)],explicit:[i(9342),i(6946),i(6942),i(6663)]})},5528:(e,t,i)=>{"use strict";var r=i(3479);e.exports=new r({include:[i(8575)],implicit:[i(958),i(7959),i(4898),i(5909)]})},5609:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="ffffffff-ffff-ffff-ffff-ffffffffffff"},5649:(e,t,i)=>{var r,s,o,n,a,p,c,d,u,l=Object.create,h=Object.defineProperty,m=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,y=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,x=(e,t)=>function(){return e&&(t=(0,e[f(e)[0]])(e=0)),t},b=(e,t)=>function(){return t||(0,e[f(e)[0]])((t={exports:{}}).exports,t),t.exports},v=(e,t,i,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of f(t))g.call(e,s)||s===i||h(e,s,{get:()=>t[s],enumerable:!(r=m(t,s))||r.enumerable});return e},w=(e,t,i)=>(i=null!=e?l(y(e)):{},v(!t&&e&&e.__esModule?i:h(i,"default",{value:e,enumerable:!0}),e)),I=x({"src/lib/vendor.mjs"(){r={},s=()=>r,o=e=>{Object.assign(r,e)}}}),k=x({"src/lib/class/Registry.mjs"(){n=class{constructor(){this.data={}}unregister(e){e?delete this.data[e]:this.data={}}register(e,t){this.data[e]=t}registerMany(e){Object.keys(e).forEach((t=>{this.data[t]=e[t]}))}get(e){return this.data[e]}list(){return this.data}}}}),P=x({"src/lib/api/defaults.mjs"(){p=a={},a.defaultInvalidTypeProduct=void 0,a.defaultRandExpMax=10,a.maxRegexRetry=100,a.pruneProperties=[],a.ignoreProperties=[],a.ignoreMissingRefs=!1,a.failOnInvalidTypes=!0,a.failOnInvalidFormat=!0,a.alwaysFakeOptionals=!1,a.optionalsProbability=null,a.fixedProbabilities=!1,a.useExamplesValue=!1,a.useDefaultValue=!1,a.requiredOnly=!1,a.omitNulls=!1,a.minItems=0,a.maxItems=null,a.minLength=0,a.maxLength=null,a.resolveJsonPath=!1,a.reuseProperties=!1,a.fillProperties=!0,a.sortProperties=!1,a.replaceEmptyByRandomValue=!1,a.random=Math.random,a.minDateTime=new Date("1889-12-31T00:00:00.000Z"),a.maxDateTime=new Date("1970-01-01T00:00:01.000Z"),a.renderTitle=!0,a.renderDescription=!0,a.renderComment=!1}}),j=x({"src/lib/class/OptionRegistry.mjs"(){k(),P(),c=class extends n{constructor(){super(),this.data={...p},this._defaults=p}get defaults(){return{...this._defaults}}}}});function A(e,t){return"string"==typeof e?void 0!==t?d.register(e,t):d.get(e):d.registerMany(e)}var O,E,S,D,T,q,C=x({"src/lib/api/option.mjs"(){j(),d=new c,A.getDefaults=()=>d.defaults,u=A}}),$=x({"src/lib/core/constants.mjs"(){E=(O=["integer","number","string","boolean"]).concat(["null"]),S=["array","object"].concat(E),D={ALLOWED_TYPES:O,SCALAR_TYPES:E,ALL_TYPES:S,MIN_NUMBER:-100,MAX_NUMBER:100,MIN_INTEGER:-1e8,MAX_INTEGER:1e8,MOST_NEAR_DATETIME:2524608e6}}}),_=b({"node_modules/ret/lib/types.js"(e,t){t.exports={ROOT:0,GROUP:1,POSITION:2,SET:3,RANGE:4,REPETITION:5,REFERENCE:6,CHAR:7}}}),R=b({"node_modules/ret/lib/sets.js"(e){var t=_(),i=()=>[{type:t.RANGE,from:48,to:57}],r=()=>[{type:t.CHAR,value:95},{type:t.RANGE,from:97,to:122},{type:t.RANGE,from:65,to:90}].concat(i()),s=()=>[{type:t.CHAR,value:9},{type:t.CHAR,value:10},{type:t.CHAR,value:11},{type:t.CHAR,value:12},{type:t.CHAR,value:13},{type:t.CHAR,value:32},{type:t.CHAR,value:160},{type:t.CHAR,value:5760},{type:t.RANGE,from:8192,to:8202},{type:t.CHAR,value:8232},{type:t.CHAR,value:8233},{type:t.CHAR,value:8239},{type:t.CHAR,value:8287},{type:t.CHAR,value:12288},{type:t.CHAR,value:65279}];e.words=()=>({type:t.SET,set:r(),not:!1}),e.notWords=()=>({type:t.SET,set:r(),not:!0}),e.ints=()=>({type:t.SET,set:i(),not:!1}),e.notInts=()=>({type:t.SET,set:i(),not:!0}),e.whitespace=()=>({type:t.SET,set:s(),not:!1}),e.notWhitespace=()=>({type:t.SET,set:s(),not:!0}),e.anyChar=()=>({type:t.SET,set:[{type:t.CHAR,value:10},{type:t.CHAR,value:13},{type:t.CHAR,value:8232},{type:t.CHAR,value:8233}],not:!0})}}),N=b({"node_modules/ret/lib/util.js"(e){var t=_(),i=R(),r={0:0,t:9,n:10,v:11,f:12,r:13};e.strToChars=function(e){return e.replace(/(\[\\b\])|(\\)?\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z[\\\]^?])|([0tnvfr]))/g,(function(e,t,i,s,o,n,a,p){if(i)return e;var c=t?8:s?parseInt(s,16):o?parseInt(o,16):n?parseInt(n,8):a?"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^ ?".indexOf(a):r[p],d=String.fromCharCode(c);return/[[\]{}^$.|?*+()]/.test(d)&&(d="\\"+d),d}))},e.tokenizeClass=(r,s)=>{for(var o,n,a=[],p=/\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\)(.)|([^\]\\]))-(?:\\)?([^\]]))|(\])|(?:\\)?([^])/g;null!=(o=p.exec(r));)if(o[1])a.push(i.words());else if(o[2])a.push(i.ints());else if(o[3])a.push(i.whitespace());else if(o[4])a.push(i.notWords());else if(o[5])a.push(i.notInts());else if(o[6])a.push(i.notWhitespace());else if(o[7])a.push({type:t.RANGE,from:(o[8]||o[9]).charCodeAt(0),to:o[10].charCodeAt(0)});else{if(!(n=o[12]))return[a,p.lastIndex];a.push({type:t.CHAR,value:n.charCodeAt(0)})}e.error(s,"Unterminated character class")},e.error=(e,t)=>{throw new SyntaxError("Invalid regular expression: /"+e+"/: "+t)}}}),U=b({"node_modules/ret/lib/positions.js"(e){var t=_();e.wordBoundary=()=>({type:t.POSITION,value:"b"}),e.nonWordBoundary=()=>({type:t.POSITION,value:"B"}),e.begin=()=>({type:t.POSITION,value:"^"}),e.end=()=>({type:t.POSITION,value:"$"})}}),F=b({"node_modules/ret/lib/index.js"(e,t){var i=N(),r=_(),s=R(),o=U();t.exports=e=>{var t,n,a=0,p={type:r.ROOT,stack:[]},c=p,d=p.stack,u=[],l=t=>{i.error(e,"Nothing to repeat at column "+(t-1))},h=i.strToChars(e);for(t=h.length;a<t;)switch(n=h[a++]){case"\\":switch(n=h[a++]){case"b":d.push(o.wordBoundary());break;case"B":d.push(o.nonWordBoundary());break;case"w":d.push(s.words());break;case"W":d.push(s.notWords());break;case"d":d.push(s.ints());break;case"D":d.push(s.notInts());break;case"s":d.push(s.whitespace());break;case"S":d.push(s.notWhitespace());break;default:/\d/.test(n)?d.push({type:r.REFERENCE,value:parseInt(n,10)}):d.push({type:r.CHAR,value:n.charCodeAt(0)})}break;case"^":d.push(o.begin());break;case"$":d.push(o.end());break;case"[":var m;"^"===h[a]?(m=!0,a++):m=!1;var f=i.tokenizeClass(h.slice(a),e);a+=f[1],d.push({type:r.SET,set:f[0],not:m});break;case".":d.push(s.anyChar());break;case"(":var y={type:r.GROUP,stack:[],remember:!0};"?"===(n=h[a])&&(n=h[a+1],a+=2,"="===n?y.followedBy=!0:"!"===n?y.notFollowedBy=!0:":"!==n&&i.error(e,`Invalid group, character '${n}' after '?' at column ${a-1}`),y.remember=!1),d.push(y),u.push(c),c=y,d=y.stack;break;case")":0===u.length&&i.error(e,"Unmatched ) at column "+(a-1)),d=(c=u.pop()).options?c.options[c.options.length-1]:c.stack;break;case"|":c.options||(c.options=[c.stack],delete c.stack);var g=[];c.options.push(g),d=g;break;case"{":var x,b,v=/^(\d+)(,(\d+)?)?\}/.exec(h.slice(a));null!==v?(0===d.length&&l(a),x=parseInt(v[1],10),b=v[2]?v[3]?parseInt(v[3],10):1/0:x,a+=v[0].length,d.push({type:r.REPETITION,min:x,max:b,value:d.pop()})):d.push({type:r.CHAR,value:123});break;case"?":0===d.length&&l(a),d.push({type:r.REPETITION,min:0,max:1,value:d.pop()});break;case"+":0===d.length&&l(a),d.push({type:r.REPETITION,min:1,max:1/0,value:d.pop()});break;case"*":0===d.length&&l(a),d.push({type:r.REPETITION,min:0,max:1/0,value:d.pop()});break;default:d.push({type:r.CHAR,value:n.charCodeAt(0)})}return 0!==u.length&&i.error(e,"Unterminated group"),p},t.exports.types=r}}),L=b({"node_modules/drange/lib/index.js"(e,t){"use strict";var i=class e{constructor(e,t){this.low=e,this.high=t,this.length=1+t-e}overlaps(e){return!(this.high<e.low||this.low>e.high)}touches(e){return!(this.high+1<e.low||this.low-1>e.high)}add(t){return new e(Math.min(this.low,t.low),Math.max(this.high,t.high))}subtract(t){return t.low<=this.low&&t.high>=this.high?[]:t.low>this.low&&t.high<this.high?[new e(this.low,t.low-1),new e(t.high+1,this.high)]:t.low<=this.low?[new e(t.high+1,this.high)]:[new e(this.low,t.low-1)]}toString(){return this.low==this.high?this.low.toString():this.low+"-"+this.high}};t.exports=class e{constructor(e,t){this.ranges=[],this.length=0,null!=e&&this.add(e,t)}_update_length(){this.length=this.ranges.reduce(((e,t)=>e+t.length),0)}add(t,r){var s=e=>{for(var t=0;t<this.ranges.length&&!e.touches(this.ranges[t]);)t++;for(var i=this.ranges.slice(0,t);t<this.ranges.length&&e.touches(this.ranges[t]);)e=e.add(this.ranges[t]),t++;i.push(e),this.ranges=i.concat(this.ranges.slice(t)),this._update_length()};return t instanceof e?t.ranges.forEach(s):(null==r&&(r=t),s(new i(t,r))),this}subtract(t,r){var s=e=>{for(var t=0;t<this.ranges.length&&!e.overlaps(this.ranges[t]);)t++;for(var i=this.ranges.slice(0,t);t<this.ranges.length&&e.overlaps(this.ranges[t]);)i=i.concat(this.ranges[t].subtract(e)),t++;this.ranges=i.concat(this.ranges.slice(t)),this._update_length()};return t instanceof e?t.ranges.forEach(s):(null==r&&(r=t),s(new i(t,r))),this}intersect(t,r){var s=[],o=e=>{for(var t=0;t<this.ranges.length&&!e.overlaps(this.ranges[t]);)t++;for(;t<this.ranges.length&&e.overlaps(this.ranges[t]);){var r=Math.max(this.ranges[t].low,e.low),o=Math.min(this.ranges[t].high,e.high);s.push(new i(r,o)),t++}};return t instanceof e?t.ranges.forEach(o):(null==r&&(r=t),o(new i(t,r))),this.ranges=s,this._update_length(),this}index(e){for(var t=0;t<this.ranges.length&&this.ranges[t].length<=e;)e-=this.ranges[t].length,t++;return this.ranges[t].low+e}toString(){return"[ "+this.ranges.join(", ")+" ]"}clone(){return new e(this)}numbers(){return this.ranges.reduce(((e,t)=>{for(var i=t.low;i<=t.high;)e.push(i),i++;return e}),[])}subranges(){return this.ranges.map((e=>({low:e.low,high:e.high,length:1+e.high-e.low})))}}}}),V=b({"node_modules/randexp/lib/randexp.js"(e,t){var i=F(),r=L(),s=i.types;t.exports=class e{constructor(e,t){if(this._setDefaults(e),e instanceof RegExp)this.ignoreCase=e.ignoreCase,this.multiline=e.multiline,e=e.source;else{if("string"!=typeof e)throw new Error("Expected a regexp or string");this.ignoreCase=t&&-1!==t.indexOf("i"),this.multiline=t&&-1!==t.indexOf("m")}this.tokens=i(e)}_setDefaults(t){this.max=null!=t.max?t.max:null!=e.prototype.max?e.prototype.max:100,this.defaultRange=t.defaultRange?t.defaultRange:this.defaultRange.clone(),t.randInt&&(this.randInt=t.randInt)}gen(){return this._gen(this.tokens,[])}_gen(e,t){var i,r,o,n,a;switch(e.type){case s.ROOT:case s.GROUP:if(e.followedBy||e.notFollowedBy)return"";for(e.remember&&void 0===e.groupNumber&&(e.groupNumber=t.push(null)-1),r="",n=0,a=(i=e.options?this._randSelect(e.options):e.stack).length;n<a;n++)r+=this._gen(i[n],t);return e.remember&&(t[e.groupNumber]=r),r;case s.POSITION:return"";case s.SET:var p=this._expand(e);return p.length?String.fromCharCode(this._randSelect(p)):"";case s.REPETITION:for(o=this.randInt(e.min,e.max===1/0?e.min+this.max:e.max),r="",n=0;n<o;n++)r+=this._gen(e.value,t);return r;case s.REFERENCE:return t[e.value-1]||"";case s.CHAR:var c=this.ignoreCase&&this._randBool()?this._toOtherCase(e.value):e.value;return String.fromCharCode(c)}}_toOtherCase(e){return e+(97<=e&&e<=122?-32:65<=e&&e<=90?32:0)}_randBool(){return!this.randInt(0,1)}_randSelect(e){return e instanceof r?e.index(this.randInt(0,e.length-1)):e[this.randInt(0,e.length-1)]}_expand(e){if(e.type===i.types.CHAR)return new r(e.value);if(e.type===i.types.RANGE)return new r(e.from,e.to);{let t=new r;for(let i=0;i<e.set.length;i++){let r=this._expand(e.set[i]);if(t.add(r),this.ignoreCase)for(let e=0;e<r.length;e++){let i=r.index(e),s=this._toOtherCase(i);i!==s&&t.add(s)}}return e.not?this.defaultRange.clone().subtract(t):this.defaultRange.clone().intersect(t)}}randInt(e,t){return e+Math.floor(Math.random()*(1+t-e))}get defaultRange(){return this._range=this._range||new r(32,126)}set defaultRange(e){this._range=e}static randexp(t,i){var r;return"string"==typeof t&&(t=new RegExp(t,i)),void 0===t._randexp?(r=new e(t,i),t._randexp=r):(r=t._randexp)._setDefaults(t),r.gen()}static sugar(){RegExp.prototype.gen=function(){return e.randexp(this)}}}}});function M(e){return T.default.prototype.max=u("defaultRandExpMax"),T.default.prototype.randInt=(e,t)=>e+Math.floor(u("random")()*(t-e+1)),new T.default(e).gen()}function z(e){return e[Math.floor(u("random")()*e.length)]}function B(e){let t,i,r=e.length;const s=e.slice();for(;r>0;)i=Math.floor(u("random")()*r),r-=1,t=s[r],s[r]=s[i],s[i]=t;return s}function K(e,t){return u("random")()*(t-e)+e}function H(e,t,i,r,s=!1){return i=void 0===i?D.MIN_NUMBER:i,r=void 0===r?D.MAX_NUMBER:r,(t=void 0===t?r:t)<(e=void 0===e?i:e)&&(t+=e),s?K(e,t):function(e,t){return e=void 0===e?D.MIN_INTEGER:e,t=void 0===t?D.MAX_INTEGER:t,Math.floor(u("random")()*(t-e+1))+e}(e,t)}function Z(e){if(e)return function(e){switch(e){case"seconds":return 60*H(0,60);case"minutes":return 612*H(15,50);case"hours":return 36123*H(12,72);case"days":return 86412345*H(7,30);case"weeks":return 604812345*H(4,52);case"months":return 2592012345*H(2,13);case"years":return 31104012345*H(1,20)}}(e);let t=u("minDateTime"),i=u("maxDateTime");"string"==typeof t&&(t=new Date(t)),"string"==typeof i&&(i=new Date(i));const r=(new Date).getTime();return"number"==typeof t&&(t=new Date(r+t)),"number"==typeof i&&(i=new Date(r+i)),new Date(K(t.getTime(),i.getTime()))}var J,G,W=x({"src/lib/core/random.mjs"(){T=w(V(),1),C(),$(),q={pick:z,date:Z,shuffle:B,number:H,randexp:M}}});function Y(e,t,i){if(t=decodeURIComponent(t),i&&i[t])return re(i[t]);const r=t.replace("#/","/").split("/");let s=e.$ref&&i&&i[e.$ref]||e;for(s||r[0]||(r[0]=e.$ref.split("#/")[0]),i&&t.includes("#/")&&i[r[0]]&&(s=i[r.shift()]),r[0]||r.shift();s&&r.length>0;){const e=r.shift();if(!s[e])throw new Error(`Prop not found: ${e} (${t})`);s=s[e]}return s}function X(e){return"string"==typeof e&&J.test(e)}function Q(e,...t){return t.filter((t=>void 0!==e[t])).length>0}function ee(e){if(e.includes(" "))return new Date(e).toISOString().substr(0,10);let[t,i,r]=e.split("T")[0].split("-");return i=`0${Math.max(1,Math.min(12,i))}`.slice(-2),r=`0${Math.max(1,Math.min(31,r))}`.slice(-2),`${t}-${i}-${r}`}function te(e,t,i){const r={};switch(e||t.type){case"integer":case"number":if(void 0!==t.minimum&&(r.minimum=t.minimum),void 0!==t.maximum&&(r.maximum=t.maximum),t.enum){let e=Math.max(r.minimum||0,0),i=Math.min(r.maximum||1/0,1/0);t.exclusiveMinimum&&e===t.minimum&&(e+=t.multipleOf||1),t.exclusiveMaximum&&i===t.maximum&&(i-=t.multipleOf||1),(e||i!==1/0)&&(t.enum=t.enum.filter((t=>t>=e&&t<=i)))}break;case"string":r.minLength=u("minLength")||0,r.maxLength=u("maxLength")||Number.MAX_SAFE_INTEGER,void 0!==t.minLength&&(r.minLength=Math.max(r.minLength,t.minLength)),void 0!==t.maxLength&&(r.maxLength=Math.min(r.maxLength,t.maxLength))}let s=i(r);if(null==s)return null;switch(e||t.type){case"number":s=X(s)?parseFloat(s):s;break;case"integer":s=X(s)?parseInt(s,10):s;break;case"boolean":s=!!s;break;case"string":{if(function(e){return["number","boolean"].includes(typeof e)}(s))return s;s=String(s);const e=Math.max(r.minLength||0,0),i=Math.min(r.maxLength||1/0,1/0);let o,n=0;for(;s.length<e;)if(o=s,t.pattern?s+=q.randexp(t.pattern):s+=`${q.pick([" ","/","_","-","+","=","@","^"])}${s}`,s===o){if(n+=1,3===n)break}else n=0;if(s.length>i){s=s.substr(0,i);const r=t.pattern?new RegExp(t.pattern):null;if(r&&!r.test(s)){let t=s;const i=u("maxRegexRetry"),o=Math.max(s.length-i,e);for(;t.length>o&&!r.test(t);)t=t.slice(0,-1),r.test(t)&&(s=t)}}switch(t.format){case"date-time":case"datetime":s=new Date(function(e){if(e.includes(" "))return new Date(e).toISOString().substr(0,10);const[t,i]=e.split("T");let[r,s,o]=t.split("-"),[n,a,p]=i.substr(0,8).split(":");return s=`0${Math.max(1,Math.min(12,s))}`.slice(-2),o=`0${Math.max(1,Math.min(31,o))}`.slice(-2),n=`0${Math.max(1,Math.min(23,n))}`.slice(-2),a=`0${Math.max(1,Math.min(59,a))}`.slice(-2),p=`0${Math.max(1,Math.min(59,p))}`.slice(-2),`${r}-${s}-${o}T${n}:${a}:${p}.000Z`}(s)).toISOString().replace(/([0-9])0+Z$/,"$1Z");break;case"full-date":case"date":s=new Date(ee(s)).toISOString().substr(0,10);break;case"time":s=new Date(`1969-01-01 ${s}`).toISOString().substr(11)}break}}return s}function ie(e,t){return Object.keys(t).forEach((i=>{"object"!=typeof t[i]||null===t[i]?e[i]=t[i]:Array.isArray(t[i])?(e[i]=e[i]||[],t[i].forEach(((r,s)=>{"array"===e.type&&"array"===t.type?e[i][s]=ie(e[i][s]||{},r):Array.isArray(e[i])&&-1===e[i].indexOf(r)&&e[i].push(r)}))):"object"!=typeof e[i]||null===e[i]||Array.isArray(e[i])?e[i]=ie({},t[i]):e[i]=ie(e[i],t[i])})),e}function re(e,t=new Map){if(!e||"object"!=typeof e)return e;if(t.has(e))return t.get(e);if(Array.isArray(e)){const i=[];return t.set(e,i),i.push(...e.map((e=>re(e,t)))),i}const i={};return t.set(e,i),Object.keys(e).reduce(((i,r)=>(i[r]=re(e[r],t),i)),i)}function se(e){const t=JSON.stringify(e),i=JSON.stringify(e,null,2);return t.length>400?`${i.substr(0,400)}...`:i}function oe(){return q.pick([!1,!0,null,-1,NaN,Math.PI,1/0,void 0,[],{},Math.random(),Math.random().toString(36).substr(2)])}function ne(e,t){return e.enum?e.enum.includes(t):e.const?e.const===t:void 0}function ae(e,t){const i=ie({},t);if(void 0!==e.minimum&&(i.maximum=e.minimum,i.exclusiveMaximum=!0),void 0!==e.maximum&&(i.minimum=e.maximum>i.maximum?0:e.maximum,i.exclusiveMinimum=!0),void 0!==e.minLength&&(i.maxLength=e.minLength),void 0!==e.maxLength&&(i.minLength=e.maxLength>i.maxLength?0:e.maxLength),e.type)i.type=q.pick(D.SCALAR_TYPES.filter((t=>(Array.isArray(e.type)?e.type:[e.type]).every((e=>"number"===t||"integer"===t?"number"!==e&&"integer"!==e:t!==e)))));else if(e.enum){let t;do{t=oe()}while(-1!==e.enum.indexOf(t));i.enum=[t]}return e.required&&i.properties&&e.required.forEach((e=>{delete i.properties[e]})),i}function pe(e,t){const i=void 0!==t.minimum,r=void 0!==t.maximum;return(i||r)&&(!i||e>=t.minimum)&&(!r||e<=t.maximum)}function ce(e,t){return!t.every((t=>pe(e,t)))}function de(e,t){return 1===t.reduce(((t,i)=>t+(pe(e,i)?1:0)),0)}function ue(e){return["enum","const","default","examples","required","definitions","items","properties"].includes(e)}function le(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,i)=>(Array.isArray(e[i])?t[i]=e[i].slice():t[i]=e[i]instanceof Object?ie({},e[i]):e[i],t)),{})}function he(e,t){return Array.isArray(e)?e.map((e=>he(e,t))):("string"==typeof e&&(e=e.replace(/#\{([\w.-]+)\}/g,((e,i)=>t[i]))),e)}function me(e){return"[object Object]"===Object.prototype.toString.call(e)&&!Object.keys(e).length}function fe(e,t){t=t.items||t;const i=u("alwaysFakeOptionals"),r=Array.isArray(t.required)&&t.required.includes(e)||i,s="function"==typeof t.thunk||t.additionalProperties&&"function"==typeof t.additionalProperties.thunk;return!r&&!s}function ye(e,t,i=!1){return e&&"object"==typeof e?Array.isArray(e)?e.map((e=>ye(e,null==t?void 0:t.items,!0))).filter((e=>void 0!==e)):(Object.keys(e).forEach((i=>{if(me(e[i]))fe(i,t)&&delete e[i];else{let r=t;t&&t.properties&&t.properties[i]&&(r=t.properties[i]);const s=ye(e[i],r);me(s)||(e[i]=s)}void 0===e[i]&&delete e[i]})),Object.keys(e).length||!i?e:void 0):e}var ge,xe,be,ve=x({"src/lib/core/utils.mjs"(){C(),$(),W(),J=/^(0|[1-9][0-9]*)$/,G={hasProperties:Q,getLocalRef:Y,omitProps:le,typecast:te,merge:ie,clone:re,short:se,hasValue:ne,notValue:ae,anyValue:oe,validate:ce,validateValueForSchema:pe,validateValueForOneOf:de,isKey:ue,template:he,shouldClean:fe,clean:ye,isEmpty:me,clampDate:ee}}}),we=x({"src/lib/class/Container.mjs"(){ve(),ge=class{constructor(){this.registry={},this.support={}}reset(e){e?(delete this.registry[e],delete this.support[e]):(this.registry={},this.support={})}extend(e,t){var i;this.registry[e]=t(this.registry[e]),this.support[e]||(this.support[e]=(i=()=>this.registry[e],(e,t,r,s)=>{let o=e,n=[];"object"==typeof e&&(o=Object.keys(e)[0],Array.isArray(e[o])?n=e[o]:n.push(e[o]));const a=o.split(".");let p=i();for(;a.length>1;)p=p[a.shift()];return"function"==typeof(e="object"==typeof p?p[a[0]]:p)&&(e=e.apply(p,n.map((e=>G.template(e,s))))),"[object Object]"===Object.prototype.toString.call(e)&&Object.keys(e).forEach((t=>{if("function"==typeof e[t])throw new Error(`Cannot resolve value for '${r}: ${o}', given: ${e}`)})),e}))}define(e,t){this.support[e]=t}get(e){if(void 0===this.registry[e])throw new ReferenceError(`'${e}' dependency doesn't exist.`);return this.registry[e]}wrap(e){if(!("generate"in e)){const t=Object.keys(e),i={};let r=t.length;for(;r--;){const s=t[r].replace(/^x-/,""),o=this.support[s];if("function"==typeof o){Object.defineProperty(e,"generate",{configurable:!1,enumerable:!1,writable:!1,value:(s,n)=>o.call(i,e[t[r]],e,t[r],s,n.slice())});break}}}return e}}}});function Ie(e,t){if(void 0===e)return xe.list();if("string"==typeof e)if("function"==typeof t)xe.register(e,t);else{if(null!==t&&!1!==t)return xe.get(e);xe.unregister(e)}else xe.registerMany(e)}var ke,Pe,je,Ae,Oe,Ee=x({"src/lib/api/format.mjs"(){k(),xe=new n,be=Ie}}),Se=x({"src/lib/core/error.mjs"(){ke=class extends Error{constructor(e,t){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="ParseError",this.message=e,this.path=t}},Pe=ke}});function De(e,t,i){return Object.keys(e).filter((e=>{const r=Ae.indexOf(t)>-1;return!(!(i.indexOf(e)>-1)||r)})).length>0}function Te(e,t){const i=Object.keys(je);for(let r=0;r<i.length;r+=1){const s=i[r];if(De(e,t[t.length-1],je[s]))return s}}var qe,Ce=x({"src/lib/core/infer.mjs"(){(je={array:["additionalItems","items","maxItems","minItems","uniqueItems"],integer:["exclusiveMaximum","exclusiveMinimum","maximum","minimum","multipleOf"],object:["additionalProperties","dependencies","maxProperties","minProperties","patternProperties","properties","required"],string:["maxLength","minLength","pattern","format"]}).number=je.integer,Ae=["additionalItems","items","additionalProperties","dependencies","patternProperties","properties"],Oe=Te}});function $e(){return u("random")()>.5}var _e,Re,Ne=x({"src/lib/generators/boolean.mjs"(){C(),qe=$e}}),Ue=x({"src/lib/types/boolean.mjs"(){Ne(),_e=qe}});function Fe(){return null}var Le,Ve,Me=x({"src/lib/generators/null.mjs"(){Re=Fe}}),ze=x({"src/lib/types/null.mjs"(){Me(),Le=Re}});function Be(e,t,i,r){const s=[];if(!e.items&&!e.additionalItems){if(G.hasProperties(e,"minItems","maxItems","uniqueItems")&&(0!==e.minItems||0!==e.maxItems))throw new Pe(`missing items for ${G.short(e)}`,t);return s}if(Array.isArray(e.items))return e.items.map(((e,s)=>{const o=t.concat(["items",s]);return r(e,o,i)}));let o=e.minItems,n=e.maxItems;const a=u("minItems"),p=u("maxItems");a&&(o=void 0===o?a:Math.min(a,o)),p&&(n=void 0===n?p:Math.min(p,n),n&&n>p&&(n=p),o&&o>p&&(o=n));const c=!0===u("alwaysFakeOptionals")?1:u("optionalsProbability"),d=u("alwaysFakeOptionals")||u("fixedProbabilities")||!1;let l=q.number(o,n,0,5);null!==c&&(l=Math.max(d?Math.round((n||l)*c):Math.abs(q.number(o,n)*c),o||0));const h="object"==typeof e.additionalItems?e.additionalItems:{};for(let o=s.length;o<l;o+=1){const n=t.concat(["items",o]),a=r(e.items||h,n,i);s.push(a)}if(e.contains&&l>0){const o=q.number(0,l-1);s[o]=r(e.contains,t.concat(["items",o]),i)}return e.uniqueItems?function(e,t,i,r,s,o){const n=[],a=[];function p(e){const t=JSON.stringify(e.value);return-1===a.indexOf(t)&&(a.push(t),n.push(e),!0)}t.forEach(p);let c=100;for(;n.length!==t.length&&(p(o(i.items||r,e,s))||(c-=1),c););return n}(t.concat(["items"]),s,e,h,i,r):s}var Ke,He=x({"src/lib/types/array.mjs"(){W(),ve(),Se(),C(),Ve=Be}});function Ze(e){let t=void 0===e.minimum||e.minimum===-Number.MAX_VALUE?D.MIN_INTEGER:e.minimum,i=void 0===e.maximum||e.maximum===Number.MAX_VALUE?D.MAX_INTEGER:e.maximum;t>i&&(i=Number.MAX_SAFE_INTEGER);const r=e.multipleOf,s=r&&String(r).match(/e-(\d)|\.(\d+)$/);if(s){const e=(Math.random()*q.number(0,10)+1)*r,o=s[1]||s[2].length,n=parseFloat(e.toFixed(o)),a=q.number(t,i-1);return String(n).includes(".")?a+n:(a+n).toExponential()}if(r&&(i=Math.floor(i/r)*r,t=Math.ceil(t/r)*r),e.exclusiveMinimum&&t===e.minimum&&(t+=r||1),e.exclusiveMaximum&&i===e.maximum&&(i-=r||1),t>i)return NaN;if(r){let e=q.number(Math.floor(t/r),Math.floor(i/r))*r;for(;e<t;)e+=r;return e}return q.number(t,i,void 0,void 0,"integer"!==e.type)}var Je,Ge=x({"src/lib/types/number.mjs"(){W(),$(),Ke=Ze}});function We(e){return Math.floor(Ke({...e}))}var Ye,Xe,Qe=x({"src/lib/types/integer.mjs"(){Ge(),Je=We}});function et(e){return q.shuffle(Ye).slice(0,e)}var tt,it,rt=x({"src/lib/generators/words.mjs"(){W(),Ye="Lorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore\net dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\ncommodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est\nlaborum".split(/\W/),Xe=et}});function st(e,t,i,r){const s={},o=e.properties||{},n=e.patternProperties||{},a="boolean"==typeof e.required?[]:(e.required||[]).slice(),p=!1!==e.additionalProperties,c=Object.keys(o),d=Object.keys(n),l=c.concat(d).reduce(((e,t)=>(-1===a.indexOf(t)&&e.push(t),e)),[]),h=a.concat(l),m=p&&!0===e.additionalProperties?tt:e.additionalProperties;if(!p&&0===c.length&&0===d.length&&G.hasProperties(e,"minProperties","maxProperties","dependencies","required"))return null;if(!0===u("requiredOnly"))return a.forEach((e=>{o[e]&&(s[e]=o[e])})),r(s,t.concat(["properties"]),i,e);const f=!0===u("alwaysFakeOptionals")?1:u("optionalsProbability"),y=u("alwaysFakeOptionals")||u("fixedProbabilities")||!1,g=u("ignoreProperties")||[],x=u("reuseProperties"),b=u("fillProperties"),v=e.maxProperties||h.length+(p?q.number(1,5):0);let w=Math.max(e.minProperties||0,a.length),I=Math.max(0,h.length-w);1!==h.length||a.length||(w=Math.max(q.number(b?1:0,v),w)),null!==f&&(I=!0===y?Math.round(w-a.length+f*(h.length-w)):q.number(w-a.length,f*(h.length-w)));const k=q.shuffle(l).slice(0,I),P=l.filter((e=>-1!==k.indexOf(e))),j=null!==f||a.length===v?v:q.number(0,v),A=a.concat(q.shuffle(P).slice(0,j)).slice(0,v),O=[],E=[];if(e.dependencies&&(Object.keys(e.dependencies).forEach((t=>{const i=e.dependencies[t];if(-1!==A.indexOf(t))if(Array.isArray(i))i.forEach((e=>{-1===A.indexOf(e)&&A.push(e)}));else if(Array.isArray(i.oneOf||i.anyOf)){const e=i.oneOf||i.anyOf;E.push({prop:t,values:e})}else O.push(i)})),O.length))return delete e.dependencies,r({allOf:O.concat(e)},t.concat(["properties"]),i,e);const S=[],D=[];A.forEach((e=>{if(o[e]&&["{}","true"].includes(JSON.stringify(o[e].not)))return;for(let t=0;t<g.length;t+=1)if(g[t]instanceof RegExp&&g[t].test(e)||"string"==typeof g[t]&&g[t]===e||"function"==typeof g[t]&&g[t](o[e],e))return void S.push(e);let t;if(!1===m&&-1!==a.indexOf(e)&&(s[e]=o[e]),o[e]&&(s[e]=o[e]),d.forEach((i=>{e.match(new RegExp(i))&&(t=!0,s[e]?G.merge(s[e],n[i]):s[q.randexp(e)]=n[i])})),!t){const t=n[e]||m;t&&!1!==m?s[n[e]?q.randexp(e):e]=o[e]||t:D.push(e)}}));let T=Object.keys(s).length+(b?0:S.length);const C=e=>q.randexp("_?[_a-f\\d]{1,3}"+(e?"\\$?":""));function $(e){let t;do{if(!e.length)break;t=e.shift()}while(s[t]);return t}let _=w;if(p&&!a.length&&(_=Math.max(null===f||m?q.number(b?1:0,v):0,w)),!P.length&&!I&&p&&!0===y&&b){const e=q.number(0,v);for(let t=0;t<e;t+=1)s[Xe(1)+C(e[t])]=m||tt}for(;b&&(d.length||p)&&!(T>=_);){if(p)if(x&&c.length-T>_){let e,t=0;do{if(t+=1,t>1e3)break;e=$(a)||q.pick(c)}while(void 0!==s[e]);void 0===s[e]&&(s[e]=o[e],T+=1)}else if(d.length&&!m){const e=q.pick(d),t=q.randexp(e);s[t]||(s[t]=n[e],T+=1)}else{const e=$(a)||Xe(1)+C();s[e]||(s[e]=m||tt,T+=1)}for(let e=0;T<w&&e<d.length;e+=1){const t=d[e],i=q.randexp(t);s[i]||(s[i]=n[t],T+=1)}}if(0===a.length&&(!p||!1===f)){const e=q.number(w,v);for(;T<e;){const e=$(c);e&&(s[e]=o[e]),T+=1}}let R=s;if(null!==u("sortProperties")){const e=Object.keys(o);R=Object.keys(s).sort(((t,i)=>u("sortProperties")?t.localeCompare(i):e.indexOf(t)-e.indexOf(i))).reduce(((e,t)=>(e[t]=s[t],e)),{})}const N=r(R,t.concat(["properties"]),i,e);return E.forEach((s=>{for(const o of s.values)if(G.hasValue(o.properties[s.prop],N.value[s.prop])){Object.keys(o.properties).forEach((n=>{n!==s.prop&&G.merge(N.value,r(o.properties,t.concat(["properties"]),i,e).value)}));break}})),N}var ot,nt=x({"src/lib/types/object.mjs"(){$(),W(),rt(),ve(),C(),tt={type:D.ALLOWED_TYPES},it=st}});function at(){const e=q.number(1,5);return Xe(e).join(" ")}function pt(e=0,t=140){const i=Math.max(0,e),r=q.number(i,t);let s=at();for(;s.length<i;)s+=at();return s.length>r&&(s=s.substr(0,r)),s}var ct,dt=x({"src/lib/generators/thunk.mjs"(){rt(),W(),ot=pt}});function ut(){return[0,0,0,0].map((()=>q.number(0,255))).join(".")}var lt,ht=x({"src/lib/generators/ipv4.mjs"(){W(),ct=ut}});function mt(){return q.date().toISOString()}var ft,yt=x({"src/lib/generators/dateTime.mjs"(){W(),lt=mt}});function gt(){return lt().slice(0,10)}var xt,bt=x({"src/lib/generators/date.mjs"(){yt(),ft=gt}});function vt(){return lt().slice(11)}var wt,It,kt,Pt,jt=x({"src/lib/generators/time.mjs"(){yt(),xt=vt}});function At(e){return q.randexp(It[e]).replace(kt,((e,t)=>q.randexp(It[t])))}var Ot,Et=x({"src/lib/generators/coreFormat.mjs"(){W(),wt=`https?://{hostname}(?:${"[a-zA-Z][a-zA-Z0-9+-.]*"})+`,(It={email:"[a-zA-Z\\d][a-zA-Z\\d-]{1,13}[a-zA-Z\\d]@{hostname}",hostname:"[a-zA-Z]{1,33}\\.[a-z]{2,4}",ipv6:"[a-f\\d]{4}(:[a-f\\d]{4}){7}",uri:wt,slug:"[a-zA-Z\\d_-]+","uri-reference":`${wt}(?:\\?([a-z]{1,7}(=\\w{1,5})?&){0,3})?`,"uri-template":wt.replace("(?:","(?:/\\{[a-z][:a-zA-Z0-9-]*\\}|"),"json-pointer":`(/(?:${"[a-zA-Z][a-zA-Z0-9+-.]*".replace("]*","/]*")}|~[01]))+`,uuid:"^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$",duration:"^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$"}).iri=It["uri-reference"],It["iri-reference"]=It["uri-reference"],It["idn-email"]=It.email,It["idn-hostname"]=It.hostname,kt=new RegExp(`\\{(${Object.keys(It).join("|")})\\}`),Pt=At}});function St(e){return G.typecast("string",e,(t=>e.format?function(e){const i=be(e.format);if("function"==typeof i)return i(e);switch(e.format){case"date-time":case"datetime":return lt();case"date":return ft();case"time":return xt();case"ipv4":return ct();case"regex":return".+?";case"email":case"hostname":case"ipv6":case"uri":case"uri-reference":case"iri":case"iri-reference":case"idn-email":case"idn-hostname":case"json-pointer":case"slug":case"uri-template":case"uuid":case"duration":return Pt(e.format);default:if(void 0===i){if(u("failOnInvalidFormat"))throw new Error(`unknown registry key ${G.short(e.format)}`);return ot(t.minLength,t.maxLength)}throw new Error(`unsupported format '${e.format}'`)}}(e):e.pattern?q.randexp(e.pattern):ot(t.minLength,t.maxLength)))}var Dt,Tt,qt=x({"src/lib/types/string.mjs"(){dt(),ht(),yt(),bt(),jt(),Et(),C(),Ee(),W(),ve(),Ot=St}}),Ct=x({"src/lib/types/index.mjs"(){Ue(),ze(),He(),Qe(),Ge(),nt(),qt(),Dt={boolean:_e,null:Le,array:Ve,integer:Je,number:Ke,object:it,string:Ot}}});function $t({$comment:e,title:t,description:i}){return Object.entries({comment:e,title:t,description:i}).filter((([,e])=>e)).reduce(((e,[t,i])=>(e[t]=i,e)),{})}function _t(e,t,i,r){if((e=i(e,null,t))&&(e.oneOf||e.anyOf||e.allOf)&&(e=i(e,null,t)),!e)throw new Error(`Cannot traverse at '${t.join(".")}', given '${JSON.stringify(r)}'`);const s={...$t(e),schemaPath:t};if("properties"!==t[t.length-1]){if(u("useExamplesValue")&&Array.isArray(e.examples)){const t=e.examples.concat("default"in e?[e.default]:[]);return{value:G.typecast(null,e,(()=>q.pick(t))),context:s}}if(u("useExamplesValue")&&void 0!==e.example)return{value:G.typecast(null,e,(()=>e.example)),context:s};if(u("useDefaultValue")&&"default"in e&&(""!==e.default||!u("replaceEmptyByRandomValue")))return{value:e.default,context:s};if("template"in e)return{value:G.template(e.template,r),context:s};if("const"in e)return{value:e.const,context:s}}if(e.not&&"object"==typeof e.not&&(e=G.notValue(e.not,G.omitProps(e,["not"]))).type&&"object"===e.type){const{value:o,context:n}=_t(e,t.concat(["not"]),i,r);return{value:G.clean(o,e,!1),context:{...s,items:n}}}if("function"==typeof e.thunk){const{value:o,context:n}=_t(e.thunk(r),t,i);return{value:o,context:{...s,items:n}}}if(e.jsonPath)return{value:e,context:s};let o=e.type;if(Array.isArray(o)?o=q.pick(o):void 0===o&&(o=Oe(e,t)||o,o&&(e.type=o)),"function"==typeof e.generate){const i=G.typecast(null,e,(()=>e.generate(r,t))),n=null===i?"null":typeof i;if(n===o||"number"===n&&"integer"===o||Array.isArray(i)&&"array"===o)return{value:i,context:s}}if("string"==typeof e.pattern)return{value:G.typecast("string",e,(()=>q.randexp(e.pattern))),context:s};if(Array.isArray(e.enum))return{value:G.typecast(null,e,(()=>q.pick(e.enum))),context:s};if("string"==typeof o){if(!Dt[o]){if(u("failOnInvalidTypes"))throw new Pe(`unknown primitive ${G.short(o)}`,t.concat(["type"]));{const r=u("defaultInvalidTypeProduct");return"string"==typeof r&&Dt[r]?{value:Dt[r](e,t,i,_t),context:s}:{value:r,context:s}}}try{const r=Dt[o](e,t,i,_t);return"array"===o?{value:r.map((({value:e})=>e)),context:{...s,items:r.map(Array.isArray(e.items)?({context:e})=>e:({context:e})=>({...e,schemaPath:e.schemaPath.slice(0,-1)}))}}:"object"===o?null!==r?{value:r.value,context:{...s,items:r.context}}:{value:{},context:s}:{value:r,context:s}}catch(e){if(void 0===e.path)throw new Pe(e.stack,t);throw e}}let n={},a={...s};Array.isArray(e)&&(n=[]);const p=u("pruneProperties")||[];return Object.keys(e).forEach((r=>{if(!p.includes(r)&&null!==e[r])if("object"==typeof e[r]&&"definitions"!==r){const{value:s,context:o}=_t(e[r],t.concat([r]),i,n);n[r]=G.clean(s,e[r],!1),a[r]=o,null===n[r]&&u("omitNulls")&&(delete n[r],delete a[r])}else n[r]=e[r]})),{value:n,context:a}}var Rt,Nt,Ut=x({"src/lib/core/traverse.mjs"(){ve(),W(),Se(),Ce(),Ct(),C(),Tt=_t}}),Ft=x({"src/lib/core/buildResolveSchema.mjs"(){C(),W(),ve(),Rt=({refs:e,schema:t,container:i,synchronous:r,refDepthMax:s,refDepthMin:o})=>{const n={},a={};let p,c,d=0;return n.resolveSchema=(l,h,m)=>{if(null==l)return null;if("function"==typeof l.generate)return l;if("string"==typeof(l.$id||l.id)&&(delete l.id,delete l.$id,delete l.$schema),"string"==typeof l.$ref){const i=Math.max(o,s)-1;if("#"===l.$ref||a[l.$ref]<0||p===l.$ref&&++d>i)return"#"!==l.$ref&&c&&c.length===m.length?G.getLocalRef(t,l.$ref,r&&e):(delete l.$ref,l);let n,h;if(void 0===a[l.$ref]&&(a[l.$ref]=q.number(o,s)-1),c=m,p=l.$ref,n=-1===l.$ref.indexOf("#/")?e[l.$ref]||null:G.getLocalRef(t,l.$ref,r&&e)||null,void 0!==n){if(!n&&!0!==u("ignoreMissingRefs"))throw new Error(`Reference not found: ${l.$ref}`);a[l.$ref]-=1,G.merge(l,n||{}),h=r&&n&&n.$ref}return h||delete l.$ref,l}if(Array.isArray(l.allOf)){const e=l.allOf;delete l.allOf,e.forEach((e=>{const t=n.resolveSchema(e,null,m);G.merge(l,"function"==typeof t.thunk?t.thunk(l):t),Array.isArray(l.allOf)&&n.resolveSchema(l,h,m)}))}if(Array.isArray(l.oneOf||l.anyOf)&&"dependencies"!==m[m.length-2]){const e=l.oneOf||l.anyOf;return l.enum&&l.oneOf&&(l.enum=l.enum.filter((t=>G.validate(t,e)))),{thunk(t){const i=G.omitProps(l,["anyOf","oneOf"]),r=q.pick(e);return G.merge(i,r),e.forEach((e=>{e.required&&e!==r&&e.required.forEach((e=>{if(r.required&&r.required.includes(e))return;const s=i.required&&i.required.includes(e);i.properties&&!s&&delete i.properties[e],t&&t.properties&&delete t.properties[e]}))})),i}}}if(Object.keys(l).forEach((e=>{!Array.isArray(l[e])&&"object"!=typeof l[e]||G.isKey(e)||(l[e]=n.resolveSchema(l[e],e,m.concat(e)))})),m){const e=m[m.length-1];if("properties"===e||"items"===e)return l}return i.wrap(l)},n}}});function Lt(e,t,i,r){if(!e||"object"!=typeof e)return e;if(i||(i={}),t||(t=e),Array.isArray(e))return e.map((e=>Lt(e,t,i,r)));if(e.jsonPath){const{JSONPath:o}=s(),n="object"!=typeof e.jsonPath?{path:e.jsonPath}:e.jsonPath;n.group=e.group||n.group||r,n.cycle=e.cycle||n.cycle||!1,n.reverse=e.reverse||n.reverse||!1,n.count=e.count||n.count||1;const a=`${n.group}__${n.path}`;return i[a]||(n.count>1?i[a]=o(n.path,t).slice(0,n.count):i[a]=o(n.path,t)),n.cycle||n.reverse?function(e,t){if(!Array.isArray(e))return e;const i=t?e.pop():e.shift();return t?e.unshift(i):e.push(i),i}(i[a],n.reverse):function(e){return Array.isArray(e)?q.pick(e):e}(i[a])}return Object.keys(e).forEach((r=>{e[r]=Lt(e[r],t,i,r)})),e}function Vt(e,t,i,r){if("[object Object]"!==Object.prototype.toString.call(t))throw new Error("Invalid input, expecting object but given "+typeof t);const s=u("refDepthMin")||0,o=u("refDepthMax")||3;try{const{resolveSchema:n}=Rt({refs:e,schema:t,container:i,synchronous:r,refDepthMin:s,refDepthMax:o}),a=Tt(G.clone(t),[],n);return u("resolveJsonPath")?{value:Lt(a.value),context:a.context}:a}catch(e){throw e.path?new Error(`${e.message} in /${e.path.join("/")}`):e}}var Mt,zt=x({"src/lib/core/run.mjs"(){I(),C(),Ut(),W(),ve(),Ft(),Nt=Vt}});function Bt(e){return e.value}var Kt,Ht,Zt,Jt,Gt=x({"src/lib/renderers/js.mjs"(){Mt=Bt}}),Wt=b({"node_modules/yaml/dist/PlainValue-ec8e588e.js"(e){"use strict";var t={ANCHOR:"&",COMMENT:"#",TAG:"!",DIRECTIVES_END:"-",DOCUMENT_END:"."},i={ALIAS:"ALIAS",BLANK_LINE:"BLANK_LINE",BLOCK_FOLDED:"BLOCK_FOLDED",BLOCK_LITERAL:"BLOCK_LITERAL",COMMENT:"COMMENT",DIRECTIVE:"DIRECTIVE",DOCUMENT:"DOCUMENT",FLOW_MAP:"FLOW_MAP",FLOW_SEQ:"FLOW_SEQ",MAP:"MAP",MAP_KEY:"MAP_KEY",MAP_VALUE:"MAP_VALUE",PLAIN:"PLAIN",QUOTE_DOUBLE:"QUOTE_DOUBLE",QUOTE_SINGLE:"QUOTE_SINGLE",SEQ:"SEQ",SEQ_ITEM:"SEQ_ITEM"};function r(e){const t=[0];let i=e.indexOf("\n");for(;-1!==i;)i+=1,t.push(i),i=e.indexOf("\n",i);return t}function s(e){let t,i;return"string"==typeof e?(t=r(e),i=e):(Array.isArray(e)&&(e=e[0]),e&&e.context&&(e.lineStarts||(e.lineStarts=r(e.context.src)),t=e.lineStarts,i=e.context.src)),{lineStarts:t,src:i}}function o(e,t){if("number"!=typeof e||e<0)return null;const{lineStarts:i,src:r}=s(t);if(!i||!r||e>r.length)return null;for(let t=0;t<i.length;++t){const r=i[t];if(e<r)return{line:t,col:e-i[t-1]+1};if(e===r)return{line:t+1,col:1}}const o=i.length;return{line:o,col:e-i[o-1]+1}}var n=class e{static copy(t){return new e(t.start,t.end)}constructor(e,t){this.start=e,this.end=t||e}isEmpty(){return"number"!=typeof this.start||!this.end||this.end<=this.start}setOrigRange(e,t){const{start:i,end:r}=this;if(0===e.length||r<=e[0])return this.origStart=i,this.origEnd=r,t;let s=t;for(;s<e.length&&!(e[s]>i);)++s;this.origStart=i+s;const o=s;for(;s<e.length&&!(e[s]>=r);)++s;return this.origEnd=r+s,o}},a=class e{static addStringTerminator(t,i,r){if("\n"===r[r.length-1])return r;const s=e.endOfWhiteSpace(t,i);return s>=t.length||"\n"===t[s]?r+"\n":r}static atDocumentBoundary(e,i,r){const s=e[i];if(!s)return!0;const o=e[i-1];if(o&&"\n"!==o)return!1;if(r){if(s!==r)return!1}else if(s!==t.DIRECTIVES_END&&s!==t.DOCUMENT_END)return!1;const n=e[i+1],a=e[i+2];if(n!==s||a!==s)return!1;const p=e[i+3];return!p||"\n"===p||"\t"===p||" "===p}static endOfIdentifier(e,t){let i=e[t];const r="<"===i,s=r?["\n","\t"," ",">"]:["\n","\t"," ","[","]","{","}",","];for(;i&&-1===s.indexOf(i);)i=e[t+=1];return r&&">"===i&&(t+=1),t}static endOfIndent(e,t){let i=e[t];for(;" "===i;)i=e[t+=1];return t}static endOfLine(e,t){let i=e[t];for(;i&&"\n"!==i;)i=e[t+=1];return t}static endOfWhiteSpace(e,t){let i=e[t];for(;"\t"===i||" "===i;)i=e[t+=1];return t}static startOfLine(e,t){let i=e[t-1];if("\n"===i)return t;for(;i&&"\n"!==i;)i=e[t-=1];return t+1}static endOfBlockIndent(t,i,r){const s=e.endOfIndent(t,r);if(s>r+i)return s;{const i=e.endOfWhiteSpace(t,s),r=t[i];if(!r||"\n"===r)return i}return null}static atBlank(e,t,i){const r=e[t];return"\n"===r||"\t"===r||" "===r||i&&!r}static nextNodeIsIndented(e,t,i){return!(!e||t<0)&&(t>0||i&&"-"===e)}static normalizeOffset(t,i){const r=t[i];return r?"\n"!==r&&"\n"===t[i-1]?i-1:e.endOfWhiteSpace(t,i):i}static foldNewline(t,i,r){let s=0,o=!1,n="",a=t[i+1];for(;" "===a||"\t"===a||"\n"===a;){switch(a){case"\n":s=0,i+=1,n+="\n";break;case"\t":s<=r&&(o=!0),i=e.endOfWhiteSpace(t,i+2)-1;break;case" ":s+=1,i+=1}a=t[i+1]}return n||(n=" "),a&&s<=r&&(o=!0),{fold:n,offset:i,error:o}}constructor(e,t,i){Object.defineProperty(this,"context",{value:i||null,writable:!0}),this.error=null,this.range=null,this.valueRange=null,this.props=t||[],this.type=e,this.value=null}getPropValue(e,t,i){if(!this.context)return null;const{src:r}=this.context,s=this.props[e];return s&&r[s.start]===t?r.slice(s.start+(i?1:0),s.end):null}get anchor(){for(let e=0;e<this.props.length;++e){const i=this.getPropValue(e,t.ANCHOR,!0);if(null!=i)return i}return null}get comment(){const e=[];for(let i=0;i<this.props.length;++i){const r=this.getPropValue(i,t.COMMENT,!0);null!=r&&e.push(r)}return e.length>0?e.join("\n"):null}commentHasRequiredWhitespace(t){const{src:i}=this.context;if(this.header&&t===this.header.end)return!1;if(!this.valueRange)return!1;const{end:r}=this.valueRange;return t!==r||e.atBlank(i,r-1)}get hasComment(){if(this.context){const{src:e}=this.context;for(let i=0;i<this.props.length;++i)if(e[this.props[i].start]===t.COMMENT)return!0}return!1}get hasProps(){if(this.context){const{src:e}=this.context;for(let i=0;i<this.props.length;++i)if(e[this.props[i].start]!==t.COMMENT)return!0}return!1}get includesTrailingLines(){return!1}get jsonLike(){return-1!==[i.FLOW_MAP,i.FLOW_SEQ,i.QUOTE_DOUBLE,i.QUOTE_SINGLE].indexOf(this.type)}get rangeAsLinePos(){if(!this.range||!this.context)return;const e=o(this.range.start,this.context.root);return e?{start:e,end:o(this.range.end,this.context.root)}:void 0}get rawValue(){if(!this.valueRange||!this.context)return null;const{start:e,end:t}=this.valueRange;return this.context.src.slice(e,t)}get tag(){for(let e=0;e<this.props.length;++e){const i=this.getPropValue(e,t.TAG,!1);if(null!=i){if("<"===i[1])return{verbatim:i.slice(2,-1)};{const[e,t,r]=i.match(/^(.*!)([^!]*)$/);return{handle:t,suffix:r}}}}return null}get valueRangeContainsNewline(){if(!this.valueRange||!this.context)return!1;const{start:e,end:t}=this.valueRange,{src:i}=this.context;for(let r=e;r<t;++r)if("\n"===i[r])return!0;return!1}parseComment(i){const{src:r}=this.context;if(r[i]===t.COMMENT){const t=e.endOfLine(r,i+1),s=new n(i,t);return this.props.push(s),t}return i}setOrigRanges(e,t){return this.range&&(t=this.range.setOrigRange(e,t)),this.valueRange&&this.valueRange.setOrigRange(e,t),this.props.forEach((i=>i.setOrigRange(e,t))),t}toString(){const{context:{src:t},range:i,value:r}=this;if(null!=r)return r;const s=t.slice(i.start,i.end);return e.addStringTerminator(t,i.end,s)}},p=class extends Error{constructor(e,t,i){if(!(i&&t instanceof a))throw new Error(`Invalid arguments for new ${e}`);super(),this.name=e,this.message=i,this.source=t}makePretty(){if(!this.source)return;this.nodeType=this.source.type;const e=this.source.context&&this.source.context.root;if("number"==typeof this.offset){this.range=new n(this.offset,this.offset+1);const t=e&&o(this.offset,e);if(t){const e={line:t.line,col:t.col+1};this.linePos={start:t,end:e}}delete this.offset}else this.range=this.source.range,this.linePos=this.source.rangeAsLinePos;if(this.linePos){const{line:t,col:i}=this.linePos.start;this.message+=` at line ${t}, column ${i}`;const r=e&&function({start:e,end:t},i,r=80){let o=function(e,t){const{lineStarts:i,src:r}=s(t);if(!i||!(e>=1)||e>i.length)return null;const o=i[e-1];let n=i[e];for(;n&&n>o&&"\n"===r[n-1];)--n;return r.slice(o,n)}(e.line,i);if(!o)return null;let{col:n}=e;if(o.length>r)if(n<=r-10)o=o.substr(0,r-1)+"…";else{const e=Math.round(r/2);o.length>n+e&&(o=o.substr(0,n+e-1)+"…"),n-=o.length-r,o="…"+o.substr(1-r)}let a=1,p="";return t&&(t.line===e.line&&n+(t.col-e.col)<=r+1?a=t.col-e.col:(a=Math.min(o.length+1,r)-n,p="…")),`${o}\n${n>1?" ".repeat(n-1):""}${"^".repeat(a)}${p}`}(this.linePos,e);r&&(this.message+=`:\n\n${r}\n`)}delete this.source}},c=class extends p{constructor(e,t){super("YAMLSemanticError",e,t)}};e.Char=t,e.Node=a,e.PlainValue=class e extends a{static endOfLine(e,t,i){let r=e[t],s=t;for(;r&&"\n"!==r&&(!i||"["!==r&&"]"!==r&&"{"!==r&&"}"!==r&&","!==r);){const t=e[s+1];if(":"===r&&(!t||"\n"===t||"\t"===t||" "===t||i&&","===t))break;if((" "===r||"\t"===r)&&"#"===t)break;s+=1,r=t}return s}get strValue(){if(!this.valueRange||!this.context)return null;let{start:e,end:t}=this.valueRange;const{src:i}=this.context;let r=i[t-1];for(;e<t&&("\n"===r||"\t"===r||" "===r);)r=i[--t-1];let s="";for(let r=e;r<t;++r){const e=i[r];if("\n"===e){const{fold:e,offset:t}=a.foldNewline(i,r,-1);s+=e,r=t}else if(" "===e||"\t"===e){const o=r;let n=i[r+1];for(;r<t&&(" "===n||"\t"===n);)r+=1,n=i[r+1];"\n"!==n&&(s+=r>o?i.slice(o,r+1):e)}else s+=e}const o=i[e];switch(o){case"\t":return{errors:[new c(this,"Plain value cannot start with a tab character")],str:s};case"@":case"`":return{errors:[new c(this,`Plain value cannot start with reserved character ${o}`)],str:s};default:return s}}parseBlockValue(t){const{indent:i,inFlow:r,src:s}=this.context;let o=t,n=t;for(let t=s[o];"\n"===t&&!a.atDocumentBoundary(s,o+1);t=s[o]){const t=a.endOfBlockIndent(s,i,o+1);if(null===t||"#"===s[t])break;"\n"===s[t]?o=t:(n=e.endOfLine(s,t,r),o=n)}return this.valueRange.isEmpty()&&(this.valueRange.start=t),this.valueRange.end=n,n}parse(t,i){this.context=t;const{inFlow:r,src:s}=t;let o=i;const p=s[o];return p&&"#"!==p&&"\n"!==p&&(o=e.endOfLine(s,i,r)),this.valueRange=new n(i,o),o=a.endOfWhiteSpace(s,o),o=this.parseComment(o),this.hasComment&&!this.valueRange.isEmpty()||(o=this.parseBlockValue(o)),o}},e.Range=n,e.Type=i,e.YAMLError=p,e.YAMLReferenceError=class extends p{constructor(e,t){super("YAMLReferenceError",e,t)}},e.YAMLSemanticError=c,e.YAMLSyntaxError=class extends p{constructor(e,t){super("YAMLSyntaxError",e,t)}},e.YAMLWarning=class extends p{constructor(e,t){super("YAMLWarning",e,t)}},e._defineProperty=function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e},e.defaultTagPrefix="tag:yaml.org,2002:",e.defaultTags={MAP:"tag:yaml.org,2002:map",SEQ:"tag:yaml.org,2002:seq",STR:"tag:yaml.org,2002:str"}}}),Yt=b({"node_modules/yaml/dist/resolveSeq-d03cb037.js"(e){"use strict";var t=Wt();function i(e,t,i){return i?-1===i.indexOf("\n")?`${e} #${i}`:`${e}\n`+i.replace(/^/gm,`${t||""}#`):e}var r=class{};function s(e,t,i){if(Array.isArray(e))return e.map(((e,t)=>s(e,String(t),i)));if(e&&"function"==typeof e.toJSON){const r=i&&i.anchors&&i.anchors.get(e);r&&(i.onCreate=e=>{r.res=e,delete i.onCreate});const s=e.toJSON(t,i);return r&&i.onCreate&&i.onCreate(s),s}return i&&i.keep||"bigint"!=typeof e?e:Number(e)}var o=class extends r{constructor(e){super(),this.value=e}toJSON(e,t){return t&&t.keep?this.value:s(this.value,e,t)}toString(){return String(this.value)}};function n(e,t,i){let r=i;for(let e=t.length-1;e>=0;--e){const i=t[e];if(Number.isInteger(i)&&i>=0){const e=[];e[i]=r,r=e}else{const e={};Object.defineProperty(e,i,{value:r,writable:!0,enumerable:!0,configurable:!0}),r=e}}return e.createNode(r,!1)}var a=e=>null==e||"object"==typeof e&&e[Symbol.iterator]().next().done,p=class e extends r{constructor(e){super(),t._defineProperty(this,"items",[]),this.schema=e}addIn(t,i){if(a(t))this.add(i);else{const[r,...s]=t,o=this.get(r,!0);if(o instanceof e)o.addIn(s,i);else{if(void 0!==o||!this.schema)throw new Error(`Expected YAML collection at ${r}. Remaining path: ${s}`);this.set(r,n(this.schema,s,i))}}}deleteIn([t,...i]){if(0===i.length)return this.delete(t);const r=this.get(t,!0);if(r instanceof e)return r.deleteIn(i);throw new Error(`Expected YAML collection at ${t}. Remaining path: ${i}`)}getIn([t,...i],r){const s=this.get(t,!0);return 0===i.length?!r&&s instanceof o?s.value:s:s instanceof e?s.getIn(i,r):void 0}hasAllNullValues(){return this.items.every((e=>{if(!e||"PAIR"!==e.type)return!1;const t=e.value;return null==t||t instanceof o&&null==t.value&&!t.commentBefore&&!t.comment&&!t.tag}))}hasIn([t,...i]){if(0===i.length)return this.has(t);const r=this.get(t,!0);return r instanceof e&&r.hasIn(i)}setIn([t,...i],r){if(0===i.length)this.set(t,r);else{const s=this.get(t,!0);if(s instanceof e)s.setIn(i,r);else{if(void 0!==s||!this.schema)throw new Error(`Expected YAML collection at ${t}. Remaining path: ${i}`);this.set(t,n(this.schema,i,r))}}}toJSON(){return null}toString(r,{blockItem:s,flowChars:o,isMap:n,itemIndent:a},p,c){const{indent:d,indentStep:u,stringify:l}=r,h=this.type===t.Type.FLOW_MAP||this.type===t.Type.FLOW_SEQ||r.inFlow;h&&(a+=u);const m=n&&this.hasAllNullValues();r=Object.assign({},r,{allNullValues:m,indent:a,inFlow:h,type:null});let f=!1,y=!1;const g=this.items.reduce(((e,t,s)=>{let o;t&&(!f&&t.spaceBefore&&e.push({type:"comment",str:""}),t.commentBefore&&t.commentBefore.match(/^.*$/gm).forEach((t=>{e.push({type:"comment",str:`#${t}`})})),t.comment&&(o=t.comment),h&&(!f&&t.spaceBefore||t.commentBefore||t.comment||t.key&&(t.key.commentBefore||t.key.comment)||t.value&&(t.value.commentBefore||t.value.comment))&&(y=!0)),f=!1;let n=l(t,r,(()=>o=null),(()=>f=!0));return h&&!y&&n.includes("\n")&&(y=!0),h&&s<this.items.length-1&&(n+=","),n=i(n,a,o),f&&(o||h)&&(f=!1),e.push({type:"item",str:n}),e}),[]);let x;if(0===g.length)x=o.start+o.end;else if(h){const{start:t,end:i}=o,r=g.map((e=>e.str));if(y||r.reduce(((e,t)=>e+t.length+2),2)>e.maxFlowStringSingleLineLength){x=t;for(const e of r)x+=e?`\n${u}${d}${e}`:"\n";x+=`\n${d}${i}`}else x=`${t} ${r.join(" ")} ${i}`}else{const e=g.map(s);x=e.shift();for(const t of e)x+=t?`\n${d}${t}`:"\n"}return this.comment?(x+="\n"+this.comment.replace(/^/gm,`${d}#`),p&&p()):f&&c&&c(),x}};function c(e){let t=e instanceof o?e.value:e;return t&&"string"==typeof t&&(t=Number(t)),Number.isInteger(t)&&t>=0?t:null}t._defineProperty(p,"maxFlowStringSingleLineLength",60);var d=class extends p{add(e){this.items.push(e)}delete(e){const t=c(e);return"number"==typeof t&&this.items.splice(t,1).length>0}get(e,t){const i=c(e);if("number"!=typeof i)return;const r=this.items[i];return!t&&r instanceof o?r.value:r}has(e){const t=c(e);return"number"==typeof t&&t<this.items.length}set(e,t){const i=c(e);if("number"!=typeof i)throw new Error(`Expected a valid index, not ${e}.`);this.items[i]=t}toJSON(e,t){const i=[];t&&t.onCreate&&t.onCreate(i);let r=0;for(const e of this.items)i.push(s(e,String(r++),t));return i}toString(e,t,i){return e?super.toString(e,{blockItem:e=>"comment"===e.type?e.str:`- ${e.str}`,flowChars:{start:"[",end:"]"},isMap:!1,itemIndent:(e.indent||"")+"  "},t,i):JSON.stringify(this)}},u=class e extends r{constructor(t,i=null){super(),this.key=t,this.value=i,this.type=e.Type.PAIR}get commentBefore(){return this.key instanceof r?this.key.commentBefore:void 0}set commentBefore(e){if(null==this.key&&(this.key=new o(null)),!(this.key instanceof r))throw new Error("Pair.commentBefore is an alias for Pair.key.commentBefore. To set it, the key must be a Node.");this.key.commentBefore=e}addToJSMap(e,t){const i=s(this.key,"",e);if(t instanceof Map){const r=s(this.value,i,e);t.set(i,r)}else if(t instanceof Set)t.add(i);else{const o=((e,t,i)=>null===t?"":"object"!=typeof t?String(t):e instanceof r&&i&&i.doc?e.toString({anchors:Object.create(null),doc:i.doc,indent:"",indentStep:i.indentStep,inFlow:!0,inStringifyKey:!0,stringify:i.stringify}):JSON.stringify(t))(this.key,i,e),n=s(this.value,o,e);o in t?Object.defineProperty(t,o,{value:n,writable:!0,enumerable:!0,configurable:!0}):t[o]=n}return t}toJSON(e,t){const i=t&&t.mapAsMap?new Map:{};return this.addToJSMap(t,i)}toString(e,s,n){if(!e||!e.doc)return JSON.stringify(this);const{indent:a,indentSeq:c,simpleKeys:u}=e.doc.options;let{key:l,value:h}=this,m=l instanceof r&&l.comment;if(u){if(m)throw new Error("With simple keys, key nodes cannot have comments");if(l instanceof p)throw new Error("With simple keys, collection cannot be used as a key value")}let f=!u&&(!l||m||(l instanceof r?l instanceof p||l.type===t.Type.BLOCK_FOLDED||l.type===t.Type.BLOCK_LITERAL:"object"==typeof l));const{doc:y,indent:g,indentStep:x,stringify:b}=e;e=Object.assign({},e,{implicitKey:!f,indent:g+x});let v=!1,w=b(l,e,(()=>m=null),(()=>v=!0));if(w=i(w,e.indent,m),!f&&w.length>1024){if(u)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");f=!0}if(e.allNullValues&&!u)return this.comment?(w=i(w,e.indent,this.comment),s&&s()):v&&!m&&n&&n(),e.inFlow&&!f?w:`? ${w}`;w=f?`? ${w}\n${g}:`:`${w}:`,this.comment&&(w=i(w,e.indent,this.comment),s&&s());let I="",k=null;h instanceof r?(h.spaceBefore&&(I="\n"),h.commentBefore&&(I+=`\n${h.commentBefore.replace(/^/gm,`${e.indent}#`)}`),k=h.comment):h&&"object"==typeof h&&(h=y.schema.createNode(h,!0)),e.implicitKey=!1,!f&&!this.comment&&h instanceof o&&(e.indentAtStart=w.length+1),v=!1,!c&&a>=2&&!e.inFlow&&!f&&h instanceof d&&h.type!==t.Type.FLOW_SEQ&&!h.tag&&!y.anchors.getName(h)&&(e.indent=e.indent.substr(2));const P=b(h,e,(()=>k=null),(()=>v=!0));let j=" ";return I||this.comment?j=`${I}\n${e.indent}`:!f&&h instanceof p?("["===P[0]||"{"===P[0])&&!P.includes("\n")||(j=`\n${e.indent}`):"\n"===P[0]&&(j=""),v&&!k&&n&&n(),i(w+j+P,e.indent,k)}};t._defineProperty(u,"Type",{PAIR:"PAIR",MERGE_PAIR:"MERGE_PAIR"});var l=(e,t)=>{if(e instanceof h){const i=t.get(e.source);return i.count*i.aliasCount}if(e instanceof p){let i=0;for(const r of e.items){const e=l(r,t);e>i&&(i=e)}return i}if(e instanceof u){const i=l(e.key,t),r=l(e.value,t);return Math.max(i,r)}return 1},h=class e extends r{static stringify({range:e,source:t},{anchors:i,doc:r,implicitKey:s,inStringifyKey:o}){let n=Object.keys(i).find((e=>i[e]===t));if(!n&&o&&(n=r.anchors.getName(t)||r.anchors.newName()),n)return`*${n}${s?" ":""}`;const a=r.anchors.getName(t)?"Alias node must be after source node":"Source node not found for alias node";throw new Error(`${a} [${e}]`)}constructor(e){super(),this.source=e,this.type=t.Type.ALIAS}set tag(e){throw new Error("Alias nodes cannot have tags")}toJSON(e,i){if(!i)return s(this.source,e,i);const{anchors:r,maxAliasCount:o}=i,n=r.get(this.source);if(!n||void 0===n.res){const e="This should not happen: Alias anchor was not resolved?";throw this.cstNode?new t.YAMLReferenceError(this.cstNode,e):new ReferenceError(e)}if(o>=0&&(n.count+=1,0===n.aliasCount&&(n.aliasCount=l(this.source,r)),n.count*n.aliasCount>o)){const e="Excessive alias count indicates a resource exhaustion attack";throw this.cstNode?new t.YAMLReferenceError(this.cstNode,e):new ReferenceError(e)}return n.res}toString(t){return e.stringify(this,t)}};function m(e,t){const i=t instanceof o?t.value:t;for(const r of e)if(r instanceof u){if(r.key===t||r.key===i)return r;if(r.key&&r.key.value===i)return r}}t._defineProperty(h,"default",!0);var f=class extends p{add(e,t){e?e instanceof u||(e=new u(e.key||e,e.value)):e=new u(e);const i=m(this.items,e.key),r=this.schema&&this.schema.sortMapEntries;if(i){if(!t)throw new Error(`Key ${e.key} already set`);i.value=e.value}else if(r){const t=this.items.findIndex((t=>r(e,t)<0));-1===t?this.items.push(e):this.items.splice(t,0,e)}else this.items.push(e)}delete(e){const t=m(this.items,e);return!!t&&this.items.splice(this.items.indexOf(t),1).length>0}get(e,t){const i=m(this.items,e),r=i&&i.value;return!t&&r instanceof o?r.value:r}has(e){return!!m(this.items,e)}set(e,t){this.add(new u(e,t),!0)}toJSON(e,t,i){const r=i?new i:t&&t.mapAsMap?new Map:{};t&&t.onCreate&&t.onCreate(r);for(const e of this.items)e.addToJSMap(t,r);return r}toString(e,t,i){if(!e)return JSON.stringify(this);for(const e of this.items)if(!(e instanceof u))throw new Error(`Map items must all be pairs; found ${JSON.stringify(e)} instead`);return super.toString(e,{blockItem:e=>e.str,flowChars:{start:"{",end:"}"},isMap:!0,itemIndent:e.indent||""},t,i)}},y=class extends u{constructor(e){if(e instanceof u){let t=e.value;t instanceof d||(t=new d,t.items.push(e.value),t.range=e.value.range),super(e.key,t),this.range=e.range}else super(new o("<<"),new d);this.type=u.Type.MERGE_PAIR}addToJSMap(e,t){for(const{source:i}of this.value.items){if(!(i instanceof f))throw new Error("Merge sources must be maps");const r=i.toJSON(null,e,Map);for(const[e,i]of r)t instanceof Map?t.has(e)||t.set(e,i):t instanceof Set?t.add(e):Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{value:i,writable:!0,enumerable:!0,configurable:!0})}return t}toString(e,t){const i=this.value;if(i.items.length>1)return super.toString(e,t);this.value=i.items[0];const r=super.toString(e,t);return this.value=i,r}},g={defaultType:t.Type.BLOCK_LITERAL,lineWidth:76},x={defaultType:t.Type.PLAIN,doubleQuoted:{jsonEncoding:!1,minMultiLineLength:40},fold:{lineWidth:80,minContentWidth:20}};function b(e,t,i){for(const{format:i,test:r,resolve:s}of t)if(r){const t=e.match(r);if(t){let e=s.apply(null,t);return e instanceof o||(e=new o(e)),i&&(e.format=i),e}}return i&&(e=i(e)),new o(e)}var v="flow",w="block",I="quoted",k=(e,t)=>{let i=e[t+1];for(;" "===i||"\t"===i;){do{i=e[t+=1]}while(i&&"\n"!==i);i=e[t+1]}return t};function P(e,t,i,{indentAtStart:r,lineWidth:s=80,minContentWidth:o=20,onFold:n,onOverflow:a}){if(!s||s<0)return e;const p=Math.max(1+o,1+s-t.length);if(e.length<=p)return e;const c=[],d={};let u,l,h=s-t.length;"number"==typeof r&&(r>s-Math.max(2,o)?c.push(0):h=s-r);let m=!1,f=-1,y=-1,g=-1;i===w&&(f=k(e,f),-1!==f&&(h=f+p));for(let t;t=e[f+=1];){if(i===I&&"\\"===t){switch(y=f,e[f+1]){case"x":f+=3;break;case"u":f+=5;break;case"U":f+=9;break;default:f+=1}g=f}if("\n"===t)i===w&&(f=k(e,f)),h=f+p,u=void 0;else{if(" "===t&&l&&" "!==l&&"\n"!==l&&"\t"!==l){const t=e[f+1];t&&" "!==t&&"\n"!==t&&"\t"!==t&&(u=f)}if(f>=h)if(u)c.push(u),h=u+p,u=void 0;else if(i===I){for(;" "===l||"\t"===l;)l=t,t=e[f+=1],m=!0;const i=f>g+1?f-2:y-1;if(d[i])return e;c.push(i),d[i]=!0,h=i+p,u=void 0}else m=!0}l=t}if(m&&a&&a(),0===c.length)return e;n&&n();let x=e.slice(0,c[0]);for(let r=0;r<c.length;++r){const s=c[r],o=c[r+1]||e.length;0===s?x=`\n${t}${e.slice(0,o)}`:(i===I&&d[s]&&(x+=`${e[s]}\\`),x+=`\n${t}${e.slice(s+1,o)}`)}return x}var j=({indentAtStart:e})=>e?Object.assign({indentAtStart:e},x.fold):x.fold,A=e=>/^(%|---|\.\.\.)/m.test(e);function O(e,t){const{implicitKey:i}=t,{jsonEncoding:r,minMultiLineLength:s}=x.doubleQuoted,o=JSON.stringify(e);if(r)return o;const n=t.indent||(A(e)?"  ":"");let a="",p=0;for(let e=0,t=o[e];t;t=o[++e])if(" "===t&&"\\"===o[e+1]&&"n"===o[e+2]&&(a+=o.slice(p,e)+"\\ ",e+=1,p=e,t="\\"),"\\"===t)switch(o[e+1]){case"u":{a+=o.slice(p,e);const t=o.substr(e+2,4);switch(t){case"0000":a+="\\0";break;case"0007":a+="\\a";break;case"000b":a+="\\v";break;case"001b":a+="\\e";break;case"0085":a+="\\N";break;case"00a0":a+="\\_";break;case"2028":a+="\\L";break;case"2029":a+="\\P";break;default:"00"===t.substr(0,2)?a+="\\x"+t.substr(2):a+=o.substr(e,6)}e+=5,p=e+1}break;case"n":if(i||'"'===o[e+2]||o.length<s)e+=1;else{for(a+=o.slice(p,e)+"\n\n";"\\"===o[e+2]&&"n"===o[e+3]&&'"'!==o[e+4];)a+="\n",e+=2;a+=n," "===o[e+2]&&(a+="\\"),e+=1,p=e+1}break;default:e+=1}return a=p?a+o.slice(p):o,i?a:P(a,n,I,j(t))}function E(e,t){if(t.implicitKey){if(/\n/.test(e))return O(e,t)}else if(/[ \t]\n|\n[ \t]/.test(e))return O(e,t);const i=t.indent||(A(e)?"  ":""),r="'"+e.replace(/'/g,"''").replace(/\n+/g,`$&\n${i}`)+"'";return t.implicitKey?r:P(r,i,v,j(t))}function S({comment:e,type:i,value:r},s,o,n){if(/\n[\t ]+$/.test(r)||/^\s*$/.test(r))return O(r,s);const a=s.indent||(s.forceBlockIndent||A(r)?"  ":""),p=a?"2":"1",c=i!==t.Type.BLOCK_FOLDED&&(i===t.Type.BLOCK_LITERAL||!function(e,t,i){if(!t||t<0)return!1;const r=t-i,s=e.length;if(s<=r)return!1;for(let t=0,i=0;t<s;++t)if("\n"===e[t]){if(t-i>r)return!0;if(i=t+1,s-i<=r)return!1}return!0}(r,x.fold.lineWidth,a.length));let d=c?"|":">";if(!r)return d+"\n";let u="",l="";if(r=r.replace(/[\n\t ]*$/,(e=>{const t=e.indexOf("\n");return-1===t?d+="-":r!==e&&t===e.length-1||(d+="+",n&&n()),l=e.replace(/\n$/,""),""})).replace(/^[\n ]*/,(e=>{-1!==e.indexOf(" ")&&(d+=p);const t=e.match(/ +$/);return t?(u=e.slice(0,-t[0].length),t[0]):(u=e,"")})),l&&(l=l.replace(/\n+(?!\n|$)/g,`$&${a}`)),u&&(u=u.replace(/\n+/g,`$&${a}`)),e&&(d+=" #"+e.replace(/ ?[\r\n]+/g," "),o&&o()),!r)return`${d}${p}\n${a}${l}`;if(c)return r=r.replace(/\n+/g,`$&${a}`),`${d}\n${a}${u}${r}${l}`;r=r.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${a}`);const h=P(`${u}${r}${l}`,a,w,x.fold);return`${d}\n${a}${h}`}function D(e,i){let r,s,o;switch(i.type){case t.Type.FLOW_MAP:r="}",s="flow map";break;case t.Type.FLOW_SEQ:r="]",s="flow sequence";break;default:return void e.push(new t.YAMLSemanticError(i,"Not a flow collection!?"))}for(let e=i.items.length-1;e>=0;--e){const r=i.items[e];if(!r||r.type!==t.Type.COMMENT){o=r;break}}if(o&&o.char!==r){const n=`Expected ${s} to end with ${r}`;let a;"number"==typeof o.offset?(a=new t.YAMLSemanticError(i,n),a.offset=o.offset+1):(a=new t.YAMLSemanticError(o,n),o.range&&o.range.end&&(a.offset=o.range.end-o.range.start)),e.push(a)}}function T(e,i){const r=i.context.src[i.range.start-1];if("\n"!==r&&"\t"!==r&&" "!==r){const r="Comments must be separated from other tokens by white space characters";e.push(new t.YAMLSemanticError(i,r))}}function q(e,i){const r=String(i),s=r.substr(0,8)+"..."+r.substr(-8);return new t.YAMLSemanticError(e,`The "${s}" key is too long`)}function C(e,t){for(const{afterKey:i,before:r,comment:s}of t){let t=e.items[r];t?(i&&t.value&&(t=t.value),void 0===s?!i&&t.commentBefore||(t.spaceBefore=!0):t.commentBefore?t.commentBefore+="\n"+s:t.commentBefore=s):void 0!==s&&(e.comment?e.comment+="\n"+s:e.comment=s)}}function $(e,t){const i=t.strValue;return i?"string"==typeof i?i:(i.errors.forEach((i=>{i.source||(i.source=t),e.errors.push(i)})),i.str):""}function _(e,t,i){const{tags:r}=e.schema,s=[];for(const n of r)if(n.tag===i){if(!n.test){const i=n.resolve(e,t);return i instanceof p?i:new o(i)}s.push(n)}const n=$(e,t);return"string"==typeof n&&s.length>0?b(n,s,r.scalarFallback):null}function R(e,i){if(!i)return null;i.error&&e.errors.push(i.error);const{comments:r,hasAnchor:s,hasTag:o}=function(e,i){const r={before:[],after:[]};let s=!1,o=!1;const n=(e=>{if(!e)return!1;const{type:i}=e;return i===t.Type.MAP_KEY||i===t.Type.MAP_VALUE||i===t.Type.SEQ_ITEM})(i.context.parent)?i.context.parent.props.concat(i.props):i.props;for(const{start:a,end:p}of n)switch(i.context.src[a]){case t.Char.COMMENT:{if(!i.commentHasRequiredWhitespace(a)){const r="Comments must be separated from other tokens by white space characters";e.push(new t.YAMLSemanticError(i,r))}const{header:s,valueRange:o}=i;(o&&(a>o.start||s&&a>s.start)?r.after:r.before).push(i.context.src.slice(a+1,p));break}case t.Char.ANCHOR:if(s){const r="A node can have at most one anchor";e.push(new t.YAMLSemanticError(i,r))}s=!0;break;case t.Char.TAG:if(o){const r="A node can have at most one tag";e.push(new t.YAMLSemanticError(i,r))}o=!0}return{comments:r,hasAnchor:s,hasTag:o}}(e.errors,i);if(s){const{anchors:t}=e,r=i.anchor,s=t.getNode(r);s&&(t.map[t.newName(r)]=s),t.map[r]=i}if(i.type===t.Type.ALIAS&&(s||o)){const r="An alias node must not specify any properties";e.errors.push(new t.YAMLSemanticError(i,r))}const n=function(e,i){const{anchors:r,errors:s,schema:o}=e;if(i.type===t.Type.ALIAS){const e=i.rawValue,o=r.getNode(e);if(!o){const r=`Aliased anchor not found: ${e}`;return s.push(new t.YAMLReferenceError(i,r)),null}const n=new h(o);return r._cstAliases.push(n),n}const n=function(e,i){const{tag:r,type:s}=i;let o=!1;if(r){const{handle:s,suffix:n,verbatim:a}=r;if(a){if("!"!==a&&"!!"!==a)return a;const r=`Verbatim tags aren't resolved, so ${a} is invalid.`;e.errors.push(new t.YAMLSemanticError(i,r))}else if("!"!==s||n)try{return function(e,i){const{handle:r,suffix:s}=i.tag;let o=e.tagPrefixes.find((e=>e.handle===r));if(!o){const s=e.getDefaults().tagPrefixes;if(s&&(o=s.find((e=>e.handle===r))),!o)throw new t.YAMLSemanticError(i,`The ${r} tag handle is non-default and was not declared.`)}if(!s)throw new t.YAMLSemanticError(i,`The ${r} tag has no suffix.`);if("!"===r&&"1.0"===(e.version||e.options.version)){if("^"===s[0])return e.warnings.push(new t.YAMLWarning(i,"YAML 1.0 ^ tag expansion is not supported")),s;if(/[:/]/.test(s)){const e=s.match(/^([a-z0-9-]+)\/(.*)/i);return e?`tag:${e[1]}.yaml.org,2002:${e[2]}`:`tag:${s}`}}return o.prefix+decodeURIComponent(s)}(e,i)}catch(t){e.errors.push(t)}else o=!0}switch(s){case t.Type.BLOCK_FOLDED:case t.Type.BLOCK_LITERAL:case t.Type.QUOTE_DOUBLE:case t.Type.QUOTE_SINGLE:return t.defaultTags.STR;case t.Type.FLOW_MAP:case t.Type.MAP:return t.defaultTags.MAP;case t.Type.FLOW_SEQ:case t.Type.SEQ:return t.defaultTags.SEQ;case t.Type.PLAIN:return o?t.defaultTags.STR:null;default:return null}}(e,i);if(n)return function(e,i,r){try{const t=_(e,i,r);if(t)return r&&i.tag&&(t.tag=r),t}catch(t){return t.source||(t.source=i),e.errors.push(t),null}try{const s=function({type:e}){switch(e){case t.Type.FLOW_MAP:case t.Type.MAP:return t.defaultTags.MAP;case t.Type.FLOW_SEQ:case t.Type.SEQ:return t.defaultTags.SEQ;default:return t.defaultTags.STR}}(i);if(!s)throw new Error(`The tag ${r} is unavailable`);const o=`The tag ${r} is unavailable, falling back to ${s}`;e.warnings.push(new t.YAMLWarning(i,o));const n=_(e,i,s);return n.tag=r,n}catch(r){const s=new t.YAMLReferenceError(i,r.message);return s.stack=r.stack,e.errors.push(s),null}}(e,i,n);if(i.type!==t.Type.PLAIN){const e=`Failed to resolve ${i.type} node here`;return s.push(new t.YAMLSyntaxError(i,e)),null}try{return b($(e,i),o.tags,o.tags.scalarFallback)}catch(e){return e.source||(e.source=i),s.push(e),null}}(e,i);if(n){n.range=[i.range.start,i.range.end],e.options.keepCstNodes&&(n.cstNode=i),e.options.keepNodeTypes&&(n.type=i.type);const t=r.before.join("\n");t&&(n.commentBefore=n.commentBefore?`${n.commentBefore}\n${t}`:t);const s=r.after.join("\n");s&&(n.comment=n.comment?`${n.comment}\n${s}`:s)}return i.resolved=n}function N(e,i){if(!(({context:{lineStart:e,node:i,src:r},props:s})=>{if(0===s.length)return!1;const{start:o}=s[0];if(i&&o>i.valueRange.start)return!1;if(r[o]!==t.Char.COMMENT)return!1;for(let t=e;t<o;++t)if("\n"===r[t])return!1;return!0})(e))return;const r=e.getPropValue(0,t.Char.COMMENT,!0);let s=!1;const o=i.value.commentBefore;if(o&&o.startsWith(r))i.value.commentBefore=o.substr(r.length+1),s=!0;else{const t=i.value.comment;!e.node&&t&&t.startsWith(r)&&(i.value.comment=t.substr(r.length+1),s=!0)}s&&(i.comment=r)}e.Alias=h,e.Collection=p,e.Merge=y,e.Node=r,e.Pair=u,e.Scalar=o,e.YAMLMap=f,e.YAMLSeq=d,e.addComment=i,e.binaryOptions=g,e.boolOptions={trueStr:"true",falseStr:"false"},e.findPair=m,e.intOptions={asBigInt:!1},e.isEmptyPath=a,e.nullOptions={nullStr:"null"},e.resolveMap=function(e,i){if(i.type!==t.Type.MAP&&i.type!==t.Type.FLOW_MAP){const r=`A ${i.type} node cannot be resolved as a mapping`;return e.errors.push(new t.YAMLSyntaxError(i,r)),null}const{comments:r,items:s}=i.type===t.Type.FLOW_MAP?function(e,i){const r=[],s=[];let o,n=!1,a="{";for(let p=0;p<i.items.length;++p){const c=i.items[p];if("string"==typeof c.char){const{char:r,offset:d}=c;if("?"===r&&void 0===o&&!n){n=!0,a=":";continue}if(":"===r){if(void 0===o&&(o=null),":"===a){a=",";continue}}else if(n&&(void 0===o&&","!==r&&(o=null),n=!1),void 0!==o&&(s.push(new u(o)),o=void 0,","===r)){a=":";continue}if("}"===r){if(p===i.items.length-1)continue}else if(r===a){a=":";continue}const l=`Flow map contains an unexpected ${r}`,h=new t.YAMLSyntaxError(i,l);h.offset=d,e.errors.push(h)}else c.type===t.Type.BLANK_LINE?r.push({afterKey:!!o,before:s.length}):c.type===t.Type.COMMENT?(T(e.errors,c),r.push({afterKey:!!o,before:s.length,comment:c.comment})):void 0===o?(","===a&&e.errors.push(new t.YAMLSemanticError(c,"Separator , missing in flow map")),o=R(e,c)):(","!==a&&e.errors.push(new t.YAMLSemanticError(c,"Indicator : missing in flow map entry")),s.push(new u(o,R(e,c))),o=void 0,n=!1)}return D(e.errors,i),void 0!==o&&s.push(new u(o)),{comments:r,items:s}}(e,i):function(e,i){const r=[],s=[];let o,n=null;for(let a=0;a<i.items.length;++a){const p=i.items[a];switch(p.type){case t.Type.BLANK_LINE:r.push({afterKey:!!o,before:s.length});break;case t.Type.COMMENT:r.push({afterKey:!!o,before:s.length,comment:p.comment});break;case t.Type.MAP_KEY:void 0!==o&&s.push(new u(o)),p.error&&e.errors.push(p.error),o=R(e,p.node),n=null;break;case t.Type.MAP_VALUE:{if(void 0===o&&(o=null),p.error&&e.errors.push(p.error),!p.context.atLineStart&&p.node&&p.node.type===t.Type.MAP&&!p.node.context.atLineStart){const i="Nested mappings are not allowed in compact mappings";e.errors.push(new t.YAMLSemanticError(p.node,i))}let r=p.node;if(!r&&p.props.length>0){r=new t.PlainValue(t.Type.PLAIN,[]),r.context={parent:p,src:p.context.src};const e=p.range.start+1;if(r.range={start:e,end:e},r.valueRange={start:e,end:e},"number"==typeof p.range.origStart){const e=p.range.origStart+1;r.range.origStart=r.range.origEnd=e,r.valueRange.origStart=r.valueRange.origEnd=e}}const a=new u(o,R(e,r));N(p,a),s.push(a),o&&"number"==typeof n&&p.range.start>n+1024&&e.errors.push(q(i,o)),o=void 0,n=null}break;default:void 0!==o&&s.push(new u(o)),o=R(e,p),n=p.range.start,p.error&&e.errors.push(p.error);e:for(let r=a+1;;++r){const s=i.items[r];switch(s&&s.type){case t.Type.BLANK_LINE:case t.Type.COMMENT:continue e;case t.Type.MAP_VALUE:break e;default:{const i="Implicit map keys need to be followed by map values";e.errors.push(new t.YAMLSemanticError(p,i));break e}}}if(p.valueRangeContainsNewline){const i="Implicit map keys need to be on a single line";e.errors.push(new t.YAMLSemanticError(p,i))}}}return void 0!==o&&s.push(new u(o)),{comments:r,items:s}}(e,i),o=new f;o.items=s,C(o,r);let n=!1;for(let r=0;r<s.length;++r){const{key:o}=s[r];if(o instanceof p&&(n=!0),e.schema.merge&&o&&"<<"===o.value){s[r]=new y(s[r]);const o=s[r].value.items;let n=null;o.some((e=>{if(e instanceof h){const{type:i}=e.source;return i!==t.Type.MAP&&i!==t.Type.FLOW_MAP&&(n="Merge nodes aliases can only point to maps")}return n="Merge nodes can only have Alias nodes as values"})),n&&e.errors.push(new t.YAMLSemanticError(i,n))}else for(let n=r+1;n<s.length;++n){const{key:r}=s[n];if(o===r||o&&r&&Object.prototype.hasOwnProperty.call(o,"value")&&o.value===r.value){const r=`Map keys must be unique; "${o}" is repeated`;e.errors.push(new t.YAMLSemanticError(i,r));break}}}if(n&&!e.options.mapAsMap){const r="Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.";e.warnings.push(new t.YAMLWarning(i,r))}return i.resolved=o,o},e.resolveNode=R,e.resolveSeq=function(e,i){if(i.type!==t.Type.SEQ&&i.type!==t.Type.FLOW_SEQ){const r=`A ${i.type} node cannot be resolved as a sequence`;return e.errors.push(new t.YAMLSyntaxError(i,r)),null}const{comments:r,items:s}=i.type===t.Type.FLOW_SEQ?function(e,i){const r=[],s=[];let o,n=!1,a=null,p="[",c=null;for(let d=0;d<i.items.length;++d){const l=i.items[d];if("string"==typeof l.char){const{char:r,offset:h}=l;if(":"===r||!n&&void 0===o||(n&&void 0===o&&(o=p?s.pop():null),s.push(new u(o)),n=!1,o=void 0,a=null),r===p)p=null;else if(p||"?"!==r){if("["!==p&&":"===r&&void 0===o){if(","===p){if(o=s.pop(),o instanceof u){const r="Chaining flow sequence pairs is invalid",s=new t.YAMLSemanticError(i,r);s.offset=h,e.errors.push(s)}if(!n&&"number"==typeof a){const r=l.range?l.range.start:l.offset;r>a+1024&&e.errors.push(q(i,o));const{src:s}=c.context;for(let i=a;i<r;++i)if("\n"===s[i]){const i="Implicit keys of flow sequence pairs need to be on a single line";e.errors.push(new t.YAMLSemanticError(c,i));break}}}else o=null;a=null,n=!1,p=null}else if("["===p||"]"!==r||d<i.items.length-1){const s=`Flow sequence contains an unexpected ${r}`,o=new t.YAMLSyntaxError(i,s);o.offset=h,e.errors.push(o)}}else n=!0}else if(l.type===t.Type.BLANK_LINE)r.push({before:s.length});else if(l.type===t.Type.COMMENT)T(e.errors,l),r.push({comment:l.comment,before:s.length});else{if(p){const i=`Expected a ${p} in flow sequence`;e.errors.push(new t.YAMLSemanticError(l,i))}const i=R(e,l);void 0===o?(s.push(i),c=l):(s.push(new u(o,i)),o=void 0),a=l.range.start,p=","}}return D(e.errors,i),void 0!==o&&s.push(new u(o)),{comments:r,items:s}}(e,i):function(e,i){const r=[],s=[];for(let o=0;o<i.items.length;++o){const n=i.items[o];switch(n.type){case t.Type.BLANK_LINE:r.push({before:s.length});break;case t.Type.COMMENT:r.push({comment:n.comment,before:s.length});break;case t.Type.SEQ_ITEM:if(n.error&&e.errors.push(n.error),s.push(R(e,n.node)),n.hasProps){const i="Sequence items cannot have tags or anchors before the - indicator";e.errors.push(new t.YAMLSemanticError(n,i))}break;default:n.error&&e.errors.push(n.error),e.errors.push(new t.YAMLSyntaxError(n,`Unexpected ${n.type} node in sequence`))}}return{comments:r,items:s}}(e,i),o=new d;if(o.items=s,C(o,r),!e.options.mapAsMap&&s.some((e=>e instanceof u&&e.key instanceof p))){const r="Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.";e.warnings.push(new t.YAMLWarning(i,r))}return i.resolved=o,o},e.resolveString=$,e.strOptions=x,e.stringifyNumber=function({format:e,minFractionDigits:t,tag:i,value:r}){if("bigint"==typeof r)return String(r);if(!isFinite(r))return isNaN(r)?".nan":r<0?"-.inf":".inf";let s=JSON.stringify(r);if(!e&&t&&(!i||"tag:yaml.org,2002:float"===i)&&/^\d/.test(s)){let e=s.indexOf(".");e<0&&(e=s.length,s+=".");let i=t-(s.length-e-1);for(;i-- >0;)s+="0"}return s},e.stringifyString=function(e,i,r,s){const{defaultType:o}=x,{implicitKey:n,inFlow:a}=i;let{type:p,value:c}=e;"string"!=typeof c&&(c=String(c),e=Object.assign({},e,{value:c}));const d=o=>{switch(o){case t.Type.BLOCK_FOLDED:case t.Type.BLOCK_LITERAL:return S(e,i,r,s);case t.Type.QUOTE_DOUBLE:return O(c,i);case t.Type.QUOTE_SINGLE:return E(c,i);case t.Type.PLAIN:return function(e,i,r,s){const{comment:o,type:n,value:a}=e,{actualString:p,implicitKey:c,indent:d,inFlow:u}=i;if(c&&/[\n[\]{},]/.test(a)||u&&/[[\]{},]/.test(a))return O(a,i);if(!a||/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(a))return c||u||-1===a.indexOf("\n")?-1!==a.indexOf('"')&&-1===a.indexOf("'")?E(a,i):O(a,i):S(e,i,r,s);if(!c&&!u&&n!==t.Type.PLAIN&&-1!==a.indexOf("\n"))return S(e,i,r,s);if(""===d&&A(a))return i.forceBlockIndent=!0,S(e,i,r,s);const l=a.replace(/\n+/g,`$&\n${d}`);if(p){const{tags:e}=i.doc.schema;if("string"!=typeof b(l,e,e.scalarFallback).value)return O(a,i)}const h=c?l:P(l,d,v,j(i));return!o||u||-1===h.indexOf("\n")&&-1===o.indexOf("\n")?h:(r&&r(),function(e,t,i){return i?`#${i.replace(/[\s\S]^/gm,`$&${t}#`)}\n${t}${e}`:e}(h,d,o))}(e,i,r,s);default:return null}};p!==t.Type.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f]/.test(c)?p=t.Type.QUOTE_DOUBLE:!n&&!a||p!==t.Type.BLOCK_FOLDED&&p!==t.Type.BLOCK_LITERAL||(p=t.Type.QUOTE_DOUBLE);let u=d(p);if(null===u&&(u=d(o),null===u))throw new Error(`Unsupported default string type ${o}`);return u},e.toJSON=s}}),Xt=b({"node_modules/yaml/dist/warnings-1000a372.js"(e){"use strict";var t=Wt(),i=Yt(),r={identify:e=>e instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve:(e,r)=>{const s=i.resolveString(e,r);if("function"==typeof Buffer)return Buffer.from(s,"base64");if("function"==typeof atob){const e=atob(s.replace(/[\n\r]/g,"")),t=new Uint8Array(e.length);for(let i=0;i<e.length;++i)t[i]=e.charCodeAt(i);return t}{const i="This environment does not support reading binary tags; either Buffer or atob is required";return e.errors.push(new t.YAMLReferenceError(r,i)),null}},options:i.binaryOptions,stringify:({comment:e,type:r,value:s},o,n,a)=>{let p;if("function"==typeof Buffer)p=s instanceof Buffer?s.toString("base64"):Buffer.from(s.buffer).toString("base64");else{if("function"!=typeof btoa)throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let e="";for(let t=0;t<s.length;++t)e+=String.fromCharCode(s[t]);p=btoa(e)}}if(r||(r=i.binaryOptions.defaultType),r===t.Type.QUOTE_DOUBLE)s=p;else{const{lineWidth:e}=i.binaryOptions,o=Math.ceil(p.length/e),n=new Array(o);for(let t=0,i=0;t<o;++t,i+=e)n[t]=p.substr(i,e);s=n.join(r===t.Type.BLOCK_LITERAL?"\n":" ")}return i.stringifyString({comment:e,type:r,value:s},o,n,a)}};function s(e,r){const s=i.resolveSeq(e,r);for(let e=0;e<s.items.length;++e){let o=s.items[e];if(!(o instanceof i.Pair)){if(o instanceof i.YAMLMap){if(o.items.length>1){const e="Each pair must have its own sequence indicator";throw new t.YAMLSemanticError(r,e)}const e=o.items[0]||new i.Pair;o.commentBefore&&(e.commentBefore=e.commentBefore?`${o.commentBefore}\n${e.commentBefore}`:o.commentBefore),o.comment&&(e.comment=e.comment?`${o.comment}\n${e.comment}`:o.comment),o=e}s.items[e]=o instanceof i.Pair?o:new i.Pair(o)}}return s}function o(e,t,r){const s=new i.YAMLSeq(e);s.tag="tag:yaml.org,2002:pairs";for(const i of t){let t,o;if(Array.isArray(i)){if(2!==i.length)throw new TypeError(`Expected [key, value] tuple: ${i}`);t=i[0],o=i[1]}else if(i&&i instanceof Object){const e=Object.keys(i);if(1!==e.length)throw new TypeError(`Expected { key: value } tuple: ${i}`);t=e[0],o=i[t]}else t=i;const n=e.createPair(t,o,r);s.items.push(n)}return s}var n={default:!1,tag:"tag:yaml.org,2002:pairs",resolve:s,createNode:o},a=class e extends i.YAMLSeq{constructor(){super(),t._defineProperty(this,"add",i.YAMLMap.prototype.add.bind(this)),t._defineProperty(this,"delete",i.YAMLMap.prototype.delete.bind(this)),t._defineProperty(this,"get",i.YAMLMap.prototype.get.bind(this)),t._defineProperty(this,"has",i.YAMLMap.prototype.has.bind(this)),t._defineProperty(this,"set",i.YAMLMap.prototype.set.bind(this)),this.tag=e.tag}toJSON(e,t){const r=new Map;t&&t.onCreate&&t.onCreate(r);for(const e of this.items){let s,o;if(e instanceof i.Pair?(s=i.toJSON(e.key,"",t),o=i.toJSON(e.value,s,t)):s=i.toJSON(e,"",t),r.has(s))throw new Error("Ordered maps must not include duplicate keys");r.set(s,o)}return r}};t._defineProperty(a,"tag","tag:yaml.org,2002:omap");var p={identify:e=>e instanceof Map,nodeClass:a,default:!1,tag:"tag:yaml.org,2002:omap",resolve:function(e,r){const o=s(e,r),n=[];for(const{key:e}of o.items)if(e instanceof i.Scalar){if(n.includes(e.value)){const e="Ordered maps must not include duplicate keys";throw new t.YAMLSemanticError(r,e)}n.push(e.value)}return Object.assign(new a,o)},createNode:function(e,t,i){const r=o(e,t,i),s=new a;return s.items=r.items,s}},c=class e extends i.YAMLMap{constructor(){super(),this.tag=e.tag}add(e){const t=e instanceof i.Pair?e:new i.Pair(e);i.findPair(this.items,t.key)||this.items.push(t)}get(e,t){const r=i.findPair(this.items,e);return!t&&r instanceof i.Pair?r.key instanceof i.Scalar?r.key.value:r.key:r}set(e,t){if("boolean"!=typeof t)throw new Error("Expected boolean value for set(key, value) in a YAML set, not "+typeof t);const r=i.findPair(this.items,e);r&&!t?this.items.splice(this.items.indexOf(r),1):!r&&t&&this.items.push(new i.Pair(e))}toJSON(e,t){return super.toJSON(e,t,Set)}toString(e,t,i){if(!e)return JSON.stringify(this);if(this.hasAllNullValues())return super.toString(e,t,i);throw new Error("Set items must all have null values")}};t._defineProperty(c,"tag","tag:yaml.org,2002:set");var d={identify:e=>e instanceof Set,nodeClass:c,default:!1,tag:"tag:yaml.org,2002:set",resolve:function(e,r){const s=i.resolveMap(e,r);if(!s.hasAllNullValues())throw new t.YAMLSemanticError(r,"Set items must all have null values");return Object.assign(new c,s)},createNode:function(e,t,i){const r=new c;for(const s of t)r.items.push(e.createPair(s,null,i));return r}},u=(e,t)=>{const i=t.split(":").reduce(((e,t)=>60*e+Number(t)),0);return"-"===e?-i:i},l=({value:e})=>{if(isNaN(e)||!isFinite(e))return i.stringifyNumber(e);let t="";e<0&&(t="-",e=Math.abs(e));const r=[e%60];return e<60?r.unshift(0):(e=Math.round((e-r[0])/60),r.unshift(e%60),e>=60&&(e=Math.round((e-r[0])/60),r.unshift(e))),t+r.map((e=>e<10?"0"+String(e):String(e))).join(":").replace(/000000\d*$/,"")},h={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,resolve:(e,t,i)=>u(t,i.replace(/_/g,"")),stringify:l},m={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*)$/,resolve:(e,t,i)=>u(t,i.replace(/_/g,"")),stringify:l},f={identify:e=>e instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^(?:([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?)$"),resolve:(e,t,i,r,s,o,n,a,p)=>{a&&(a=(a+"00").substr(1,3));let c=Date.UTC(t,i-1,r,s||0,o||0,n||0,a||0);if(p&&"Z"!==p){let e=u(p[0],p.slice(1));Math.abs(e)<30&&(e*=60),c-=6e4*e}return new Date(c)},stringify:({value:e})=>e.toISOString().replace(/((T00:00)?:00)?\.000Z$/,"")};function y(e){const t="undefined"!=typeof process&&process.env||{};return e?"undefined"!=typeof YAML_SILENCE_DEPRECATION_WARNINGS?!YAML_SILENCE_DEPRECATION_WARNINGS:!t.YAML_SILENCE_DEPRECATION_WARNINGS:"undefined"!=typeof YAML_SILENCE_WARNINGS?!YAML_SILENCE_WARNINGS:!t.YAML_SILENCE_WARNINGS}function g(e,t){if(y(!1)){const i="undefined"!=typeof process&&process.emitWarning;i?i(e,t):console.warn(t?`${t}: ${e}`:e)}}var x={};e.binary=r,e.floatTime=m,e.intTime=h,e.omap=p,e.pairs=n,e.set=d,e.timestamp=f,e.warn=g,e.warnFileDeprecation=function(e){y(!0)&&g(`The endpoint 'yaml/${e.replace(/.*yaml[/\\]/i,"").replace(/\.js$/,"").replace(/\\/g,"/")}' will be removed in a future release.`,"DeprecationWarning")},e.warnOptionDeprecation=function(e,t){if(!x[e]&&y(!0)){x[e]=!0;let i=`The option '${e}' will be removed in a future release`;i+=t?`, use '${t}' instead.`:".",g(i,"DeprecationWarning")}}}}),Qt=b({"node_modules/yaml/dist/Schema-88e323a7.js"(e){"use strict";var t=Wt(),i=Yt(),r=Xt(),s={createNode:function(e,t,r){const s=new i.YAMLMap(e);if(t instanceof Map)for(const[i,o]of t)s.items.push(e.createPair(i,o,r));else if(t&&"object"==typeof t)for(const i of Object.keys(t))s.items.push(e.createPair(i,t[i],r));return"function"==typeof e.sortMapEntries&&s.items.sort(e.sortMapEntries),s},default:!0,nodeClass:i.YAMLMap,tag:"tag:yaml.org,2002:map",resolve:i.resolveMap},o={createNode:function(e,t,r){const s=new i.YAMLSeq(e);if(t&&t[Symbol.iterator])for(const i of t){const t=e.createNode(i,r.wrapScalars,null,r);s.items.push(t)}return s},default:!0,nodeClass:i.YAMLSeq,tag:"tag:yaml.org,2002:seq",resolve:i.resolveSeq},n={identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:i.resolveString,stringify:(e,t,r,s)=>(t=Object.assign({actualString:!0},t),i.stringifyString(e,t,r,s)),options:i.strOptions},a=[s,o,n],p=e=>"bigint"==typeof e||Number.isInteger(e),c=(e,t,r)=>i.intOptions.asBigInt?BigInt(e):parseInt(t,r);function d(e,t,r){const{value:s}=e;return p(s)&&s>=0?r+s.toString(t):i.stringifyNumber(e)}var u={identify:e=>null==e,createNode:(e,t,r)=>r.wrapScalars?new i.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>null,options:i.nullOptions,stringify:()=>i.nullOptions.nullStr},l={identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:e=>"t"===e[0]||"T"===e[0],options:i.boolOptions,stringify:({value:e})=>e?i.boolOptions.trueStr:i.boolOptions.falseStr},h={identify:e=>p(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o([0-7]+)$/,resolve:(e,t)=>c(e,t,8),options:i.intOptions,stringify:e=>d(e,8,"0o")},m={identify:p,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:e=>c(e,e,10),options:i.intOptions,stringify:i.stringifyNumber},f={identify:e=>p(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x([0-9a-fA-F]+)$/,resolve:(e,t)=>c(e,t,16),options:i.intOptions,stringify:e=>d(e,16,"0x")},y={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.inf|(\.nan))$/i,resolve:(e,t)=>t?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:i.stringifyNumber},g={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e),stringify:({value:e})=>Number(e).toExponential()},x={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.([0-9]+)|[0-9]+\.([0-9]*))$/,resolve(e,t,r){const s=t||r,o=new i.Scalar(parseFloat(e));return s&&"0"===s[s.length-1]&&(o.minFractionDigits=s.length),o},stringify:i.stringifyNumber},b=a.concat([u,l,h,m,f,y,g,x]),v=e=>"bigint"==typeof e||Number.isInteger(e),w=({value:e})=>JSON.stringify(e),I=[s,o,{identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:i.resolveString,stringify:w},{identify:e=>null==e,createNode:(e,t,r)=>r.wrapScalars?new i.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:w},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:e=>"true"===e,stringify:w},{identify:v,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:e=>i.intOptions.asBigInt?BigInt(e):parseInt(e,10),stringify:({value:e})=>v(e)?e.toString():JSON.stringify(e)},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:e=>parseFloat(e),stringify:w}];I.scalarFallback=e=>{throw new SyntaxError(`Unresolved plain scalar ${JSON.stringify(e)}`)};var k=({value:e})=>e?i.boolOptions.trueStr:i.boolOptions.falseStr,P=e=>"bigint"==typeof e||Number.isInteger(e);function j(e,t,r){let s=t.replace(/_/g,"");if(i.intOptions.asBigInt){switch(r){case 2:s=`0b${s}`;break;case 8:s=`0o${s}`;break;case 16:s=`0x${s}`}const t=BigInt(s);return"-"===e?BigInt(-1)*t:t}const o=parseInt(s,r);return"-"===e?-1*o:o}function A(e,t,r){const{value:s}=e;if(P(s)){const e=s.toString(t);return s<0?"-"+r+e.substr(1):r+e}return i.stringifyNumber(e)}var O=a.concat([{identify:e=>null==e,createNode:(e,t,r)=>r.wrapScalars?new i.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>null,options:i.nullOptions,stringify:()=>i.nullOptions.nullStr},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>!0,options:i.boolOptions,stringify:k},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,resolve:()=>!1,options:i.boolOptions,stringify:k},{identify:P,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^([-+]?)0b([0-1_]+)$/,resolve:(e,t,i)=>j(t,i,2),stringify:e=>A(e,2,"0b")},{identify:P,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^([-+]?)0([0-7_]+)$/,resolve:(e,t,i)=>j(t,i,8),stringify:e=>A(e,8,"0")},{identify:P,default:!0,tag:"tag:yaml.org,2002:int",test:/^([-+]?)([0-9][0-9_]*)$/,resolve:(e,t,i)=>j(t,i,10),stringify:i.stringifyNumber},{identify:P,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^([-+]?)0x([0-9a-fA-F_]+)$/,resolve:(e,t,i)=>j(t,i,16),stringify:e=>A(e,16,"0x")},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.inf|(\.nan))$/i,resolve:(e,t)=>t?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:i.stringifyNumber},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?([0-9][0-9_]*)?(\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e.replace(/_/g,"")),stringify:({value:e})=>Number(e).toExponential()},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.([0-9_]*)$/,resolve(e,t){const r=new i.Scalar(parseFloat(e.replace(/_/g,"")));if(t){const e=t.replace(/_/g,"");"0"===e[e.length-1]&&(r.minFractionDigits=e.length)}return r},stringify:i.stringifyNumber}],r.binary,r.omap,r.pairs,r.set,r.intTime,r.floatTime,r.timestamp),E={core:b,failsafe:a,json:I,yaml11:O},S={binary:r.binary,bool:l,float:x,floatExp:g,floatNaN:y,floatTime:r.floatTime,int:m,intHex:f,intOct:h,intTime:r.intTime,map:s,null:u,omap:r.omap,pairs:r.pairs,seq:o,set:r.set,timestamp:r.timestamp};var D=(e,t)=>e.key<t.key?-1:e.key>t.key?1:0,T=class e{constructor({customTags:e,merge:t,schema:i,sortMapEntries:s,tags:o}){this.merge=!!t,this.name=i,this.sortMapEntries=!0===s?D:s||null,!e&&o&&r.warnOptionDeprecation("tags","customTags"),this.tags=function(e,t,i,r){let s=e[r.replace(/\W/g,"")];if(!s){const t=Object.keys(e).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown schema "${r}"; use one of ${t}`)}if(Array.isArray(i))for(const e of i)s=s.concat(e);else"function"==typeof i&&(s=i(s.slice()));for(let e=0;e<s.length;++e){const i=s[e];if("string"==typeof i){const r=t[i];if(!r){const e=Object.keys(t).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown custom tag "${i}"; use one of ${e}`)}s[e]=r}}return s}(E,S,e||o,i)}createNode(t,r,n,a){const p={defaultPrefix:e.defaultPrefix,schema:this,wrapScalars:r};return function(e,t,r){if(e instanceof i.Node)return e;const{defaultPrefix:n,onTagObj:a,prevObjects:p,schema:c,wrapScalars:d}=r;t&&t.startsWith("!!")&&(t=n+t.slice(2));let u=function(e,t,i){if(t){const e=i.filter((e=>e.tag===t)),r=e.find((e=>!e.format))||e[0];if(!r)throw new Error(`Tag ${t} not found`);return r}return i.find((t=>(t.identify&&t.identify(e)||t.class&&e instanceof t.class)&&!t.format))}(e,t,c.tags);if(!u){if("function"==typeof e.toJSON&&(e=e.toJSON()),!e||"object"!=typeof e)return d?new i.Scalar(e):e;u=e instanceof Map?s:e[Symbol.iterator]?o:s}a&&(a(u),delete r.onTagObj);const l={value:void 0,node:void 0};if(e&&"object"==typeof e&&p){const t=p.get(e);if(t){const e=new i.Alias(t);return r.aliasNodes.push(e),e}l.value=e,p.set(e,l)}return l.node=u.createNode?u.createNode(r.schema,e,r):d?new i.Scalar(e):e,t&&l.node instanceof i.Node&&(l.node.tag=t),l.node}(t,n,a?Object.assign(a,p):p)}createPair(e,t,r){r||(r={wrapScalars:!0});const s=this.createNode(e,r.wrapScalars,null,r),o=this.createNode(t,r.wrapScalars,null,r);return new i.Pair(s,o)}};t._defineProperty(T,"defaultPrefix",t.defaultTagPrefix),t._defineProperty(T,"defaultTags",t.defaultTags),e.Schema=T}}),ei=b({"node_modules/yaml/dist/types.js"(e){"use strict";var t=Yt(),i=Qt();Wt(),Xt(),e.Alias=t.Alias,e.Collection=t.Collection,e.Merge=t.Merge,e.Node=t.Node,e.Pair=t.Pair,e.Scalar=t.Scalar,e.YAMLMap=t.YAMLMap,e.YAMLSeq=t.YAMLSeq,e.binaryOptions=t.binaryOptions,e.boolOptions=t.boolOptions,e.intOptions=t.intOptions,e.nullOptions=t.nullOptions,e.strOptions=t.strOptions,e.Schema=i.Schema}}),ti=x({"node_modules/yaml/types.mjs"(){(Kt=w(ei(),1)).default.binaryOptions,Kt.default.boolOptions,Kt.default.intOptions,Kt.default.nullOptions,Kt.default.strOptions,Kt.default.Schema,Kt.default.Alias,Kt.default.Collection,Kt.default.Merge,Kt.default.Node,Kt.default.Pair,Kt.default.Scalar,Ht=Kt.default.YAMLMap,Zt=Kt.default.YAMLSeq}});function ii(e,t,i,r=i){const{title:s,description:o,comment:n}=function(e,t){return t.reduce(((e,t)=>t in e?e[t]:{}),e)}(e,t),a=[];u("renderTitle")&&s&&a.push(` ${s}`,""),u("renderDescription")&&o&&a.push(` ${o}`),u("renderComment")&&n&&a.push(` ${n}`),i.commentBefore=a.join("\n"),r instanceof Ht?r.items.forEach((i=>{ii(e,[...t,"items",i.key.value],i.key,i.value)})):r instanceof Zt&&r.items.forEach(((i,r)=>{ii(e,[...t,"items",r],i)}))}function ri({value:e,context:t}){const i=Jt.createNode(e);ii(t,[],i);const r=new Jt.Document;return r.contents=i,r.toString()}var si,oi,ni,ai,pi=x({"src/lib/renderers/yaml.mjs"(){pi(),ti(),C(),Jt=ri}}),ci=x({"src/lib/renderers/index.mjs"(){Gt(),pi()}});function di(){si.define("autoIncrement",(function(e,t){if(!this.offset){const i=t.minimum||1,r=i+D.MAX_NUMBER,s=e.initialOffset||t.initialOffset;this.offset=s||q.number(i,r)}return e?this.offset++:t})),si.define("sequentialDate",(function(e,t){if(this.now||(this.now=q.date()),e){if(t=this.now.toISOString(),-1===["seconds","minutes","hours","days","weeks","months","years"].indexOf(e=!0===e?"days":e))throw new Error(`Unsupported increment by ${G.short(e)}`);this.now.setTime(this.now.getTime()+q.date(e))}return t}))}function ui(e,t){let i={};function r(e){if(!e||"object"!=typeof e)return;if(Array.isArray(e))return e.forEach(r);const t=e.$id||e.id;"string"!=typeof t||i[t]||(i[t]=e),Object.keys(e).forEach((t=>{r(e[t])}))}return Array.isArray(e)?e.forEach((e=>{i[e.$id||e.id]=e})):i=e||{},r(e),r(t),i}var li,hi,mi=x({"src/lib/index.mjs"(){I(),we(),Ee(),C(),$(),W(),ve(),zt(),ci(),si=new ge,(oi=(e,t,i)=>(console.debug("[json-schema-faker] calling JSONSchemaFaker() is deprecated, call either .generate() or .resolve()"),i&&console.debug("[json-schema-faker] local references are only supported by calling .resolve()"),oi.generate(e,t))).generateWithContext=(e,t)=>{const i=ui(t,e);return Nt(i,e,si,!0)},oi.generate=(e,t)=>Mt(oi.generateWithContext(e,t)),oi.generateYAML=(e,t)=>Jt(oi.generateWithContext(e,t)),oi.resolveWithContext=(e,t,i)=>{"string"==typeof t&&(i=t,t={}),i=`${(i=i||("undefined"!=typeof process&&"function"==typeof process.cwd?process.cwd():"")).replace(/\/+$/,"")}/`;const r=ui(t,e),o={order:1,canRead(e){const t=e.url.replace("/:",":");return r[t]||r[t.split("/").pop()]},read(e,t){try{t(null,this.canRead(e))}catch(e){t(e)}}},{$RefParser:n}=s();return n.bundle(i,e,{resolve:{file:{order:100},http:{order:200},fixedRefs:o},dereference:{circular:"ignore"}}).then((e=>Nt(r,e,si))).catch((e=>{throw new Error(`Error while resolving schema (${e.message})`)}))},oi.resolve=(e,t,i)=>oi.resolveWithContext(e,t,i).then(Mt),oi.resolveYAML=(e,t,i)=>oi.resolveWithContext(e,t,i).then(Jt),di(),oi.format=be,oi.option=u,oi.random=q,oi.extend=(e,t)=>(si.extend(e,t),oi),oi.define=(e,t)=>(si.define(e,t),oi),oi.reset=e=>(si.reset(e),di(),oi),oi.locate=e=>si.get(e),oi.VERSION="0.5.8",ni={...oi},ai=oi}}),fi={};((e,t)=>{for(var i in t)h(e,i,{get:t[i],enumerable:!0})})(fi,{JSONSchemaFaker:()=>ni,default:()=>ai});var yi,gi=(x({"src/lib/main.mjs"(){li=w(i(3643),1),hi=i(868),I(),mi(),o({$RefParser:li.default,JSONPath:hi.JSONPath})}})(),yi=fi,v(h({},"__esModule",{value:!0}),yi)).default;e.exports=gi,e.exports.JSONSchemaFaker={...gi}},5655:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(5188),s=i(6675),o=i(2958),n=i(2648),a=i(5250),p=i(3701),c="errorMessage",d=new r.Name("emUsed"),u={required:"missingProperty",dependencies:"property",dependentRequired:"property"},l=/\$\{[^}]+\}/,h=/\$\{([^}]+)\}/g,m=/^""\s*\+\s*|\s*\+\s*""$/g;const f=(e,t={})=>{if(!e.opts.allErrors)throw new Error("ajv-errors: Ajv option allErrors must be true");if(e.opts.jsPropertySyntax)throw new Error("ajv-errors: ajv option jsPropertySyntax is not supported");return e.addKeyword(function(e){return{keyword:c,schemaType:["string","object"],post:!0,code(t){const{gen:i,data:f,schema:y,schemaValue:g,it:x}=t;if(!1===x.createErrors)return;const b=y,v=s.strConcat(p.default.instancePath,x.errorPath);function w(e,t){return s.and(r._`${e}.keyword !== ${c}`,r._`!${e}.${d}`,r._`${e}.instancePath === ${v}`,r._`${e}.keyword in ${t}`,r._`${e}.schemaPath.indexOf(${x.errSchemaPath}) === 0`,r._`/^\\/[^\\/]*$/.test(${e}.schemaPath.slice(${x.errSchemaPath.length}))`)}function I(e,t){const r=[];for(const i in e){const e=t[i];l.test(e)&&r.push([i,P(e)])}return i.object(...r)}function k(e){return l.test(e)?new o._Code(o.safeStringify(e).replace(h,((e,t)=>`" + JSON.stringify(${n.getData(t,x)}) + "`)).replace(m,"")):r.stringify(e)}function P(e){return r._`function(){return ${k(e)}}`}i.if(r._`${p.default.errors} > 0`,(()=>{if("object"==typeof b){const[o,n]=function(e){let t,i;for(const r in e){if("properties"===r||"items"===r)continue;const s=e[r];if("object"==typeof s){t||(t={});const e=t[r]={};for(const t in s)e[t]=[]}else i||(i={}),i[r]=[]}return[t,i]}(b);n&&function(s){const o=i.const("emErrors",r.stringify(s)),n=i.const("templates",I(s,y));i.forOf("err",p.default.vErrors,(e=>i.if(w(e,o),(()=>i.code(r._`${o}[${e}.keyword].push(${e})`).assign(r._`${e}.${d}`,!0)))));const{singleError:c}=e;if(c){const e=i.let("message",r._`""`),s=i.let("paramsErrors",r._`[]`);u((t=>{i.if(e,(()=>i.code(r._`${e} += ${"string"==typeof c?c:";"}`))),i.code(r._`${e} += ${l(t)}`),i.assign(s,r._`${s}.concat(${o}[${t}])`)})),a.reportError(t,{message:e,params:r._`{errors: ${s}}`})}else u((e=>a.reportError(t,{message:l(e),params:r._`{errors: ${o}[${e}]}`})));function u(e){i.forIn("key",o,(t=>i.if(r._`${o}[${t}].length`,(()=>e(t)))))}function l(e){return r._`${e} in ${n} ? ${n}[${e}]() : ${g}[${e}]`}}(n),o&&function(e){const s=i.const("emErrors",r.stringify(e)),o=[];for(const t in e)o.push([t,I(e[t],y[t])]);const n=i.const("templates",i.object(...o)),c=i.scopeValue("obj",{ref:u,code:r.stringify(u)}),l=i.let("emPropParams"),h=i.let("emParamsErrors");i.forOf("err",p.default.vErrors,(e=>i.if(w(e,s),(()=>{i.assign(l,r._`${c}[${e}.keyword]`),i.assign(h,r._`${s}[${e}.keyword][${e}.params[${l}]]`),i.if(h,(()=>i.code(r._`${h}.push(${e})`).assign(r._`${e}.${d}`,!0)))})))),i.forIn("key",s,(e=>i.forIn("keyProp",r._`${s}[${e}]`,(o=>{i.assign(h,r._`${s}[${e}][${o}]`),i.if(r._`${h}.length`,(()=>{const s=i.const("tmpl",r._`${n}[${e}] && ${n}[${e}][${o}]`);a.reportError(t,{message:r._`${s} ? ${s}() : ${g}[${e}][${o}]`,params:r._`{errors: ${h}}`})}))}))))}(o),function(e){const{props:o,items:n}=e;if(!o&&!n)return;const u=r._`typeof ${f} == "object"`,l=r._`Array.isArray(${f})`,h=i.let("emErrors");let m,x;const b=i.let("templates");function w(e,t){i.assign(h,r.stringify(e)),i.assign(b,I(e,t))}o&&n?(m=i.let("emChildKwd"),i.if(u),i.if(l,(()=>{w(n,y.items),i.assign(m,r.str`items`)}),(()=>{w(o,y.properties),i.assign(m,r.str`properties`)})),x=r._`[${m}]`):n?(i.if(l),w(n,y.items),x=r._`.items`):o&&(i.if(s.and(u,s.not(l))),w(o,y.properties),x=r._`.properties`),i.forOf("err",p.default.vErrors,(e=>function(e,t,o){i.if(s.and(r._`${e}.keyword !== ${c}`,r._`!${e}.${d}`,r._`${e}.instancePath.indexOf(${v}) === 0`),(()=>{const s=i.scopeValue("pattern",{ref:/^\/([^/]*)(?:\/|$)/,code:r._`new RegExp("^\\\/([^/]*)(?:\\\/|$)")`}),n=i.const("emMatches",r._`${s}.exec(${e}.instancePath.slice(${v}.length))`),a=i.const("emChild",r._`${n} && ${n}[1].replace(/~1/g, "/").replace(/~0/g, "~")`);i.if(r._`${a} !== undefined && ${a} in ${t}`,(()=>o(a)))}))}(e,h,(t=>i.code(r._`${h}[${t}].push(${e})`).assign(r._`${e}.${d}`,!0))))),i.forIn("key",h,(e=>i.if(r._`${h}[${e}].length`,(()=>{a.reportError(t,{message:r._`${e} in ${b} ? ${b}[${e}]() : ${g}${x}[${e}]`,params:r._`{errors: ${h}[${e}]}`}),i.assign(r._`${p.default.vErrors}[${p.default.errors}-1].instancePath`,r._`${v} + "/" + ${e}.replace(/~/g, "~0").replace(/\\//g, "~1")`)})))),i.endIf()}(function({properties:e,items:t}){const i={};if(e){i.props={};for(const t in e)i.props[t]=[]}if(t){i.items={};for(let e=0;e<t.length;e++)i.items[e]=[]}return i}(b))}const o="string"==typeof b?b:b._;o&&function(e){const o=i.const("emErrs",r._`[]`);i.forOf("err",p.default.vErrors,(e=>i.if(function(e){return s.and(r._`${e}.keyword !== ${c}`,r._`!${e}.${d}`,s.or(r._`${e}.instancePath === ${v}`,s.and(r._`${e}.instancePath.indexOf(${v}) === 0`,r._`${e}.instancePath[${v}.length] === "/"`)),r._`${e}.schemaPath.indexOf(${x.errSchemaPath}) === 0`,r._`${e}.schemaPath[${x.errSchemaPath}.length] === "/"`)}(e),(()=>i.code(r._`${o}.push(${e})`).assign(r._`${e}.${d}`,!0))))),i.if(r._`${o}.length`,(()=>a.reportError(t,{message:k(e),params:r._`{errors: ${o}}`})))}(o),e.keepErrors||function(){const e=i.const("emErrs",r._`[]`);i.forOf("err",p.default.vErrors,(t=>i.if(r._`!${t}.${d}`,(()=>i.code(r._`${e}.push(${t})`))))),i.assign(p.default.vErrors,e).assign(p.default.errors,r._`${e}.length`)}()}))},metaSchema:{anyOf:[{type:"string"},{type:"object",properties:{properties:{$ref:"#/$defs/stringMap"},items:{$ref:"#/$defs/stringList"},required:{$ref:"#/$defs/stringOrMap"},dependencies:{$ref:"#/$defs/stringOrMap"}},additionalProperties:{type:"string"}}],$defs:{stringMap:{type:"object",additionalProperties:{type:"string"}},stringOrMap:{anyOf:[{type:"string"},{$ref:"#/$defs/stringMap"}]},stringList:{type:"array",items:{type:"string"}}}}}}(t))};t.default=f,e.exports=f,e.exports.default=f},5687:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={trimStart:e=>e.trimStart(),trimEnd:e=>e.trimEnd(),trimLeft:e=>e.trimStart(),trimRight:e=>e.trimEnd(),trim:e=>e.trim(),toLowerCase:e=>e.toLowerCase(),toUpperCase:e=>e.toUpperCase(),toEnumCase:(e,t)=>(null==t?void 0:t.hash[n(e)])||e},o=Object.assign((function(){return{keyword:"transform",schemaType:"array",before:"enum",code(e){const{gen:t,data:i,schema:o,parentSchema:a,it:p}=e,{parentData:c,parentDataProperty:d}=p,u=o;if(!u.length)return;let l;if(u.includes("toEnumCase")){const e=function(e){const t={hash:{}};if(!e.enum)throw new Error('transform: "toEnumCase" requires "enum"');for(const i of e.enum){if("string"!=typeof i)continue;const e=n(i);if(t.hash[e])throw new Error('transform: "toEnumCase" requires all lowercased "enum" values to be unique');t.hash[e]=i}return t}(a);l=t.scopeValue("obj",{ref:e,code:(0,r.stringify)(e)})}function h(e){if(!e.length)return i;const o=e.pop();if(!(o in s))throw new Error(`transform: unknown transformation ${o}`);const n=t.scopeValue("func",{ref:s[o],code:r._`require("ajv-keywords/dist/definitions/transform").transform${(0,r.getProperty)(o)}`}),a=h(e);return l&&"toEnumCase"===o?r._`${n}(${a}, ${l})`:r._`${n}(${a})`}t.if(r._`typeof ${i} == "string" && ${c} !== undefined`,(()=>{t.assign(i,h(u.slice())),t.assign(r._`${c}[${d}]`,i)}))},metaSchema:{type:"array",items:{type:"string",enum:Object.keys(s)}}}}),{transform:s});function n(e){return e.toLowerCase()}t.default=o,e.exports=o},5692:e=>{"use strict";e.exports=require("https")},5752:(e,t,i)=>{"use strict";var r=i(9112);function s(e){switch(e){case void 0:case" ":case"\n":case"\r":case"\t":return!0;default:return!1}}const o=new Set("0123456789ABCDEFabcdef"),n=new Set("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()"),a=new Set(",[]{}"),p=new Set(" ,[]{}\n\r\t"),c=e=>!e||p.has(e);t.Lexer=class{constructor(){this.atEnd=!1,this.blockScalarIndent=-1,this.blockScalarKeep=!1,this.buffer="",this.flowKey=!1,this.flowLevel=0,this.indentNext=0,this.indentValue=0,this.lineEndPos=null,this.next=null,this.pos=0}*lex(e,t=!1){if(e){if("string"!=typeof e)throw TypeError("source is not a string");this.buffer=this.buffer?this.buffer+e:e,this.lineEndPos=null}this.atEnd=!t;let i=this.next??"stream";for(;i&&(t||this.hasChars(1));)i=yield*this.parseNext(i)}atLineEnd(){let e=this.pos,t=this.buffer[e];for(;" "===t||"\t"===t;)t=this.buffer[++e];return!t||"#"===t||"\n"===t||"\r"===t&&"\n"===this.buffer[e+1]}charAt(e){return this.buffer[this.pos+e]}continueScalar(e){let t=this.buffer[e];if(this.indentNext>0){let i=0;for(;" "===t;)t=this.buffer[++i+e];if("\r"===t){const t=this.buffer[i+e+1];if("\n"===t||!t&&!this.atEnd)return e+i+1}return"\n"===t||i>=this.indentNext||!t&&!this.atEnd?e+i:-1}if("-"===t||"."===t){const t=this.buffer.substr(e,3);if(("---"===t||"..."===t)&&s(this.buffer[e+3]))return-1}return e}getLine(){let e=this.lineEndPos;return("number"!=typeof e||-1!==e&&e<this.pos)&&(e=this.buffer.indexOf("\n",this.pos),this.lineEndPos=e),-1===e?this.atEnd?this.buffer.substring(this.pos):null:("\r"===this.buffer[e-1]&&(e-=1),this.buffer.substring(this.pos,e))}hasChars(e){return this.pos+e<=this.buffer.length}setNext(e){return this.buffer=this.buffer.substring(this.pos),this.pos=0,this.lineEndPos=null,this.next=e,null}peek(e){return this.buffer.substr(this.pos,e)}*parseNext(e){switch(e){case"stream":return yield*this.parseStream();case"line-start":return yield*this.parseLineStart();case"block-start":return yield*this.parseBlockStart();case"doc":return yield*this.parseDocument();case"flow":return yield*this.parseFlowCollection();case"quoted-scalar":return yield*this.parseQuotedScalar();case"block-scalar":return yield*this.parseBlockScalar();case"plain-scalar":return yield*this.parsePlainScalar()}}*parseStream(){let e=this.getLine();if(null===e)return this.setNext("stream");if(e[0]===r.BOM&&(yield*this.pushCount(1),e=e.substring(1)),"%"===e[0]){let t=e.length,i=e.indexOf("#");for(;-1!==i;){const r=e[i-1];if(" "===r||"\t"===r){t=i-1;break}i=e.indexOf("#",i+1)}for(;;){const i=e[t-1];if(" "!==i&&"\t"!==i)break;t-=1}const r=(yield*this.pushCount(t))+(yield*this.pushSpaces(!0));return yield*this.pushCount(e.length-r),this.pushNewline(),"stream"}if(this.atLineEnd()){const t=yield*this.pushSpaces(!0);return yield*this.pushCount(e.length-t),yield*this.pushNewline(),"stream"}return yield r.DOCUMENT,yield*this.parseLineStart()}*parseLineStart(){const e=this.charAt(0);if(!e&&!this.atEnd)return this.setNext("line-start");if("-"===e||"."===e){if(!this.atEnd&&!this.hasChars(4))return this.setNext("line-start");const e=this.peek(3);if(("---"===e||"..."===e)&&s(this.charAt(3)))return yield*this.pushCount(3),this.indentValue=0,this.indentNext=0,"---"===e?"doc":"stream"}return this.indentValue=yield*this.pushSpaces(!1),this.indentNext>this.indentValue&&!s(this.charAt(1))&&(this.indentNext=this.indentValue),yield*this.parseBlockStart()}*parseBlockStart(){const[e,t]=this.peek(2);if(!t&&!this.atEnd)return this.setNext("block-start");if(("-"===e||"?"===e||":"===e)&&s(t)){const e=(yield*this.pushCount(1))+(yield*this.pushSpaces(!0));return this.indentNext=this.indentValue+1,this.indentValue+=e,yield*this.parseBlockStart()}return"doc"}*parseDocument(){yield*this.pushSpaces(!0);const e=this.getLine();if(null===e)return this.setNext("doc");let t=yield*this.pushIndicators();switch(e[t]){case"#":yield*this.pushCount(e.length-t);case void 0:return yield*this.pushNewline(),yield*this.parseLineStart();case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel=1,"flow";case"}":case"]":return yield*this.pushCount(1),"doc";case"*":return yield*this.pushUntil(c),"doc";case'"':case"'":return yield*this.parseQuotedScalar();case"|":case">":return t+=(yield*this.parseBlockScalarHeader()),t+=(yield*this.pushSpaces(!0)),yield*this.pushCount(e.length-t),yield*this.pushNewline(),yield*this.parseBlockScalar();default:return yield*this.parsePlainScalar()}}*parseFlowCollection(){let e,t,i=-1;do{e=yield*this.pushNewline(),e>0?(t=yield*this.pushSpaces(!1),this.indentValue=i=t):t=0,t+=(yield*this.pushSpaces(!0))}while(e+t>0);const o=this.getLine();if(null===o)return this.setNext("flow");if((-1!==i&&i<this.indentNext&&"#"!==o[0]||0===i&&(o.startsWith("---")||o.startsWith("..."))&&s(o[3]))&&(i!==this.indentNext-1||1!==this.flowLevel||"]"!==o[0]&&"}"!==o[0]))return this.flowLevel=0,yield r.FLOW_END,yield*this.parseLineStart();let n=0;for(;","===o[n];)n+=(yield*this.pushCount(1)),n+=(yield*this.pushSpaces(!0)),this.flowKey=!1;switch(n+=(yield*this.pushIndicators()),o[n]){case void 0:return"flow";case"#":return yield*this.pushCount(o.length-n),"flow";case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel+=1,"flow";case"}":case"]":return yield*this.pushCount(1),this.flowKey=!0,this.flowLevel-=1,this.flowLevel?"flow":"doc";case"*":return yield*this.pushUntil(c),"flow";case'"':case"'":return this.flowKey=!0,yield*this.parseQuotedScalar();case":":{const e=this.charAt(1);if(this.flowKey||s(e)||","===e)return this.flowKey=!1,yield*this.pushCount(1),yield*this.pushSpaces(!0),"flow"}default:return this.flowKey=!1,yield*this.parsePlainScalar()}}*parseQuotedScalar(){const e=this.charAt(0);let t=this.buffer.indexOf(e,this.pos+1);if("'"===e)for(;-1!==t&&"'"===this.buffer[t+1];)t=this.buffer.indexOf("'",t+2);else for(;-1!==t;){let e=0;for(;"\\"===this.buffer[t-1-e];)e+=1;if(e%2==0)break;t=this.buffer.indexOf('"',t+1)}const i=this.buffer.substring(0,t);let r=i.indexOf("\n",this.pos);if(-1!==r){for(;-1!==r;){const e=this.continueScalar(r+1);if(-1===e)break;r=i.indexOf("\n",e)}-1!==r&&(t=r-("\r"===i[r-1]?2:1))}if(-1===t){if(!this.atEnd)return this.setNext("quoted-scalar");t=this.buffer.length}return yield*this.pushToIndex(t+1,!1),this.flowLevel?"flow":"doc"}*parseBlockScalarHeader(){this.blockScalarIndent=-1,this.blockScalarKeep=!1;let e=this.pos;for(;;){const t=this.buffer[++e];if("+"===t)this.blockScalarKeep=!0;else if(t>"0"&&t<="9")this.blockScalarIndent=Number(t)-1;else if("-"!==t)break}return yield*this.pushUntil((e=>s(e)||"#"===e))}*parseBlockScalar(){let e,t=this.pos-1,i=0;e:for(let r=this.pos;e=this.buffer[r];++r)switch(e){case" ":i+=1;break;case"\n":t=r,i=0;break;case"\r":{const e=this.buffer[r+1];if(!e&&!this.atEnd)return this.setNext("block-scalar");if("\n"===e)break}default:break e}if(!e&&!this.atEnd)return this.setNext("block-scalar");if(i>=this.indentNext){-1===this.blockScalarIndent?this.indentNext=i:this.indentNext=this.blockScalarIndent+(0===this.indentNext?1:this.indentNext);do{const e=this.continueScalar(t+1);if(-1===e)break;t=this.buffer.indexOf("\n",e)}while(-1!==t);if(-1===t){if(!this.atEnd)return this.setNext("block-scalar");t=this.buffer.length}}let s=t+1;for(e=this.buffer[s];" "===e;)e=this.buffer[++s];if("\t"===e){for(;"\t"===e||" "===e||"\r"===e||"\n"===e;)e=this.buffer[++s];t=s-1}else if(!this.blockScalarKeep)for(;;){let e=t-1,r=this.buffer[e];"\r"===r&&(r=this.buffer[--e]);const s=e;for(;" "===r;)r=this.buffer[--e];if(!("\n"===r&&e>=this.pos&&e+1+i>s))break;t=e}return yield r.SCALAR,yield*this.pushToIndex(t+1,!0),yield*this.parseLineStart()}*parsePlainScalar(){const e=this.flowLevel>0;let t,i=this.pos-1,o=this.pos-1;for(;t=this.buffer[++o];)if(":"===t){const t=this.buffer[o+1];if(s(t)||e&&a.has(t))break;i=o}else if(s(t)){let r=this.buffer[o+1];if("\r"===t&&("\n"===r?(o+=1,t="\n",r=this.buffer[o+1]):i=o),"#"===r||e&&a.has(r))break;if("\n"===t){const e=this.continueScalar(o+1);if(-1===e)break;o=Math.max(o,e-2)}}else{if(e&&a.has(t))break;i=o}return t||this.atEnd?(yield r.SCALAR,yield*this.pushToIndex(i+1,!0),e?"flow":"doc"):this.setNext("plain-scalar")}*pushCount(e){return e>0?(yield this.buffer.substr(this.pos,e),this.pos+=e,e):0}*pushToIndex(e,t){const i=this.buffer.slice(this.pos,e);return i?(yield i,this.pos+=i.length,i.length):(t&&(yield""),0)}*pushIndicators(){switch(this.charAt(0)){case"!":return(yield*this.pushTag())+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"&":return(yield*this.pushUntil(c))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"-":case"?":case":":{const e=this.flowLevel>0,t=this.charAt(1);if(s(t)||e&&a.has(t))return e?this.flowKey&&(this.flowKey=!1):this.indentNext=this.indentValue+1,(yield*this.pushCount(1))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators())}}return 0}*pushTag(){if("<"===this.charAt(1)){let e=this.pos+2,t=this.buffer[e];for(;!s(t)&&">"!==t;)t=this.buffer[++e];return yield*this.pushToIndex(">"===t?e+1:e,!1)}{let e=this.pos+1,t=this.buffer[e];for(;t;)if(n.has(t))t=this.buffer[++e];else{if("%"!==t||!o.has(this.buffer[e+1])||!o.has(this.buffer[e+2]))break;t=this.buffer[e+=3]}return yield*this.pushToIndex(e,!1)}}*pushNewline(){const e=this.buffer[this.pos];return"\n"===e?yield*this.pushCount(1):"\r"===e&&"\n"===this.charAt(1)?yield*this.pushCount(2):0}*pushSpaces(e){let t,i=this.pos-1;do{t=this.buffer[++i]}while(" "===t||e&&"\t"===t);const r=i-this.pos;return r>0&&(yield this.buffer.substr(this.pos,r),this.pos=i),r}*pushUntil(e){let t=this.pos,i=this.buffer[t];for(;!e(i);)i=this.buffer[++t];return yield*this.pushToIndex(t,!1)}}},5753:(e,t,i)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=i(7833):e.exports=i(6033)},5795:(e,t,i)=>{"use strict";var r=i(6549);if(r)try{r([],"length")}catch(e){r=null}e.exports=r},5803:(e,t)=>{"use strict";function i(e){const t=e.length;let i,r=0,s=0;for(;s<t;)r++,i=e.charCodeAt(s++),i>=55296&&i<=56319&&s<t&&(i=e.charCodeAt(s),56320==(64512&i)&&s++);return r}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i,i.code='require("ajv/dist/runtime/ucs2length").default'},5822:(e,t,i)=>{"use strict";var r=i(3334),s=i(6055),o=i(1919),n=i(8531),a=i(8080),p=i(7969),c=i(7191),d=i(6936),u=i(9637),l=i(692),h=i(8416),m=i(2557),f=i(5437);const y=[r.map,o.seq,n.string,s.nullTag,p.trueTag,p.falseTag,d.intBin,d.intOct,d.int,d.intHex,c.floatNaN,c.floatExp,c.float,a.binary,u.merge,l.omap,h.pairs,m.set,f.intTime,f.floatTime,f.timestamp];t.schema=y},5827:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=t.validate=t.v7=t.v6ToV1=t.v6=t.v5=t.v4=t.v3=t.v1ToV6=t.v1=t.stringify=t.parse=t.NIL=t.MAX=void 0;var r=i(5609);Object.defineProperty(t,"MAX",{enumerable:!0,get:function(){return r.default}});var s=i(3588);Object.defineProperty(t,"NIL",{enumerable:!0,get:function(){return s.default}});var o=i(2524);Object.defineProperty(t,"parse",{enumerable:!0,get:function(){return o.default}});var n=i(3202);Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return n.default}});var a=i(458);Object.defineProperty(t,"v1",{enumerable:!0,get:function(){return a.default}});var p=i(3891);Object.defineProperty(t,"v1ToV6",{enumerable:!0,get:function(){return p.default}});var c=i(32);Object.defineProperty(t,"v3",{enumerable:!0,get:function(){return c.default}});var d=i(8597);Object.defineProperty(t,"v4",{enumerable:!0,get:function(){return d.default}});var u=i(4502);Object.defineProperty(t,"v5",{enumerable:!0,get:function(){return u.default}});var l=i(7971);Object.defineProperty(t,"v6",{enumerable:!0,get:function(){return l.default}});var h=i(8959);Object.defineProperty(t,"v6ToV1",{enumerable:!0,get:function(){return h.default}});var m=i(2508);Object.defineProperty(t,"v7",{enumerable:!0,get:function(){return m.default}});var f=i(8873);Object.defineProperty(t,"validate",{enumerable:!0,get:function(){return f.default}});var y=i(9547);Object.defineProperty(t,"version",{enumerable:!0,get:function(){return y.default}})},5849:(e,t,i)=>{const{replaceEnvs:r}=i(7775),{JSONSchemaFaker:s}=i(5649),{readFile:o}=i(3614),n=i(263);function a(e={},t=""){const i={};if(e.requestBody&&(i.request=e.requestBody.content[Object.keys(e.requestBody.content)[0]].schema),!t){if(!(e.responses&&Object.keys(e.responses).length>0))throw new Error("No responses defined for the operation.");t=Object.keys(e.responses)[0]}return i.response=e.responses[t].content[Object.keys(e.responses[t].content)[0]].schema,i}function p(e={},t="",i="",s=""){if(!e)throw new Error("Operation is required.");if(!t)throw new Error("Path is required.");let o={url:t,request:{parameters:{},headers:{},body:{}},response:{headers:{},body:{}}};if(c(e,"path",s).forEach((e=>{o.url=o.url.replace(`{${e.key}}`,e.value)})),c(e,"query",s).forEach((e=>{o.request.parameters[e.key]=e.value})),c(e,"header",s).forEach((e=>{o.request.headers[e.key]=e.value})),e.requestBody){const t=d(e.requestBody,s);void 0!==t&&(o.request.body=t)}i||(i=Object.keys(e.responses)[0]);const n=e.responses[i];if(n.headers)for(const e in n.headers){const t=d(n.headers[e],s);void 0!==t&&(o.response.headers[e]=t)}if(n.content)for(const e in n.content){const t=d(n.content[e],s);void 0!==t&&(o.response.body=t)}return o=r(o),o}function c(e={},t="",i=""){const r=[];if(!e)throw new Error("Operation is required.");if(!e.parameters)return r;for(const s of e.parameters)if(s.in===t){const e=d(s,i);e&&r.push({key:s.name,value:e})}return r}function d(e={},t="",i=null){let r;if(!e)throw new Error("Definition is required.");if(null==i){const r=function(e={},t=""){const i=[];return function e(r){if("object"==typeof r&&null!==r){r.hasOwnProperty("example")&&i.push(r.example),t&&Object.hasOwn(r,"examples")&&Object.hasOwn(r.examples,t)&&Object.hasOwn(r.examples[t],"value")&&i.push(r.examples[t].value);for(const t in r)e(r[t])}}(e),!!i.length}(e,t);i=!r&&(e.required||e?.schema?.required||!t)}if(i&&e.type)try{if(r=s.generate(e),r)return r}catch(e){console.warn(`Error generating example: ${e}`)}if(e.examples&&void 0!==t&&""!==t&&void 0!==e.examples[t]&&void 0!==e.examples[t].value)r=e.examples[t].value;else if(void 0!==e.example)r=e.example;else{let s;if(e.schema)s=e.schema;else if(e.properties)s=e;else if(e.items)s=e;else{if(!e.content)return null;for(const t in e.content)if(e.content[t]){s=e.content[t];break}}r="object"===s.type?function(e={},t="",i=null){const r={};for(const s in e.properties){const o=d(e.properties[s],t,i);o&&(r[s]=o)}return r}(s,t,i):"array"===s.type?function(e={},t="",i=null){const r=[],s=d(e,t,i);return s&&r.push(s),r}(s.items,t,i):d(s,t,i)}return r}s.option({requiredOnly:!0}),e.exports={getOperation:function(e={},t="",i="",r="",s=""){if(!e)throw new Error("OpenAPI definition is required.");if(!t)throw new Error("OperationId is required.");for(const o in e.paths)for(const n in e.paths[o])if(e.paths[o][n].operationId===t){const t=e.paths[o][n];if(!s){if(!(e.servers&&e.servers.length>0))throw new Error("No server URL provided and no servers defined in the OpenAPI definition.");s=e.servers[0].url}const c=p(t,s+o,i,r);return{path:o,method:n,definition:t,schemas:a(t,i),example:c}}return null},loadDescription:async function(e=""){if(!e)throw new Error("Description is required.");const t=await o({fileURLOrPath:e});return await n.dereference(t)}}},5859:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ValueScope=t.ValueScopeName=t.Scope=t.varKinds=t.UsedValueState=void 0;const r=i(2958);class s extends Error{constructor(e){super(`CodeGen: "code" for ${e} not defined`),this.value=e.value}}var o;!function(e){e[e.Started=0]="Started",e[e.Completed=1]="Completed"}(o||(t.UsedValueState=o={})),t.varKinds={const:new r.Name("const"),let:new r.Name("let"),var:new r.Name("var")};class n{constructor({prefixes:e,parent:t}={}){this._names={},this._prefixes=e,this._parent=t}toName(e){return e instanceof r.Name?e:this.name(e)}name(e){return new r.Name(this._newName(e))}_newName(e){return`${e}${(this._names[e]||this._nameGroup(e)).index++}`}_nameGroup(e){var t,i;if((null===(i=null===(t=this._parent)||void 0===t?void 0:t._prefixes)||void 0===i?void 0:i.has(e))||this._prefixes&&!this._prefixes.has(e))throw new Error(`CodeGen: prefix "${e}" is not allowed in this scope`);return this._names[e]={prefix:e,index:0}}}t.Scope=n;class a extends r.Name{constructor(e,t){super(t),this.prefix=e}setValue(e,{property:t,itemIndex:i}){this.value=e,this.scopePath=r._`.${new r.Name(t)}[${i}]`}}t.ValueScopeName=a;const p=r._`\n`;t.ValueScope=class extends n{constructor(e){super(e),this._values={},this._scope=e.scope,this.opts={...e,_n:e.lines?p:r.nil}}get(){return this._scope}name(e){return new a(e,this._newName(e))}value(e,t){var i;if(void 0===t.ref)throw new Error("CodeGen: ref must be passed in value");const r=this.toName(e),{prefix:s}=r,o=null!==(i=t.key)&&void 0!==i?i:t.ref;let n=this._values[s];if(n){const e=n.get(o);if(e)return e}else n=this._values[s]=new Map;n.set(o,r);const a=this._scope[s]||(this._scope[s]=[]),p=a.length;return a[p]=t.ref,r.setValue(t,{property:s,itemIndex:p}),r}getValue(e,t){const i=this._values[e];if(i)return i.get(t)}scopeRefs(e,t=this._values){return this._reduceValues(t,(t=>{if(void 0===t.scopePath)throw new Error(`CodeGen: name "${t}" has no value`);return r._`${e}${t.scopePath}`}))}scopeCode(e=this._values,t,i){return this._reduceValues(e,(e=>{if(void 0===e.value)throw new Error(`CodeGen: name "${e}" has no value`);return e.value.code}),t,i)}_reduceValues(e,i,n={},a){let p=r.nil;for(const c in e){const d=e[c];if(!d)continue;const u=n[c]=n[c]||new Map;d.forEach((e=>{if(u.has(e))return;u.set(e,o.Started);let n=i(e);if(n){const i=this.opts.es5?t.varKinds.var:t.varKinds.const;p=r._`${p}${i} ${e} = ${n};${this.opts._n}`}else{if(!(n=null==a?void 0:a(e)))throw new s(e);p=r._`${p}${n}${this.opts._n}`}u.set(e,o.Completed)}))}return p}}},5880:e=>{"use strict";e.exports=Math.pow},5909:(e,t,i)=>{"use strict";var r=i(6145),s=i(8300),o=new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"),n=/^[-+]?[0-9]+e/;e.exports=new s("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!o.test(e)||"_"===e[e.length-1])},construct:function(e){var t,i,r,s;return i="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,s=[],"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===i?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:t.indexOf(":")>=0?(t.split(":").forEach((function(e){s.unshift(parseFloat(e,10))})),t=0,r=1,s.forEach((function(e){t+=e*r,r*=60})),i*t):i*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||r.isNegativeZero(e))},represent:function(e,t){var i;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(r.isNegativeZero(e))return"-0.0";return i=e.toString(10),n.test(i)?i.replace("e",".e"):i},defaultStyle:"lowercase"})},5931:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=/\.(jpeg|jpg|gif|png|bmp|ico)$/i;t.default={order:400,allowEmpty:!0,canParse:e=>Buffer.isBuffer(e.data)&&i.test(e.url),parse:e=>Buffer.isBuffer(e.data)?e.data:Buffer.from(e.data)}},5970:(e,t)=>{"use strict";const i=Symbol("break visit"),r=Symbol("skip children"),s=Symbol("remove item");function o(e,t){"type"in e&&"document"===e.type&&(e={start:e.start,value:e.value}),n(Object.freeze([]),e,t)}function n(e,t,r){let o=r(t,e);if("symbol"==typeof o)return o;for(const a of["key","value"]){const p=t[a];if(p&&"items"in p){for(let t=0;t<p.items.length;++t){const o=n(Object.freeze(e.concat([[a,t]])),p.items[t],r);if("number"==typeof o)t=o-1;else{if(o===i)return i;o===s&&(p.items.splice(t,1),t-=1)}}"function"==typeof o&&"key"===a&&(o=o(t,e))}}return"function"==typeof o?o(t,e):o}o.BREAK=i,o.SKIP=r,o.REMOVE=s,o.itemAtPath=(e,t)=>{let i=e;for(const[e,r]of t){const t=i?.[e];if(!t||!("items"in t))return;i=t.items[r]}return i},o.parentCollection=(e,t)=>{const i=o.itemAtPath(e,t.slice(0,-1)),r=t[t.length-1][0],s=i?.[r];if(s&&"items"in s)return s;throw new Error("Parent collection not found")},t.visit=o},6009:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o={keyword:"oneOf",schemaType:"array",trackErrors:!0,error:{message:"must match exactly one schema in oneOf",params:({params:e})=>r._`{passingSchemas: ${e.passing}}`},code(e){const{gen:t,schema:i,parentSchema:o,it:n}=e;if(!Array.isArray(i))throw new Error("ajv implementation error");if(n.opts.discriminator&&o.discriminator)return;const a=i,p=t.let("valid",!1),c=t.let("passing",null),d=t.name("_valid");e.setParams({passing:c}),t.block((function(){a.forEach(((i,o)=>{let a;(0,s.alwaysValidSchema)(n,i)?t.var(d,!0):a=e.subschema({keyword:"oneOf",schemaProp:o,compositeRule:!0},d),o>0&&t.if(r._`${d} && ${p}`).assign(p,!1).assign(c,r._`[${c}, ${o}]`).else(),t.if(d,(()=>{t.assign(p,!0),t.assign(c,o),a&&e.mergeEvaluated(a,r.Name)}))}))})),e.result(p,(()=>e.reset()),(()=>e.error(!0)))}};t.default=o},6010:(e,t,i)=>{"use strict";var r=i(5219),s=i(81),o=i(1614),n=i(484),a=i(9714),p=i(3732);class c extends o.Collection{static get tagName(){return"tag:yaml.org,2002:seq"}constructor(e){super(n.SEQ,e),this.items=[]}add(e){this.items.push(e)}delete(e){const t=d(e);return"number"==typeof t&&this.items.splice(t,1).length>0}get(e,t){const i=d(e);if("number"!=typeof i)return;const r=this.items[i];return!t&&n.isScalar(r)?r.value:r}has(e){const t=d(e);return"number"==typeof t&&t<this.items.length}set(e,t){const i=d(e);if("number"!=typeof i)throw new Error(`Expected a valid index, not ${e}.`);const r=this.items[i];n.isScalar(r)&&a.isScalarValue(t)?r.value=t:this.items[i]=t}toJSON(e,t){const i=[];t?.onCreate&&t.onCreate(i);let r=0;for(const e of this.items)i.push(p.toJS(e,String(r++),t));return i}toString(e,t,i){return e?s.stringifyCollection(this,e,{blockItemPrefix:"- ",flowChars:{start:"[",end:"]"},itemIndent:(e.indent||"")+"  ",onChompKeep:i,onComment:t}):JSON.stringify(this)}static from(e,t,i){const{replacer:s}=i,o=new this(e);if(t&&Symbol.iterator in Object(t)){let e=0;for(let n of t){if("function"==typeof s){const i=t instanceof Set?n:String(e++);n=s.call(t,i,n)}o.items.push(r.createNode(n,void 0,i))}}return o}}function d(e){let t=n.isScalar(e)?e.value:e;return t&&"string"==typeof t&&(t=Number(t)),"number"==typeof t&&Number.isInteger(t)&&t>=0?t:null}t.YAMLSeq=c},6033:(e,t,i)=>{const r=i(2018),s=i(9023);t.init=function(e){e.inspectOpts={};const i=Object.keys(t.inspectOpts);for(let r=0;r<i.length;r++)e.inspectOpts[i[r]]=t.inspectOpts[i[r]]},t.log=function(...e){return process.stderr.write(s.formatWithOptions(t.inspectOpts,...e)+"\n")},t.formatArgs=function(i){const{namespace:r,useColors:s}=this;if(s){const t=this.color,s="[3"+(t<8?t:"8;5;"+t),o=`  ${s};1m${r} [0m`;i[0]=o+i[0].split("\n").join("\n"+o),i.push(s+"m+"+e.exports.humanize(this.diff)+"[0m")}else i[0]=(t.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+r+" "+i[0]},t.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},t.load=function(){return process.env.DEBUG},t.useColors=function(){return"colors"in t.inspectOpts?Boolean(t.inspectOpts.colors):r.isatty(process.stderr.fd)},t.destroy=s.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),t.colors=[6,2,3,4,5,1];try{const e=i(613);e&&(e.stderr||e).level>=2&&(t.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}t.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const i=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let r=process.env[t];return r=!!/^(yes|on|true|enabled)$/i.test(r)||!/^(no|off|false|disabled)$/i.test(r)&&("null"===r?null:Number(r)),e[i]=r,e}),{}),e.exports=i(736)(t);const{formatters:o}=e.exports;o.o=function(e){return this.inspectOpts.colors=this.useColors,s.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")},o.O=function(e){return this.inspectOpts.colors=this.useColors,s.inspect(e,this.inspectOpts)}},6055:(e,t,i)=>{"use strict";var r=i(9714);const s={identify:e=>null==e,createNode:()=>new r.Scalar(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new r.Scalar(null),stringify:({source:e},t)=>"string"==typeof e&&s.test.test(e)?e:t.options.nullStr};t.nullTag=s},6145:e=>{"use strict";function t(e){return null==e}e.exports.isNothing=t,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:t(e)?[]:[e]},e.exports.repeat=function(e,t){var i,r="";for(i=0;i<t;i+=1)r+=e;return r},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,t){var i,r,s,o;if(t)for(i=0,r=(o=Object.keys(t)).length;i<r;i+=1)e[s=o[i]]=t[s];return e}},6170:(e,t)=>{"use strict";const i="block",r="quoted";function s(e,t,i){let r=t,s=t+1,o=e[s];for(;" "===o||"\t"===o;)if(t<s+i)o=e[++t];else{do{o=e[++t]}while(o&&"\n"!==o);r=t,s=t+1,o=e[s]}return r}t.FOLD_BLOCK=i,t.FOLD_FLOW="flow",t.FOLD_QUOTED=r,t.foldFlowLines=function(e,t,o="flow",{indentAtStart:n,lineWidth:a=80,minContentWidth:p=20,onFold:c,onOverflow:d}={}){if(!a||a<0)return e;a<p&&(p=0);const u=Math.max(1+p,1+a-t.length);if(e.length<=u)return e;const l=[],h={};let m,f,y=a-t.length;"number"==typeof n&&(n>a-Math.max(2,p)?l.push(0):y=a-n);let g=!1,x=-1,b=-1,v=-1;o===i&&(x=s(e,x,t.length),-1!==x&&(y=x+u));for(let n;n=e[x+=1];){if(o===r&&"\\"===n){switch(b=x,e[x+1]){case"x":x+=3;break;case"u":x+=5;break;case"U":x+=9;break;default:x+=1}v=x}if("\n"===n)o===i&&(x=s(e,x,t.length)),y=x+t.length+u,m=void 0;else{if(" "===n&&f&&" "!==f&&"\n"!==f&&"\t"!==f){const t=e[x+1];t&&" "!==t&&"\n"!==t&&"\t"!==t&&(m=x)}if(x>=y)if(m)l.push(m),y=m+u,m=void 0;else if(o===r){for(;" "===f||"\t"===f;)f=n,n=e[x+=1],g=!0;const t=x>v+1?x-2:b-1;if(h[t])return e;l.push(t),h[t]=!0,y=t+u,m=void 0}else g=!0}f=n}if(g&&d&&d(),0===l.length)return e;c&&c();let w=e.slice(0,l[0]);for(let i=0;i<l.length;++i){const s=l[i],n=l[i+1]||e.length;0===s?w=`\n${t}${e.slice(0,n)}`:(o===r&&h[s]&&(w+=`${e[s]}\\`),w+=`\n${t}${e.slice(s+1,n)}`)}return w}},6173:(e,t,i)=>{"use strict";var r=i(8949);e.exports={order:200,allowEmpty:!0,canParse:[".yaml",".yml",".json"],parse:function(e){return new Promise((function(t,i){var s=e.data;Buffer.isBuffer(s)&&(s=s.toString()),t("string"==typeof s?r.parse(s):s)}))}}},6184:(e,t,i)=>{"use strict";e.exports=i(7759).extend({implicit:[i(9198),i(6199),i(4466),i(1461)]})},6188:e=>{"use strict";e.exports=Math.max},6193:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getSchemaRefs=t.resolveUrl=t.normalizeId=t._getFullPath=t.getFullPath=t.inlineRef=void 0;const r=i(749),s=i(2017),o=i(7728),n=new Set(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum","const"]);t.inlineRef=function(e,t=!0){return"boolean"==typeof e||(!0===t?!p(e):!!t&&c(e)<=t)};const a=new Set(["$ref","$recursiveRef","$recursiveAnchor","$dynamicRef","$dynamicAnchor"]);function p(e){for(const t in e){if(a.has(t))return!0;const i=e[t];if(Array.isArray(i)&&i.some(p))return!0;if("object"==typeof i&&p(i))return!0}return!1}function c(e){let t=0;for(const i in e){if("$ref"===i)return 1/0;if(t++,!n.has(i)&&("object"==typeof e[i]&&(0,r.eachItem)(e[i],(e=>t+=c(e))),t===1/0))return 1/0}return t}function d(e,t="",i){!1!==i&&(t=h(t));const r=e.parse(t);return u(e,r)}function u(e,t){return e.serialize(t).split("#")[0]+"#"}t.getFullPath=d,t._getFullPath=u;const l=/#\/?$/;function h(e){return e?e.replace(l,""):""}t.normalizeId=h,t.resolveUrl=function(e,t,i){return i=h(i),e.resolve(t,i)};const m=/^[a-z_][-a-z0-9._]*$/i;t.getSchemaRefs=function(e,t){if("boolean"==typeof e)return{};const{schemaId:i,uriResolver:r}=this.opts,n=h(e[i]||t),a={"":n},p=d(r,n,!1),c={},u=new Set;return o(e,{allKeys:!0},((e,t,r,s)=>{if(void 0===s)return;const o=p+t;let n=a[s];function d(t){const i=this.opts.uriResolver.resolve;if(t=h(n?i(n,t):t),u.has(t))throw f(t);u.add(t);let r=this.refs[t];return"string"==typeof r&&(r=this.refs[r]),"object"==typeof r?l(e,r.schema,t):t!==h(o)&&("#"===t[0]?(l(e,c[t],t),c[t]=e):this.refs[t]=o),t}function y(e){if("string"==typeof e){if(!m.test(e))throw new Error(`invalid anchor "${e}"`);d.call(this,`#${e}`)}}"string"==typeof e[i]&&(n=d.call(this,e[i])),y.call(this,e.$anchor),y.call(this,e.$dynamicAnchor),a[t]=n})),c;function l(e,t,i){if(void 0!==t&&!s(e,t))throw f(i)}function f(e){return new Error(`reference "${e}" resolves to more than one schema`)}}},6199:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},6238:(e,t)=>{"use strict";var i;Object.defineProperty(t,"__esModule",{value:!0}),t.DiscrError=void 0,function(e){e.Tag="tag",e.Mapping="mapping"}(i||(t.DiscrError=i={}))},6247:(e,t,i)=>{"use strict";var r=i(932),s=i(9112),o=i(5752);function n(e,t){for(let i=0;i<e.length;++i)if(e[i].type===t)return!0;return!1}function a(e){for(let t=0;t<e.length;++t)switch(e[t].type){case"space":case"comment":case"newline":break;default:return t}return-1}function p(e){switch(e?.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"flow-collection":return!0;default:return!1}}function c(e){switch(e.type){case"document":return e.start;case"block-map":{const t=e.items[e.items.length-1];return t.sep??t.start}case"block-seq":return e.items[e.items.length-1].start;default:return[]}}function d(e){if(0===e.length)return[];let t=e.length;e:for(;--t>=0;)switch(e[t].type){case"doc-start":case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":case"newline":break e}for(;"space"===e[++t]?.type;);return e.splice(t,e.length)}function u(e){if("flow-seq-start"===e.start.type)for(const t of e.items)!t.sep||t.value||n(t.start,"explicit-key-ind")||n(t.sep,"map-value-ind")||(t.key&&(t.value=t.key),delete t.key,p(t.value)?t.value.end?Array.prototype.push.apply(t.value.end,t.sep):t.value.end=t.sep:Array.prototype.push.apply(t.start,t.sep),delete t.sep)}t.Parser=class{constructor(e){this.atNewLine=!0,this.atScalar=!1,this.indent=0,this.offset=0,this.onKeyLine=!1,this.stack=[],this.source="",this.type="",this.lexer=new o.Lexer,this.onNewLine=e}*parse(e,t=!1){this.onNewLine&&0===this.offset&&this.onNewLine(0);for(const i of this.lexer.lex(e,t))yield*this.next(i);t||(yield*this.end())}*next(e){if(this.source=e,r.env.LOG_TOKENS&&console.log("|",s.prettyToken(e)),this.atScalar)return this.atScalar=!1,yield*this.step(),void(this.offset+=e.length);const t=s.tokenType(e);if(t)if("scalar"===t)this.atNewLine=!1,this.atScalar=!0,this.type="scalar";else{switch(this.type=t,yield*this.step(),t){case"newline":this.atNewLine=!0,this.indent=0,this.onNewLine&&this.onNewLine(this.offset+e.length);break;case"space":this.atNewLine&&" "===e[0]&&(this.indent+=e.length);break;case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":this.atNewLine&&(this.indent+=e.length);break;case"doc-mode":case"flow-error-end":return;default:this.atNewLine=!1}this.offset+=e.length}else{const t=`Not a YAML token: ${e}`;yield*this.pop({type:"error",offset:this.offset,message:t,source:e}),this.offset+=e.length}}*end(){for(;this.stack.length>0;)yield*this.pop()}get sourceToken(){return{type:this.type,offset:this.offset,indent:this.indent,source:this.source}}*step(){const e=this.peek(1);if("doc-end"!==this.type||e&&"doc-end"===e.type){if(!e)return yield*this.stream();switch(e.type){case"document":return yield*this.document(e);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return yield*this.scalar(e);case"block-scalar":return yield*this.blockScalar(e);case"block-map":return yield*this.blockMap(e);case"block-seq":return yield*this.blockSequence(e);case"flow-collection":return yield*this.flowCollection(e);case"doc-end":return yield*this.documentEnd(e)}yield*this.pop()}else{for(;this.stack.length>0;)yield*this.pop();this.stack.push({type:"doc-end",offset:this.offset,source:this.source})}}peek(e){return this.stack[this.stack.length-e]}*pop(e){const t=e??this.stack.pop();if(t)if(0===this.stack.length)yield t;else{const e=this.peek(1);switch("block-scalar"===t.type?t.indent="indent"in e?e.indent:0:"flow-collection"===t.type&&"document"===e.type&&(t.indent=0),"flow-collection"===t.type&&u(t),e.type){case"document":e.value=t;break;case"block-scalar":e.props.push(t);break;case"block-map":{const i=e.items[e.items.length-1];if(i.value)return e.items.push({start:[],key:t,sep:[]}),void(this.onKeyLine=!0);if(!i.sep)return Object.assign(i,{key:t,sep:[]}),void(this.onKeyLine=!i.explicitKey);i.value=t;break}case"block-seq":{const i=e.items[e.items.length-1];i.value?e.items.push({start:[],value:t}):i.value=t;break}case"flow-collection":{const i=e.items[e.items.length-1];return void(!i||i.value?e.items.push({start:[],key:t,sep:[]}):i.sep?i.value=t:Object.assign(i,{key:t,sep:[]}))}default:yield*this.pop(),yield*this.pop(t)}if(!("document"!==e.type&&"block-map"!==e.type&&"block-seq"!==e.type||"block-map"!==t.type&&"block-seq"!==t.type)){const i=t.items[t.items.length-1];i&&!i.sep&&!i.value&&i.start.length>0&&-1===a(i.start)&&(0===t.indent||i.start.every((e=>"comment"!==e.type||e.indent<t.indent)))&&("document"===e.type?e.end=i.start:e.items.push({start:i.start}),t.items.splice(-1,1))}}else{const e="Tried to pop an empty stack";yield{type:"error",offset:this.offset,source:"",message:e}}}*stream(){switch(this.type){case"directive-line":return void(yield{type:"directive",offset:this.offset,source:this.source});case"byte-order-mark":case"space":case"comment":case"newline":return void(yield this.sourceToken);case"doc-mode":case"doc-start":{const e={type:"document",offset:this.offset,start:[]};return"doc-start"===this.type&&e.start.push(this.sourceToken),void this.stack.push(e)}}yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML stream`,source:this.source}}*document(e){if(e.value)return yield*this.lineEnd(e);switch(this.type){case"doc-start":return void(-1!==a(e.start)?(yield*this.pop(),yield*this.step()):e.start.push(this.sourceToken));case"anchor":case"tag":case"space":case"comment":case"newline":return void e.start.push(this.sourceToken)}const t=this.startBlockValue(e);t?this.stack.push(t):yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML document`,source:this.source}}*scalar(e){if("map-value-ind"===this.type){const t=d(c(this.peek(2)));let i;e.end?(i=e.end,i.push(this.sourceToken),delete e.end):i=[this.sourceToken];const r={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:t,key:e,sep:i}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=r}else yield*this.lineEnd(e)}*blockScalar(e){switch(this.type){case"space":case"comment":case"newline":return void e.props.push(this.sourceToken);case"scalar":if(e.source=this.source,this.atNewLine=!0,this.indent=0,this.onNewLine){let e=this.source.indexOf("\n")+1;for(;0!==e;)this.onNewLine(this.offset+e),e=this.source.indexOf("\n",e)+1}yield*this.pop();break;default:yield*this.pop(),yield*this.step()}}*blockMap(e){const t=e.items[e.items.length-1];switch(this.type){case"newline":if(this.onKeyLine=!1,t.value){const i="end"in t.value?t.value.end:void 0,r=Array.isArray(i)?i[i.length-1]:void 0;"comment"===r?.type?i?.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken);return;case"space":case"comment":if(t.value)e.items.push({start:[this.sourceToken]});else if(t.sep)t.sep.push(this.sourceToken);else{if(this.atIndentedComment(t.start,e.indent)){const i=e.items[e.items.length-2],r=i?.value?.end;if(Array.isArray(r))return Array.prototype.push.apply(r,t.start),r.push(this.sourceToken),void e.items.pop()}t.start.push(this.sourceToken)}return}if(this.indent>=e.indent){const i=!this.onKeyLine&&this.indent===e.indent,r=i&&(t.sep||t.explicitKey)&&"seq-item-ind"!==this.type;let s=[];if(r&&t.sep&&!t.value){const i=[];for(let r=0;r<t.sep.length;++r){const s=t.sep[r];switch(s.type){case"newline":i.push(r);break;case"space":break;case"comment":s.indent>e.indent&&(i.length=0);break;default:i.length=0}}i.length>=2&&(s=t.sep.splice(i[1]))}switch(this.type){case"anchor":case"tag":return void(r||t.value?(s.push(this.sourceToken),e.items.push({start:s}),this.onKeyLine=!0):t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken));case"explicit-key-ind":return t.sep||t.explicitKey?r||t.value?(s.push(this.sourceToken),e.items.push({start:s,explicitKey:!0})):this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken],explicitKey:!0}]}):(t.start.push(this.sourceToken),t.explicitKey=!0),void(this.onKeyLine=!0);case"map-value-ind":if(t.explicitKey)if(t.sep)if(t.value)e.items.push({start:[],key:null,sep:[this.sourceToken]});else if(n(t.sep,"map-value-ind"))this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:s,key:null,sep:[this.sourceToken]}]});else if(p(t.key)&&!n(t.sep,"newline")){const e=d(t.start),i=t.key,r=t.sep;r.push(this.sourceToken),delete t.key,delete t.sep,this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:e,key:i,sep:r}]})}else s.length>0?t.sep=t.sep.concat(s,this.sourceToken):t.sep.push(this.sourceToken);else if(n(t.start,"newline"))Object.assign(t,{key:null,sep:[this.sourceToken]});else{const e=d(t.start);this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:e,key:null,sep:[this.sourceToken]}]})}else t.sep?t.value||r?e.items.push({start:s,key:null,sep:[this.sourceToken]}):n(t.sep,"map-value-ind")?this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[],key:null,sep:[this.sourceToken]}]}):t.sep.push(this.sourceToken):Object.assign(t,{key:null,sep:[this.sourceToken]});return void(this.onKeyLine=!0);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const i=this.flowScalar(this.type);return void(r||t.value?(e.items.push({start:s,key:i,sep:[]}),this.onKeyLine=!0):t.sep?this.stack.push(i):(Object.assign(t,{key:i,sep:[]}),this.onKeyLine=!0))}default:{const r=this.startBlockValue(e);if(r){if("block-seq"===r.type){if(!t.explicitKey&&t.sep&&!n(t.sep,"newline"))return void(yield*this.pop({type:"error",offset:this.offset,message:"Unexpected block-seq-ind on same line with key",source:this.source}))}else i&&e.items.push({start:s});return void this.stack.push(r)}}}}yield*this.pop(),yield*this.step()}*blockSequence(e){const t=e.items[e.items.length-1];switch(this.type){case"newline":if(t.value){const i="end"in t.value?t.value.end:void 0,r=Array.isArray(i)?i[i.length-1]:void 0;"comment"===r?.type?i?.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else t.start.push(this.sourceToken);return;case"space":case"comment":if(t.value)e.items.push({start:[this.sourceToken]});else{if(this.atIndentedComment(t.start,e.indent)){const i=e.items[e.items.length-2],r=i?.value?.end;if(Array.isArray(r))return Array.prototype.push.apply(r,t.start),r.push(this.sourceToken),void e.items.pop()}t.start.push(this.sourceToken)}return;case"anchor":case"tag":if(t.value||this.indent<=e.indent)break;return void t.start.push(this.sourceToken);case"seq-item-ind":if(this.indent!==e.indent)break;return void(t.value||n(t.start,"seq-item-ind")?e.items.push({start:[this.sourceToken]}):t.start.push(this.sourceToken))}if(this.indent>e.indent){const t=this.startBlockValue(e);if(t)return void this.stack.push(t)}yield*this.pop(),yield*this.step()}*flowCollection(e){const t=e.items[e.items.length-1];if("flow-error-end"===this.type){let e;do{yield*this.pop(),e=this.peek(1)}while(e&&"flow-collection"===e.type)}else if(0===e.end.length){switch(this.type){case"comma":case"explicit-key-ind":return void(!t||t.sep?e.items.push({start:[this.sourceToken]}):t.start.push(this.sourceToken));case"map-value-ind":return void(!t||t.value?e.items.push({start:[],key:null,sep:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):Object.assign(t,{key:null,sep:[this.sourceToken]}));case"space":case"comment":case"newline":case"anchor":case"tag":return void(!t||t.value?e.items.push({start:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken));case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const i=this.flowScalar(this.type);return void(!t||t.value?e.items.push({start:[],key:i,sep:[]}):t.sep?this.stack.push(i):Object.assign(t,{key:i,sep:[]}))}case"flow-map-end":case"flow-seq-end":return void e.end.push(this.sourceToken)}const i=this.startBlockValue(e);i?this.stack.push(i):(yield*this.pop(),yield*this.step())}else{const t=this.peek(2);if("block-map"===t.type&&("map-value-ind"===this.type&&t.indent===e.indent||"newline"===this.type&&!t.items[t.items.length-1].sep))yield*this.pop(),yield*this.step();else if("map-value-ind"===this.type&&"flow-collection"!==t.type){const i=d(c(t));u(e);const r=e.end.splice(1,e.end.length);r.push(this.sourceToken);const s={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:i,key:e,sep:r}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=s}else yield*this.lineEnd(e)}}flowScalar(e){if(this.onNewLine){let e=this.source.indexOf("\n")+1;for(;0!==e;)this.onNewLine(this.offset+e),e=this.source.indexOf("\n",e)+1}return{type:e,offset:this.offset,indent:this.indent,source:this.source}}startBlockValue(e){switch(this.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return this.flowScalar(this.type);case"block-scalar-header":return{type:"block-scalar",offset:this.offset,indent:this.indent,props:[this.sourceToken],source:""};case"flow-map-start":case"flow-seq-start":return{type:"flow-collection",offset:this.offset,indent:this.indent,start:this.sourceToken,items:[],end:[]};case"seq-item-ind":return{type:"block-seq",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]};case"explicit-key-ind":{this.onKeyLine=!0;const t=d(c(e));return t.push(this.sourceToken),{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:t,explicitKey:!0}]}}case"map-value-ind":{this.onKeyLine=!0;const t=d(c(e));return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:t,key:null,sep:[this.sourceToken]}]}}}return null}atIndentedComment(e,t){return"comment"===this.type&&!(this.indent<=t)&&e.every((e=>"newline"===e.type||"space"===e.type))}*documentEnd(e){"doc-mode"!==this.type&&(e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop()))}*lineEnd(e){switch(this.type){case"comma":case"doc-start":case"doc-end":case"flow-seq-end":case"flow-map-end":case"map-value-ind":yield*this.pop(),yield*this.step();break;case"newline":this.onKeyLine=!1;default:e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop())}}}},6261:(e,t,i)=>{"use strict";var r=i(484),s=i(9125);function o(e){const t=new Set;return s.visit(e,{Value(e,i){i.anchor&&t.add(i.anchor)}}),t}function n(e,t){for(let i=1;;++i){const r=`${e}${i}`;if(!t.has(r))return r}}t.anchorIsValid=function(e){if(/[\x00-\x19\s,[\]{}]/.test(e)){const t=JSON.stringify(e);throw new Error(`Anchor must not contain whitespace or control characters: ${t}`)}return!0},t.anchorNames=o,t.createNodeAnchors=function(e,t){const i=[],s=new Map;let a=null;return{onAnchor:r=>{i.push(r),a??(a=o(e));const s=n(t,a);return a.add(s),s},setAnchors:()=>{for(const e of i){const t=s.get(e);if("object"!=typeof t||!t.anchor||!r.isScalar(t.node)&&!r.isCollection(t.node)){const t=new Error("Failed to resolve repeated object (this should not happen)");throw t.source=e,t}t.node.anchor=t.anchor}},sourceObjects:s}},t.findNewAnchor=n},6276:(e,t,i)=>{var r=i(4555),s=i(2313);e.exports=function(e){Object.keys(this.jobs).length&&(this.index=this.size,r(this),s(e)(null,this.results))}},6288:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class i extends Error{constructor(e){super("validation failed"),this.errors=e,this.ajv=this.validation=!0}}t.default=i},6299:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},6333:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getNewOptions=t.getJsonSchemaRefParserDefaultOptions=void 0;const s=r(i(2376)),o=r(i(1897)),n=r(i(6977)),a=r(i(5931)),p=r(i(8337)),c=r(i(3124));function d(e,t){if(u(t)){const i=Object.keys(t).filter((e=>!["__proto__","constructor","prototype"].includes(e)));for(let r=0;r<i.length;r++){const s=i[r],o=t[s],n=e[s];u(o)?e[s]=d(n||{},o):void 0!==o&&(e[s]=o)}}return e}function u(e){return e&&"object"==typeof e&&!Array.isArray(e)&&!(e instanceof RegExp)&&!(e instanceof Date)}t.getJsonSchemaRefParserDefaultOptions=()=>({parse:{json:{...s.default},yaml:{...o.default},text:{...n.default},binary:{...a.default}},resolve:{file:{...p.default},http:{...c.default},external:!0},continueOnError:!1,dereference:{circular:!0,excludedPathMatcher:()=>!1,referenceResolution:"relative"},mutateInputSchema:!0}),t.getNewOptions=e=>{const i=(0,t.getJsonSchemaRefParserDefaultOptions)();return e&&d(i,e),i}},6385:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.parse=void 0,t.resolve=x,t.cwd=b,t.getProtocol=v,t.getExtension=function(e){const t=e.lastIndexOf(".");return t>=0?w(e.substr(t).toLowerCase()):""},t.stripQuery=w,t.getHash=I,t.stripHash=k,t.isHttp=function(e){const t=v(e);return"http"===t||"https"===t||void 0===t&&"undefined"!=typeof window},t.isFileSystemPath=P,t.fromFileSystemPath=function(e){if((0,f.isWindows)()){const t=b(),i=e.toUpperCase(),r=(0,p.default)(t).toUpperCase(),s=i.includes(r),o=i.includes(r),n=c.win32?.isAbsolute(e)||e.startsWith("http://")||e.startsWith("https://")||e.startsWith("file://");s||o||n||t.startsWith("http")||(e=(0,m.join)(t,e)),e=(0,p.default)(e)}e=encodeURI(e);for(const t of y)e=e.replace(t[0],t[1]);return e},t.toFileSystemPath=function(e,t){e=decodeURI(e);for(let t=0;t<g.length;t+=2)e=e.replace(g[t],g[t+1]);let i="file://"===e.substr(0,7).toLowerCase();return i&&(e="/"===e[7]?e.substr(8):e.substr(7),(0,f.isWindows)()&&"/"===e[1]&&(e=e[0]+":"+e.substr(1)),t?e="file:///"+e:(i=!1,e=(0,f.isWindows)()?e:"/"+e)),(0,f.isWindows)()&&!i&&":\\"===(e=e.replace(d,"\\")).substr(1,2)&&(e=e[0].toUpperCase()+e.substr(1)),e},t.safePointerToPath=function(e){return e.length<=1||"#"!==e[0]||"/"!==e[1]?[]:e.slice(2).split("/").map((e=>decodeURIComponent(e).replace(l,"/").replace(h,"~")))},t.relative=function(e,t){if(!P(e)||!P(t))return x(e,t);const i=c.default.dirname(k(e)),r=k(t);return c.default.relative(i,r)+I(t)};const p=a(i(9983)),c=n(i(6928)),d=/\//g,u=/^(\w{2,}):\/\//i,l=/~1/g,h=/~0/g,m=i(6928),f=i(3974),y=[[/\?/g,"%3F"],[/#/g,"%23"]],g=[/%23/g,"#",/%24/g,"$",/%26/g,"&",/%2C/g,",",/%40/g,"@"];function x(e,t){const i=new URL((0,p.default)(e),"https://aaa.nonexistanturl.com"),r=new URL((0,p.default)(t),i),s=t.match(/(\s*)$/)?.[1]||"";if("aaa.nonexistanturl.com"===r.hostname){const{pathname:e,search:t,hash:i}=r;return e+t+i+s}return r.toString()+s}function b(){if("undefined"!=typeof window)return location.href;const e=process.cwd(),t=e.slice(-1);return"/"===t||"\\"===t?e:e+"/"}function v(e){const t=u.exec(e||"");if(t)return t[1].toLowerCase()}function w(e){const t=e.indexOf("?");return t>=0&&(e=e.substr(0,t)),e}function I(e){if(!e)return"#";const t=e.indexOf("#");return t>=0?e.substring(t):"#"}function k(e){if(!e)return"";const t=e.indexOf("#");return t>=0&&(e=e.substring(0,t)),e}function P(e){if("undefined"!=typeof window||"undefined"!=typeof process&&process.browser)return!1;const t=v(e);return void 0===t||"file"===t}t.parse=e=>new URL(e)},6449:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},6466:(e,t,i)=>{"use strict";var r,s,o,n=i(8011),a=i(6928).extname,p=/^\s*([^;\s]*)(?:;|\s|$)/,c=/^text\//i;function d(e){if(!e||"string"!=typeof e)return!1;var t=p.exec(e),i=t&&n[t[1].toLowerCase()];return i&&i.charset?i.charset:!(!t||!c.test(t[1]))&&"UTF-8"}t.charset=d,t.charsets={lookup:d},t.contentType=function(e){if(!e||"string"!=typeof e)return!1;var i=-1===e.indexOf("/")?t.lookup(e):e;if(!i)return!1;if(-1===i.indexOf("charset")){var r=t.charset(i);r&&(i+="; charset="+r.toLowerCase())}return i},t.extension=function(e){if(!e||"string"!=typeof e)return!1;var i=p.exec(e),r=i&&t.extensions[i[1].toLowerCase()];return!(!r||!r.length)&&r[0]},t.extensions=Object.create(null),t.lookup=function(e){if(!e||"string"!=typeof e)return!1;var i=a("x."+e).toLowerCase().substr(1);return i&&t.types[i]||!1},t.types=Object.create(null),r=t.extensions,s=t.types,o=["nginx","apache",void 0,"iana"],Object.keys(n).forEach((function(e){var t=n[e],i=t.extensions;if(i&&i.length){r[e]=i;for(var a=0;a<i.length;a++){var p=i[a];if(s[p]){var c=o.indexOf(n[s[p]].source),d=o.indexOf(t.source);if("application/octet-stream"!==s[p]&&(c>d||c===d&&"application/"===s[p].substr(0,12)))continue}s[p]=e}}}))},6504:(e,t,i)=>{"use strict";var r=i(7016).parse,s={ftp:21,gopher:70,http:80,https:443,ws:80,wss:443},o=String.prototype.endsWith||function(e){return e.length<=this.length&&-1!==this.indexOf(e,this.length-e.length)};function n(e){return process.env[e.toLowerCase()]||process.env[e.toUpperCase()]||""}t.getProxyForUrl=function(e){var t="string"==typeof e?r(e):e||{},i=t.protocol,a=t.host,p=t.port;if("string"!=typeof a||!a||"string"!=typeof i)return"";if(i=i.split(":",1)[0],!function(e,t){var i=(n("npm_config_no_proxy")||n("no_proxy")).toLowerCase();return!i||"*"!==i&&i.split(/[,\s]/).every((function(i){if(!i)return!0;var r=i.match(/^(.+):(\d+)$/),s=r?r[1]:i,n=r?parseInt(r[2]):0;return!(!n||n===t)||(/^[.*]/.test(s)?("*"===s.charAt(0)&&(s=s.slice(1)),!o.call(e,s)):e!==s)}))}(a=a.replace(/:\d*$/,""),p=parseInt(p)||s[i]||0))return"";var c=n("npm_config_"+i+"_proxy")||n(i+"_proxy")||n("npm_config_proxy")||n("all_proxy");return c&&-1===c.indexOf("://")&&(c=i+"://"+c),c}},6508:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assignDefaults=void 0;const r=i(6675),s=i(749);function o(e,t,i){const{gen:o,compositeRule:n,data:a,opts:p}=e;if(void 0===i)return;const c=r._`${a}${(0,r.getProperty)(t)}`;if(n)return void(0,s.checkStrictMode)(e,`default is ignored for: ${c}`);let d=r._`${c} === undefined`;"empty"===p.useDefaults&&(d=r._`${d} || ${c} === null || ${c} === ""`),o.if(d,r._`${c} = ${(0,r.stringify)(i)}`)}t.assignDefaults=function(e,t){const{properties:i,items:r}=e.schema;if("object"===t&&i)for(const t in i)o(e,t,i[t].default);else"array"===t&&Array.isArray(r)&&r.forEach(((t,i)=>o(e,i,t.default)))}},6549:e=>{"use strict";e.exports=Object.getOwnPropertyDescriptor},6585:e=>{var t=1e3,i=60*t,r=60*i,s=24*r,o=7*s;function n(e,t,i,r){var s=t>=1.5*i;return Math.round(e/i)+" "+r+(s?"s":"")}e.exports=function(e,a){a=a||{};var p,c,d=typeof e;if("string"===d&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var n=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(n){var a=parseFloat(n[1]);switch((n[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"weeks":case"week":case"w":return a*o;case"days":case"day":case"d":return a*s;case"hours":case"hour":case"hrs":case"hr":case"h":return a*r;case"minutes":case"minute":case"mins":case"min":case"m":return a*i;case"seconds":case"second":case"secs":case"sec":case"s":return a*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}}}(e);if("number"===d&&isFinite(e))return a.long?(p=e,(c=Math.abs(p))>=s?n(p,c,s,"day"):c>=r?n(p,c,r,"hour"):c>=i?n(p,c,i,"minute"):c>=t?n(p,c,t,"second"):p+" ms"):function(e){var o=Math.abs(e);return o>=s?Math.round(e/s)+"d":o>=r?Math.round(e/r)+"h":o>=i?Math.round(e/i)+"m":o>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},6649:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6193);class s extends Error{constructor(e,t,i,s){super(s||`can't resolve reference ${i} from id ${t}`),this.missingRef=(0,r.resolveUrl)(e,t,i),this.missingSchema=(0,r.normalizeId)((0,r.getFullPath)(e,this.missingRef))}}t.default=s},6663:(e,t,i)=>{"use strict";var r=i(5388),s=Object.prototype.hasOwnProperty;e.exports=new r("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,i=e;for(t in i)if(s.call(i,t)&&null!==i[t])return!1;return!0},construct:function(e){return null!==e?e:{}}})},6667:(e,t,i)=>{"use strict";var r=i(8611),s=i(5692),o=i(8543),n=i(1893);function a(e,t,i){return new Promise((function(p,c){e=n.parse(e),(i=i||[]).push(e.href),function(e,t){return new Promise((function(i,o){var n=("https:"===e.protocol?s:r).get({hostname:e.hostname,port:e.port,path:e.path,auth:e.auth,protocol:e.protocol,headers:t.headers||{},withCredentials:t.withCredentials});"function"==typeof n.setTimeout&&n.setTimeout(t.timeout),n.on("timeout",(function(){n.abort()})),n.on("error",o),n.once("response",(function(e){e.body=new Buffer(0),e.on("data",(function(t){e.body=Buffer.concat([e.body,new Buffer(t)])})),e.on("error",o),e.on("end",(function(){i(e)}))}))}))}(e,t).then((function(r){if(r.statusCode>=400)throw o({status:r.statusCode},"HTTP ERROR %d",r.statusCode);if(r.statusCode>=300)if(i.length>t.redirects)c(o({status:r.statusCode},"Error downloading %s. \nToo many redirects: \n  %s",i[0],i.join(" \n  ")));else{if(!r.headers.location)throw o({status:r.statusCode},"HTTP %d redirect with no location header",r.statusCode);a(n.resolve(e,r.headers.location),t,i).then(p,c)}else p(r.body||new Buffer(0))})).catch((function(t){c(o(t,"Error downloading",e.href))}))}))}e.exports={order:200,headers:null,timeout:5e3,redirects:5,withCredentials:!1,canRead:function(e){return n.isHttp(e.url)},read:function(e){var t=n.parse(e.url);return process.browser&&!t.protocol&&(t.protocol=n.parse(location.href).protocol),a(t,this)}}},6675:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.or=t.and=t.not=t.CodeGen=t.operators=t.varKinds=t.ValueScopeName=t.ValueScope=t.Scope=t.Name=t.regexpCode=t.stringify=t.getProperty=t.nil=t.strConcat=t.str=t._=void 0;const r=i(2958),s=i(5859);var o=i(2958);Object.defineProperty(t,"_",{enumerable:!0,get:function(){return o._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return o.str}}),Object.defineProperty(t,"strConcat",{enumerable:!0,get:function(){return o.strConcat}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return o.nil}}),Object.defineProperty(t,"getProperty",{enumerable:!0,get:function(){return o.getProperty}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return o.stringify}}),Object.defineProperty(t,"regexpCode",{enumerable:!0,get:function(){return o.regexpCode}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return o.Name}});var n=i(5859);Object.defineProperty(t,"Scope",{enumerable:!0,get:function(){return n.Scope}}),Object.defineProperty(t,"ValueScope",{enumerable:!0,get:function(){return n.ValueScope}}),Object.defineProperty(t,"ValueScopeName",{enumerable:!0,get:function(){return n.ValueScopeName}}),Object.defineProperty(t,"varKinds",{enumerable:!0,get:function(){return n.varKinds}}),t.operators={GT:new r._Code(">"),GTE:new r._Code(">="),LT:new r._Code("<"),LTE:new r._Code("<="),EQ:new r._Code("==="),NEQ:new r._Code("!=="),NOT:new r._Code("!"),OR:new r._Code("||"),AND:new r._Code("&&"),ADD:new r._Code("+")};class a{optimizeNodes(){return this}optimizeNames(e,t){return this}}class p extends a{constructor(e,t,i){super(),this.varKind=e,this.name=t,this.rhs=i}render({es5:e,_n:t}){const i=e?s.varKinds.var:this.varKind,r=void 0===this.rhs?"":` = ${this.rhs}`;return`${i} ${this.name}${r};`+t}optimizeNames(e,t){if(e[this.name.str])return this.rhs&&(this.rhs=T(this.rhs,e,t)),this}get names(){return this.rhs instanceof r._CodeOrName?this.rhs.names:{}}}class c extends a{constructor(e,t,i){super(),this.lhs=e,this.rhs=t,this.sideEffects=i}render({_n:e}){return`${this.lhs} = ${this.rhs};`+e}optimizeNames(e,t){if(!(this.lhs instanceof r.Name)||e[this.lhs.str]||this.sideEffects)return this.rhs=T(this.rhs,e,t),this}get names(){return D(this.lhs instanceof r.Name?{}:{...this.lhs.names},this.rhs)}}class d extends c{constructor(e,t,i,r){super(e,i,r),this.op=t}render({_n:e}){return`${this.lhs} ${this.op}= ${this.rhs};`+e}}class u extends a{constructor(e){super(),this.label=e,this.names={}}render({_n:e}){return`${this.label}:`+e}}class l extends a{constructor(e){super(),this.label=e,this.names={}}render({_n:e}){return`break${this.label?` ${this.label}`:""};`+e}}class h extends a{constructor(e){super(),this.error=e}render({_n:e}){return`throw ${this.error};`+e}get names(){return this.error.names}}class m extends a{constructor(e){super(),this.code=e}render({_n:e}){return`${this.code};`+e}optimizeNodes(){return`${this.code}`?this:void 0}optimizeNames(e,t){return this.code=T(this.code,e,t),this}get names(){return this.code instanceof r._CodeOrName?this.code.names:{}}}class f extends a{constructor(e=[]){super(),this.nodes=e}render(e){return this.nodes.reduce(((t,i)=>t+i.render(e)),"")}optimizeNodes(){const{nodes:e}=this;let t=e.length;for(;t--;){const i=e[t].optimizeNodes();Array.isArray(i)?e.splice(t,1,...i):i?e[t]=i:e.splice(t,1)}return e.length>0?this:void 0}optimizeNames(e,t){const{nodes:i}=this;let r=i.length;for(;r--;){const s=i[r];s.optimizeNames(e,t)||(q(e,s.names),i.splice(r,1))}return i.length>0?this:void 0}get names(){return this.nodes.reduce(((e,t)=>S(e,t.names)),{})}}class y extends f{render(e){return"{"+e._n+super.render(e)+"}"+e._n}}class g extends f{}class x extends y{}x.kind="else";class b extends y{constructor(e,t){super(t),this.condition=e}render(e){let t=`if(${this.condition})`+super.render(e);return this.else&&(t+="else "+this.else.render(e)),t}optimizeNodes(){super.optimizeNodes();const e=this.condition;if(!0===e)return this.nodes;let t=this.else;if(t){const e=t.optimizeNodes();t=this.else=Array.isArray(e)?new x(e):e}return t?!1===e?t instanceof b?t:t.nodes:this.nodes.length?this:new b(C(e),t instanceof b?[t]:t.nodes):!1!==e&&this.nodes.length?this:void 0}optimizeNames(e,t){var i;if(this.else=null===(i=this.else)||void 0===i?void 0:i.optimizeNames(e,t),super.optimizeNames(e,t)||this.else)return this.condition=T(this.condition,e,t),this}get names(){const e=super.names;return D(e,this.condition),this.else&&S(e,this.else.names),e}}b.kind="if";class v extends y{}v.kind="for";class w extends v{constructor(e){super(),this.iteration=e}render(e){return`for(${this.iteration})`+super.render(e)}optimizeNames(e,t){if(super.optimizeNames(e,t))return this.iteration=T(this.iteration,e,t),this}get names(){return S(super.names,this.iteration.names)}}class I extends v{constructor(e,t,i,r){super(),this.varKind=e,this.name=t,this.from=i,this.to=r}render(e){const t=e.es5?s.varKinds.var:this.varKind,{name:i,from:r,to:o}=this;return`for(${t} ${i}=${r}; ${i}<${o}; ${i}++)`+super.render(e)}get names(){const e=D(super.names,this.from);return D(e,this.to)}}class k extends v{constructor(e,t,i,r){super(),this.loop=e,this.varKind=t,this.name=i,this.iterable=r}render(e){return`for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})`+super.render(e)}optimizeNames(e,t){if(super.optimizeNames(e,t))return this.iterable=T(this.iterable,e,t),this}get names(){return S(super.names,this.iterable.names)}}class P extends y{constructor(e,t,i){super(),this.name=e,this.args=t,this.async=i}render(e){return`${this.async?"async ":""}function ${this.name}(${this.args})`+super.render(e)}}P.kind="func";class j extends f{render(e){return"return "+super.render(e)}}j.kind="return";class A extends y{render(e){let t="try"+super.render(e);return this.catch&&(t+=this.catch.render(e)),this.finally&&(t+=this.finally.render(e)),t}optimizeNodes(){var e,t;return super.optimizeNodes(),null===(e=this.catch)||void 0===e||e.optimizeNodes(),null===(t=this.finally)||void 0===t||t.optimizeNodes(),this}optimizeNames(e,t){var i,r;return super.optimizeNames(e,t),null===(i=this.catch)||void 0===i||i.optimizeNames(e,t),null===(r=this.finally)||void 0===r||r.optimizeNames(e,t),this}get names(){const e=super.names;return this.catch&&S(e,this.catch.names),this.finally&&S(e,this.finally.names),e}}class O extends y{constructor(e){super(),this.error=e}render(e){return`catch(${this.error})`+super.render(e)}}O.kind="catch";class E extends y{render(e){return"finally"+super.render(e)}}function S(e,t){for(const i in t)e[i]=(e[i]||0)+(t[i]||0);return e}function D(e,t){return t instanceof r._CodeOrName?S(e,t.names):e}function T(e,t,i){return e instanceof r.Name?o(e):(s=e)instanceof r._Code&&s._items.some((e=>e instanceof r.Name&&1===t[e.str]&&void 0!==i[e.str]))?new r._Code(e._items.reduce(((e,t)=>(t instanceof r.Name&&(t=o(t)),t instanceof r._Code?e.push(...t._items):e.push(t),e)),[])):e;var s;function o(e){const r=i[e.str];return void 0===r||1!==t[e.str]?e:(delete t[e.str],r)}}function q(e,t){for(const i in t)e[i]=(e[i]||0)-(t[i]||0)}function C(e){return"boolean"==typeof e||"number"==typeof e||null===e?!e:r._`!${N(e)}`}E.kind="finally",t.CodeGen=class{constructor(e,t={}){this._values={},this._blockStarts=[],this._constants={},this.opts={...t,_n:t.lines?"\n":""},this._extScope=e,this._scope=new s.Scope({parent:e}),this._nodes=[new g]}toString(){return this._root.render(this.opts)}name(e){return this._scope.name(e)}scopeName(e){return this._extScope.name(e)}scopeValue(e,t){const i=this._extScope.value(e,t);return(this._values[i.prefix]||(this._values[i.prefix]=new Set)).add(i),i}getScopeValue(e,t){return this._extScope.getValue(e,t)}scopeRefs(e){return this._extScope.scopeRefs(e,this._values)}scopeCode(){return this._extScope.scopeCode(this._values)}_def(e,t,i,r){const s=this._scope.toName(t);return void 0!==i&&r&&(this._constants[s.str]=i),this._leafNode(new p(e,s,i)),s}const(e,t,i){return this._def(s.varKinds.const,e,t,i)}let(e,t,i){return this._def(s.varKinds.let,e,t,i)}var(e,t,i){return this._def(s.varKinds.var,e,t,i)}assign(e,t,i){return this._leafNode(new c(e,t,i))}add(e,i){return this._leafNode(new d(e,t.operators.ADD,i))}code(e){return"function"==typeof e?e():e!==r.nil&&this._leafNode(new m(e)),this}object(...e){const t=["{"];for(const[i,s]of e)t.length>1&&t.push(","),t.push(i),(i!==s||this.opts.es5)&&(t.push(":"),(0,r.addCodeArg)(t,s));return t.push("}"),new r._Code(t)}if(e,t,i){if(this._blockNode(new b(e)),t&&i)this.code(t).else().code(i).endIf();else if(t)this.code(t).endIf();else if(i)throw new Error('CodeGen: "else" body without "then" body');return this}elseIf(e){return this._elseNode(new b(e))}else(){return this._elseNode(new x)}endIf(){return this._endBlockNode(b,x)}_for(e,t){return this._blockNode(e),t&&this.code(t).endFor(),this}for(e,t){return this._for(new w(e),t)}forRange(e,t,i,r,o=(this.opts.es5?s.varKinds.var:s.varKinds.let)){const n=this._scope.toName(e);return this._for(new I(o,n,t,i),(()=>r(n)))}forOf(e,t,i,o=s.varKinds.const){const n=this._scope.toName(e);if(this.opts.es5){const e=t instanceof r.Name?t:this.var("_arr",t);return this.forRange("_i",0,r._`${e}.length`,(t=>{this.var(n,r._`${e}[${t}]`),i(n)}))}return this._for(new k("of",o,n,t),(()=>i(n)))}forIn(e,t,i,o=(this.opts.es5?s.varKinds.var:s.varKinds.const)){if(this.opts.ownProperties)return this.forOf(e,r._`Object.keys(${t})`,i);const n=this._scope.toName(e);return this._for(new k("in",o,n,t),(()=>i(n)))}endFor(){return this._endBlockNode(v)}label(e){return this._leafNode(new u(e))}break(e){return this._leafNode(new l(e))}return(e){const t=new j;if(this._blockNode(t),this.code(e),1!==t.nodes.length)throw new Error('CodeGen: "return" should have one node');return this._endBlockNode(j)}try(e,t,i){if(!t&&!i)throw new Error('CodeGen: "try" without "catch" and "finally"');const r=new A;if(this._blockNode(r),this.code(e),t){const e=this.name("e");this._currNode=r.catch=new O(e),t(e)}return i&&(this._currNode=r.finally=new E,this.code(i)),this._endBlockNode(O,E)}throw(e){return this._leafNode(new h(e))}block(e,t){return this._blockStarts.push(this._nodes.length),e&&this.code(e).endBlock(t),this}endBlock(e){const t=this._blockStarts.pop();if(void 0===t)throw new Error("CodeGen: not in self-balancing block");const i=this._nodes.length-t;if(i<0||void 0!==e&&i!==e)throw new Error(`CodeGen: wrong number of nodes: ${i} vs ${e} expected`);return this._nodes.length=t,this}func(e,t=r.nil,i,s){return this._blockNode(new P(e,t,i)),s&&this.code(s).endFunc(),this}endFunc(){return this._endBlockNode(P)}optimize(e=1){for(;e-- >0;)this._root.optimizeNodes(),this._root.optimizeNames(this._root.names,this._constants)}_leafNode(e){return this._currNode.nodes.push(e),this}_blockNode(e){this._currNode.nodes.push(e),this._nodes.push(e)}_endBlockNode(e,t){const i=this._currNode;if(i instanceof e||t&&i instanceof t)return this._nodes.pop(),this;throw new Error(`CodeGen: not in block "${t?`${e.kind}/${t.kind}`:e.kind}"`)}_elseNode(e){const t=this._currNode;if(!(t instanceof b))throw new Error('CodeGen: "else" without "if"');return this._currNode=t.else=e,this}get _root(){return this._nodes[0]}get _currNode(){const e=this._nodes;return e[e.length-1]}set _currNode(e){const t=this._nodes;t[t.length-1]=e}},t.not=C;const $=R(t.operators.AND);t.and=function(...e){return e.reduce($)};const _=R(t.operators.OR);function R(e){return(t,i)=>t===r.nil?i:i===r.nil?t:r._`${N(t)} ${e} ${N(i)}`}function N(e){return e instanceof r.Name?e:r._`(${e})`}t.or=function(...e){return e.reduce(_)}},6729:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={keyword:"multipleOf",type:"number",schemaType:"number",$data:!0,error:{message:({schemaCode:e})=>r.str`must be multiple of ${e}`,params:({schemaCode:e})=>r._`{multipleOf: ${e}}`},code(e){const{gen:t,data:i,schemaCode:s,it:o}=e,n=o.opts.multipleOfPrecision,a=t.let("res"),p=n?r._`Math.abs(Math.round(${a}) - ${a}) > 1e-${n}`:r._`${a} !== parseInt(${a})`;e.fail$data(r._`(${s} === 0 || (${a} = ${i}/${s}, ${p}))`)}};t.default=s},6743:(e,t,i)=>{"use strict";var r=i(9353);e.exports=Function.prototype.bind||r},6795:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.callRef=t.getValidate=void 0;const r=i(6649),s=i(2883),o=i(6675),n=i(3701),a=i(4253),p=i(749),c={keyword:"$ref",schemaType:"string",code(e){const{gen:t,schema:i,it:s}=e,{baseId:n,schemaEnv:p,validateName:c,opts:l,self:h}=s,{root:m}=p;if(("#"===i||"#/"===i)&&n===m.baseId)return function(){if(p===m)return u(e,c,p,p.$async);const i=t.scopeValue("root",{ref:m});return u(e,o._`${i}.validate`,m,m.$async)}();const f=a.resolveRef.call(h,m,n,i);if(void 0===f)throw new r.default(s.opts.uriResolver,n,i);return f instanceof a.SchemaEnv?function(t){const i=d(e,t);u(e,i,t,t.$async)}(f):function(r){const s=t.scopeValue("schema",!0===l.code.source?{ref:r,code:(0,o.stringify)(r)}:{ref:r}),n=t.name("valid"),a=e.subschema({schema:r,dataTypes:[],schemaPath:o.nil,topSchemaRef:s,errSchemaPath:i},n);e.mergeEvaluated(a),e.ok(n)}(f)}};function d(e,t){const{gen:i}=e;return t.validate?i.scopeValue("validate",{ref:t.validate}):o._`${i.scopeValue("wrapper",{ref:t})}.validate`}function u(e,t,i,r){const{gen:a,it:c}=e,{allErrors:d,schemaEnv:u,opts:l}=c,h=l.passContext?n.default.this:o.nil;function m(e){const t=o._`${e}.errors`;a.assign(n.default.vErrors,o._`${n.default.vErrors} === null ? ${t} : ${n.default.vErrors}.concat(${t})`),a.assign(n.default.errors,o._`${n.default.vErrors}.length`)}function f(e){var t;if(!c.opts.unevaluated)return;const r=null===(t=null==i?void 0:i.validate)||void 0===t?void 0:t.evaluated;if(!0!==c.props)if(r&&!r.dynamicProps)void 0!==r.props&&(c.props=p.mergeEvaluated.props(a,r.props,c.props));else{const t=a.var("props",o._`${e}.evaluated.props`);c.props=p.mergeEvaluated.props(a,t,c.props,o.Name)}if(!0!==c.items)if(r&&!r.dynamicItems)void 0!==r.items&&(c.items=p.mergeEvaluated.items(a,r.items,c.items));else{const t=a.var("items",o._`${e}.evaluated.items`);c.items=p.mergeEvaluated.items(a,t,c.items,o.Name)}}r?function(){if(!u.$async)throw new Error("async schema referenced by sync schema");const i=a.let("valid");a.try((()=>{a.code(o._`await ${(0,s.callValidateCode)(e,t,h)}`),f(t),d||a.assign(i,!0)}),(e=>{a.if(o._`!(${e} instanceof ${c.ValidationError})`,(()=>a.throw(e))),m(e),d||a.assign(i,!1)})),e.ok(i)}():e.result((0,s.callValidateCode)(e,t,h),(()=>f(t)),(()=>m(t)))}t.getValidate=d,t.callRef=u,t.default=c},6845:(e,t)=>{"use strict";t.resolveEnd=function(e,t,i,r){let s="";if(e){let o=!1,n="";for(const a of e){const{source:e,type:p}=a;switch(p){case"space":o=!0;break;case"comment":{i&&!o&&r(a,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const t=e.substring(1)||" ";s?s+=n+t:s=t,n="";break}case"newline":s&&(n+=e),o=!0;break;default:r(a,"UNEXPECTED_TOKEN",`Unexpected ${p} at node end`)}t+=e.length}}return{comment:s,offset:t}}},6906:(e,t)=>{"use strict";t.applyReviver=function e(t,i,r,s){if(s&&"object"==typeof s)if(Array.isArray(s))for(let i=0,r=s.length;i<r;++i){const r=s[i],o=e(t,s,String(i),r);void 0===o?delete s[i]:o!==r&&(s[i]=o)}else if(s instanceof Map)for(const i of Array.from(s.keys())){const r=s.get(i),o=e(t,s,i,r);void 0===o?s.delete(i):o!==r&&s.set(i,o)}else if(s instanceof Set)for(const i of Array.from(s)){const r=e(t,s,i,i);void 0===r?s.delete(i):r!==i&&(s.delete(i),s.add(r))}else for(const[i,r]of Object.entries(s)){const o=e(t,s,i,r);void 0===o?delete s[i]:o!==r&&(s[i]=o)}return t.call(i,r,s)}},6928:e=>{"use strict";e.exports=require("path")},6936:(e,t,i)=>{"use strict";var r=i(3144);const s=e=>"bigint"==typeof e||Number.isInteger(e);function o(e,t,i,{intAsBigInt:r}){const s=e[0];if("-"!==s&&"+"!==s||(t+=1),e=e.substring(t).replace(/_/g,""),r){switch(i){case 2:e=`0b${e}`;break;case 8:e=`0o${e}`;break;case 16:e=`0x${e}`}const t=BigInt(e);return"-"===s?BigInt(-1)*t:t}const o=parseInt(e,i);return"-"===s?-1*o:o}function n(e,t,i){const{value:o}=e;if(s(o)){const e=o.toString(t);return o<0?"-"+i+e.substr(1):i+e}return r.stringifyNumber(e)}const a={identify:s,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(e,t,i)=>o(e,2,2,i),stringify:e=>n(e,2,"0b")},p={identify:s,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(e,t,i)=>o(e,1,8,i),stringify:e=>n(e,8,"0")},c={identify:s,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(e,t,i)=>o(e,0,10,i),stringify:r.stringifyNumber},d={identify:s,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(e,t,i)=>o(e,2,16,i),stringify:e=>n(e,16,"0x")};t.int=c,t.intBin=a,t.intHex=d,t.intOct=p},6942:(e,t,i)=>{"use strict";var r=i(5388),s=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,i,r,o,n,a=e;for(n=new Array(a.length),t=0,i=a.length;t<i;t+=1){if(r=a[t],"[object Object]"!==s.call(r))return!1;if(1!==(o=Object.keys(r)).length)return!1;n[t]=[o[0],r[o[0]]]}return!0},construct:function(e){if(null===e)return[];var t,i,r,s,o,n=e;for(o=new Array(n.length),t=0,i=n.length;t<i;t+=1)r=n[t],s=Object.keys(r),o[t]=[s[0],r[s[0]]];return o}})},6946:(e,t,i)=>{"use strict";var r=i(5388),s=Object.prototype.hasOwnProperty,o=Object.prototype.toString;e.exports=new r("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,i,r,n,a,p=[],c=e;for(t=0,i=c.length;t<i;t+=1){if(r=c[t],a=!1,"[object Object]"!==o.call(r))return!1;for(n in r)if(s.call(r,n)){if(a)return!1;a=!0}if(!a)return!1;if(-1!==p.indexOf(n))return!1;p.push(n)}return!0},construct:function(e){return null!==e?e:[]}})},6955:(e,t,i)=>{"use strict";var r=i(6145),s=i(9343),o=i(4013),n=i(3665),a=i(4993),p=Object.prototype.hasOwnProperty,c=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,d=/[\x85\u2028\u2029]/,u=/[,\[\]\{\}]/,l=/^(?:!|!!|![a-z\-]+!)$/i,h=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function m(e){return Object.prototype.toString.call(e)}function f(e){return 10===e||13===e}function y(e){return 9===e||32===e}function g(e){return 9===e||32===e||10===e||13===e}function x(e){return 44===e||91===e||93===e||123===e||125===e}function b(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function v(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function w(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var I=new Array(256),k=new Array(256),P=0;P<256;P++)I[P]=v(P)?1:0,k[P]=v(P);function j(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||a,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.documents=[]}function A(e,t){return new s(t,new o(e.filename,e.input,e.position,e.line,e.position-e.lineStart))}function O(e,t){throw A(e,t)}function E(e,t){e.onWarning&&e.onWarning.call(null,A(e,t))}var S={YAML:function(e,t,i){var r,s,o;null!==e.version&&O(e,"duplication of %YAML directive"),1!==i.length&&O(e,"YAML directive accepts exactly one argument"),null===(r=/^([0-9]+)\.([0-9]+)$/.exec(i[0]))&&O(e,"ill-formed argument of the YAML directive"),s=parseInt(r[1],10),o=parseInt(r[2],10),1!==s&&O(e,"unacceptable YAML version of the document"),e.version=i[0],e.checkLineBreaks=o<2,1!==o&&2!==o&&E(e,"unsupported YAML version of the document")},TAG:function(e,t,i){var r,s;2!==i.length&&O(e,"TAG directive accepts exactly two arguments"),r=i[0],s=i[1],l.test(r)||O(e,"ill-formed tag handle (first argument) of the TAG directive"),p.call(e.tagMap,r)&&O(e,'there is a previously declared suffix for "'+r+'" tag handle'),h.test(s)||O(e,"ill-formed tag prefix (second argument) of the TAG directive"),e.tagMap[r]=s}};function D(e,t,i,r){var s,o,n,a;if(t<i){if(a=e.input.slice(t,i),r)for(s=0,o=a.length;s<o;s+=1)9===(n=a.charCodeAt(s))||32<=n&&n<=1114111||O(e,"expected valid JSON character");else c.test(a)&&O(e,"the stream contains non-printable characters");e.result+=a}}function T(e,t,i,s){var o,n,a,c;for(r.isObject(i)||O(e,"cannot merge mappings; the provided source object is unacceptable"),a=0,c=(o=Object.keys(i)).length;a<c;a+=1)n=o[a],p.call(t,n)||(t[n]=i[n],s[n]=!0)}function q(e,t,i,r,s,o,n,a){var c,d;if(Array.isArray(s))for(c=0,d=(s=Array.prototype.slice.call(s)).length;c<d;c+=1)Array.isArray(s[c])&&O(e,"nested arrays are not supported inside keys"),"object"==typeof s&&"[object Object]"===m(s[c])&&(s[c]="[object Object]");if("object"==typeof s&&"[object Object]"===m(s)&&(s="[object Object]"),s=String(s),null===t&&(t={}),"tag:yaml.org,2002:merge"===r)if(Array.isArray(o))for(c=0,d=o.length;c<d;c+=1)T(e,t,o[c],i);else T(e,t,o,i);else e.json||p.call(i,s)||!p.call(t,s)||(e.line=n||e.line,e.position=a||e.position,O(e,"duplicated mapping key")),t[s]=o,delete i[s];return t}function C(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):O(e,"a line break is expected"),e.line+=1,e.lineStart=e.position}function $(e,t,i){for(var r=0,s=e.input.charCodeAt(e.position);0!==s;){for(;y(s);)s=e.input.charCodeAt(++e.position);if(t&&35===s)do{s=e.input.charCodeAt(++e.position)}while(10!==s&&13!==s&&0!==s);if(!f(s))break;for(C(e),s=e.input.charCodeAt(e.position),r++,e.lineIndent=0;32===s;)e.lineIndent++,s=e.input.charCodeAt(++e.position)}return-1!==i&&0!==r&&e.lineIndent<i&&E(e,"deficient indentation"),r}function _(e){var t,i=e.position;return!(45!==(t=e.input.charCodeAt(i))&&46!==t||t!==e.input.charCodeAt(i+1)||t!==e.input.charCodeAt(i+2)||(i+=3,0!==(t=e.input.charCodeAt(i))&&!g(t)))}function R(e,t){1===t?e.result+=" ":t>1&&(e.result+=r.repeat("\n",t-1))}function N(e,t){var i,r,s=e.tag,o=e.anchor,n=[],a=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=n),r=e.input.charCodeAt(e.position);0!==r&&45===r&&g(e.input.charCodeAt(e.position+1));)if(a=!0,e.position++,$(e,!0,-1)&&e.lineIndent<=t)n.push(null),r=e.input.charCodeAt(e.position);else if(i=e.line,L(e,t,3,!1,!0),n.push(e.result),$(e,!0,-1),r=e.input.charCodeAt(e.position),(e.line===i||e.lineIndent>t)&&0!==r)O(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!a&&(e.tag=s,e.anchor=o,e.kind="sequence",e.result=n,!0)}function U(e){var t,i,r,s,o=!1,n=!1;if(33!==(s=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&O(e,"duplication of a tag property"),60===(s=e.input.charCodeAt(++e.position))?(o=!0,s=e.input.charCodeAt(++e.position)):33===s?(n=!0,i="!!",s=e.input.charCodeAt(++e.position)):i="!",t=e.position,o){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&62!==s);e.position<e.length?(r=e.input.slice(t,e.position),s=e.input.charCodeAt(++e.position)):O(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==s&&!g(s);)33===s&&(n?O(e,"tag suffix cannot contain exclamation marks"):(i=e.input.slice(t-1,e.position+1),l.test(i)||O(e,"named tag handle cannot contain such characters"),n=!0,t=e.position+1)),s=e.input.charCodeAt(++e.position);r=e.input.slice(t,e.position),u.test(r)&&O(e,"tag suffix cannot contain flow indicator characters")}return r&&!h.test(r)&&O(e,"tag name cannot contain such characters: "+r),o?e.tag=r:p.call(e.tagMap,i)?e.tag=e.tagMap[i]+r:"!"===i?e.tag="!"+r:"!!"===i?e.tag="tag:yaml.org,2002:"+r:O(e,'undeclared tag handle "'+i+'"'),!0}function F(e){var t,i;if(38!==(i=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&O(e,"duplication of an anchor property"),i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!g(i)&&!x(i);)i=e.input.charCodeAt(++e.position);return e.position===t&&O(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function L(e,t,i,s,o){var n,a,c,d,u,l,h,m,v=1,P=!1,j=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,n=a=c=4===i||3===i,s&&$(e,!0,-1)&&(P=!0,e.lineIndent>t?v=1:e.lineIndent===t?v=0:e.lineIndent<t&&(v=-1)),1===v)for(;U(e)||F(e);)$(e,!0,-1)?(P=!0,c=n,e.lineIndent>t?v=1:e.lineIndent===t?v=0:e.lineIndent<t&&(v=-1)):c=!1;if(c&&(c=P||o),1!==v&&4!==i||(h=1===i||2===i?t:t+1,m=e.position-e.lineStart,1===v?c&&(N(e,m)||function(e,t,i){var r,s,o,n,a,p=e.tag,c=e.anchor,d={},u={},l=null,h=null,m=null,f=!1,x=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=d),a=e.input.charCodeAt(e.position);0!==a;){if(r=e.input.charCodeAt(e.position+1),o=e.line,n=e.position,63!==a&&58!==a||!g(r)){if(!L(e,i,2,!1,!0))break;if(e.line===o){for(a=e.input.charCodeAt(e.position);y(a);)a=e.input.charCodeAt(++e.position);if(58===a)g(a=e.input.charCodeAt(++e.position))||O(e,"a whitespace character is expected after the key-value separator within a block mapping"),f&&(q(e,d,u,l,h,null),l=h=m=null),x=!0,f=!1,s=!1,l=e.tag,h=e.result;else{if(!x)return e.tag=p,e.anchor=c,!0;O(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!x)return e.tag=p,e.anchor=c,!0;O(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===a?(f&&(q(e,d,u,l,h,null),l=h=m=null),x=!0,f=!0,s=!0):f?(f=!1,s=!0):O(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,a=r;if((e.line===o||e.lineIndent>t)&&(L(e,t,4,!0,s)&&(f?h=e.result:m=e.result),f||(q(e,d,u,l,h,m,o,n),l=h=m=null),$(e,!0,-1),a=e.input.charCodeAt(e.position)),e.lineIndent>t&&0!==a)O(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return f&&q(e,d,u,l,h,null),x&&(e.tag=p,e.anchor=c,e.kind="mapping",e.result=d),x}(e,m,h))||function(e,t){var i,r,s,o,n,a,p,c,d,u,l=!0,h=e.tag,m=e.anchor,f={};if(91===(u=e.input.charCodeAt(e.position)))s=93,a=!1,r=[];else{if(123!==u)return!1;s=125,a=!0,r={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=r),u=e.input.charCodeAt(++e.position);0!==u;){if($(e,!0,t),(u=e.input.charCodeAt(e.position))===s)return e.position++,e.tag=h,e.anchor=m,e.kind=a?"mapping":"sequence",e.result=r,!0;l||O(e,"missed comma between flow collection entries"),d=null,o=n=!1,63===u&&g(e.input.charCodeAt(e.position+1))&&(o=n=!0,e.position++,$(e,!0,t)),i=e.line,L(e,t,1,!1,!0),c=e.tag,p=e.result,$(e,!0,t),u=e.input.charCodeAt(e.position),!n&&e.line!==i||58!==u||(o=!0,u=e.input.charCodeAt(++e.position),$(e,!0,t),L(e,t,1,!1,!0),d=e.result),a?q(e,r,f,c,p,d):o?r.push(q(e,null,f,c,p,d)):r.push(p),$(e,!0,t),44===(u=e.input.charCodeAt(e.position))?(l=!0,u=e.input.charCodeAt(++e.position)):l=!1}O(e,"unexpected end of the stream within a flow collection")}(e,h)?j=!0:(a&&function(e,t){var i,s,o,n,a,p=1,c=!1,d=!1,u=t,l=0,h=!1;if(124===(n=e.input.charCodeAt(e.position)))s=!1;else{if(62!==n)return!1;s=!0}for(e.kind="scalar",e.result="";0!==n;)if(43===(n=e.input.charCodeAt(++e.position))||45===n)1===p?p=43===n?3:2:O(e,"repeat of a chomping mode identifier");else{if(!((o=48<=(a=n)&&a<=57?a-48:-1)>=0))break;0===o?O(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):d?O(e,"repeat of an indentation width identifier"):(u=t+o-1,d=!0)}if(y(n)){do{n=e.input.charCodeAt(++e.position)}while(y(n));if(35===n)do{n=e.input.charCodeAt(++e.position)}while(!f(n)&&0!==n)}for(;0!==n;){for(C(e),e.lineIndent=0,n=e.input.charCodeAt(e.position);(!d||e.lineIndent<u)&&32===n;)e.lineIndent++,n=e.input.charCodeAt(++e.position);if(!d&&e.lineIndent>u&&(u=e.lineIndent),f(n))l++;else{if(e.lineIndent<u){3===p?e.result+=r.repeat("\n",c?1+l:l):1===p&&c&&(e.result+="\n");break}for(s?y(n)?(h=!0,e.result+=r.repeat("\n",c?1+l:l)):h?(h=!1,e.result+=r.repeat("\n",l+1)):0===l?c&&(e.result+=" "):e.result+=r.repeat("\n",l):e.result+=r.repeat("\n",c?1+l:l),c=!0,d=!0,l=0,i=e.position;!f(n)&&0!==n;)n=e.input.charCodeAt(++e.position);D(e,i,e.position,!1)}}return!0}(e,h)||function(e,t){var i,r,s;if(39!==(i=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,r=s=e.position;0!==(i=e.input.charCodeAt(e.position));)if(39===i){if(D(e,r,e.position,!0),39!==(i=e.input.charCodeAt(++e.position)))return!0;r=e.position,e.position++,s=e.position}else f(i)?(D(e,r,s,!0),R(e,$(e,!1,t)),r=s=e.position):e.position===e.lineStart&&_(e)?O(e,"unexpected end of the document within a single quoted scalar"):(e.position++,s=e.position);O(e,"unexpected end of the stream within a single quoted scalar")}(e,h)||function(e,t){var i,r,s,o,n,a,p;if(34!==(a=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,i=r=e.position;0!==(a=e.input.charCodeAt(e.position));){if(34===a)return D(e,i,e.position,!0),e.position++,!0;if(92===a){if(D(e,i,e.position,!0),f(a=e.input.charCodeAt(++e.position)))$(e,!1,t);else if(a<256&&I[a])e.result+=k[a],e.position++;else if((n=120===(p=a)?2:117===p?4:85===p?8:0)>0){for(s=n,o=0;s>0;s--)(n=b(a=e.input.charCodeAt(++e.position)))>=0?o=(o<<4)+n:O(e,"expected hexadecimal character");e.result+=w(o),e.position++}else O(e,"unknown escape sequence");i=r=e.position}else f(a)?(D(e,i,r,!0),R(e,$(e,!1,t)),i=r=e.position):e.position===e.lineStart&&_(e)?O(e,"unexpected end of the document within a double quoted scalar"):(e.position++,r=e.position)}O(e,"unexpected end of the stream within a double quoted scalar")}(e,h)?j=!0:function(e){var t,i,r;if(42!==(r=e.input.charCodeAt(e.position)))return!1;for(r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!g(r)&&!x(r);)r=e.input.charCodeAt(++e.position);return e.position===t&&O(e,"name of an alias node must contain at least one character"),i=e.input.slice(t,e.position),p.call(e.anchorMap,i)||O(e,'unidentified alias "'+i+'"'),e.result=e.anchorMap[i],$(e,!0,-1),!0}(e)?(j=!0,null===e.tag&&null===e.anchor||O(e,"alias node should not have any properties")):function(e,t,i){var r,s,o,n,a,p,c,d,u=e.kind,l=e.result;if(g(d=e.input.charCodeAt(e.position))||x(d)||35===d||38===d||42===d||33===d||124===d||62===d||39===d||34===d||37===d||64===d||96===d)return!1;if((63===d||45===d)&&(g(r=e.input.charCodeAt(e.position+1))||i&&x(r)))return!1;for(e.kind="scalar",e.result="",s=o=e.position,n=!1;0!==d;){if(58===d){if(g(r=e.input.charCodeAt(e.position+1))||i&&x(r))break}else if(35===d){if(g(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&_(e)||i&&x(d))break;if(f(d)){if(a=e.line,p=e.lineStart,c=e.lineIndent,$(e,!1,-1),e.lineIndent>=t){n=!0,d=e.input.charCodeAt(e.position);continue}e.position=o,e.line=a,e.lineStart=p,e.lineIndent=c;break}}n&&(D(e,s,o,!1),R(e,e.line-a),s=o=e.position,n=!1),y(d)||(o=e.position+1),d=e.input.charCodeAt(++e.position)}return D(e,s,o,!1),!!e.result||(e.kind=u,e.result=l,!1)}(e,h,1===i)&&(j=!0,null===e.tag&&(e.tag="?")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===v&&(j=c&&N(e,m))),null!==e.tag&&"!"!==e.tag)if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&O(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),d=0,u=e.implicitTypes.length;d<u;d+=1)if((l=e.implicitTypes[d]).resolve(e.result)){e.result=l.construct(e.result),e.tag=l.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else p.call(e.typeMap[e.kind||"fallback"],e.tag)?(l=e.typeMap[e.kind||"fallback"][e.tag],null!==e.result&&l.kind!==e.kind&&O(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+l.kind+'", not "'+e.kind+'"'),l.resolve(e.result)?(e.result=l.construct(e.result),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):O(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")):O(e,"unknown tag !<"+e.tag+">");return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||j}function V(e){var t,i,r,s,o=e.position,n=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap={},e.anchorMap={};0!==(s=e.input.charCodeAt(e.position))&&($(e,!0,-1),s=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==s));){for(n=!0,s=e.input.charCodeAt(++e.position),t=e.position;0!==s&&!g(s);)s=e.input.charCodeAt(++e.position);for(r=[],(i=e.input.slice(t,e.position)).length<1&&O(e,"directive name must not be less than one character in length");0!==s;){for(;y(s);)s=e.input.charCodeAt(++e.position);if(35===s){do{s=e.input.charCodeAt(++e.position)}while(0!==s&&!f(s));break}if(f(s))break;for(t=e.position;0!==s&&!g(s);)s=e.input.charCodeAt(++e.position);r.push(e.input.slice(t,e.position))}0!==s&&C(e),p.call(S,i)?S[i](e,i,r):E(e,'unknown document directive "'+i+'"')}$(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,$(e,!0,-1)):n&&O(e,"directives end mark is expected"),L(e,e.lineIndent-1,4,!1,!0),$(e,!0,-1),e.checkLineBreaks&&d.test(e.input.slice(o,e.position))&&E(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&_(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,$(e,!0,-1)):e.position<e.length-1&&O(e,"end of the stream or a document separator is expected")}function M(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var i=new j(e,t),r=e.indexOf("\0");for(-1!==r&&(i.position=r,O(i,"null byte is not allowed in input")),i.input+="\0";32===i.input.charCodeAt(i.position);)i.lineIndent+=1,i.position+=1;for(;i.position<i.length-1;)V(i);return i.documents}function z(e,t,i){null!==t&&"object"==typeof t&&void 0===i&&(i=t,t=null);var r=M(e,i);if("function"!=typeof t)return r;for(var s=0,o=r.length;s<o;s+=1)t(r[s])}function B(e,t){var i=M(e,t);if(0!==i.length){if(1===i.length)return i[0];throw new s("expected a single document in the stream, but found more")}}e.exports.loadAll=z,e.exports.load=B,e.exports.safeLoadAll=function(e,t,i){return"object"==typeof t&&null!==t&&void 0===i&&(i=t,t=null),z(e,t,r.extend({schema:n},i))},e.exports.safeLoad=function(e,t){return B(e,r.extend({schema:n},t))}},6970:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(1826),s=i(4694),o=i(9364),n=i(9870),a=i(4551),p=[r.default,s.default,(0,o.default)(),n.default,a.metadataVocabulary,a.contentVocabulary];t.default=p},6971:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return()=>({keyword:e,type:"object",schemaType:"array",macro(t){if(0===t.length)return!0;if(1===t.length)return{required:t};const i="anyRequired"===e?"anyOf":"oneOf";return{[i]:t.map((e=>({required:[e]})))}},metaSchema:{type:"array",items:{type:"string"}}})}},6977:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2270),s=/\.(txt|htm|html|md|xml|js|min|map|css|scss|less|svg)$/i;t.default={order:300,allowEmpty:!0,encoding:"utf8",canParse:e=>("string"==typeof e.data||Buffer.isBuffer(e.data))&&s.test(e.url),parse(e){if("string"==typeof e.data)return e.data;if(Buffer.isBuffer(e.data))return e.data.toString(this.encoding);throw new r.ParserError("data is not text",e.url)}}},6982:e=>{"use strict";e.exports=require("crypto")},7016:e=>{"use strict";e.exports=require("url")},7034:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(106)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},7045:e=>{"use strict";e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://json-schema.org/draft-07/schema#","title":"Core schema meta-schema","definitions":{"schemaArray":{"type":"array","minItems":1,"items":{"$ref":"#"}},"nonNegativeInteger":{"type":"integer","minimum":0},"nonNegativeIntegerDefault0":{"allOf":[{"$ref":"#/definitions/nonNegativeInteger"},{"default":0}]},"simpleTypes":{"enum":["array","boolean","integer","null","number","object","string"]},"stringArray":{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":[]}},"type":["object","boolean"],"properties":{"$id":{"type":"string","format":"uri-reference"},"$schema":{"type":"string","format":"uri"},"$ref":{"type":"string","format":"uri-reference"},"$comment":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"default":true,"readOnly":{"type":"boolean","default":false},"examples":{"type":"array","items":true},"multipleOf":{"type":"number","exclusiveMinimum":0},"maximum":{"type":"number"},"exclusiveMaximum":{"type":"number"},"minimum":{"type":"number"},"exclusiveMinimum":{"type":"number"},"maxLength":{"$ref":"#/definitions/nonNegativeInteger"},"minLength":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"pattern":{"type":"string","format":"regex"},"additionalItems":{"$ref":"#"},"items":{"anyOf":[{"$ref":"#"},{"$ref":"#/definitions/schemaArray"}],"default":true},"maxItems":{"$ref":"#/definitions/nonNegativeInteger"},"minItems":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"uniqueItems":{"type":"boolean","default":false},"contains":{"$ref":"#"},"maxProperties":{"$ref":"#/definitions/nonNegativeInteger"},"minProperties":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"required":{"$ref":"#/definitions/stringArray"},"additionalProperties":{"$ref":"#"},"definitions":{"type":"object","additionalProperties":{"$ref":"#"},"default":{}},"properties":{"type":"object","additionalProperties":{"$ref":"#"},"default":{}},"patternProperties":{"type":"object","additionalProperties":{"$ref":"#"},"propertyNames":{"format":"regex"},"default":{}},"dependencies":{"type":"object","additionalProperties":{"anyOf":[{"$ref":"#"},{"$ref":"#/definitions/stringArray"}]}},"propertyNames":{"$ref":"#"},"const":true,"enum":{"type":"array","items":true,"minItems":1,"uniqueItems":true},"type":{"anyOf":[{"$ref":"#/definitions/simpleTypes"},{"type":"array","items":{"$ref":"#/definitions/simpleTypes"},"minItems":1,"uniqueItems":true}]},"format":{"type":"string"},"contentMediaType":{"type":"string"},"contentEncoding":{"type":"string"},"if":{"$ref":"#"},"then":{"$ref":"#"},"else":{"$ref":"#"},"allOf":{"$ref":"#/definitions/schemaArray"},"anyOf":{"$ref":"#/definitions/schemaArray"},"oneOf":{"$ref":"#/definitions/schemaArray"},"not":{"$ref":"#"}},"default":true}')},7085:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i={Object,Array,Function,Number,String,Date,RegExp};"undefined"!=typeof Buffer&&(i.Buffer=Buffer),"undefined"!=typeof Promise&&(i.Promise=Promise);const r=Object.assign((function(){return{keyword:"instanceof",schemaType:["string","array"],compile(e){if("string"==typeof e){const t=s(e);return e=>e instanceof t}if(Array.isArray(e)){const t=e.map(s);return e=>{for(const i of t)if(e instanceof i)return!0;return!1}}throw new Error("ajv implementation error")},metaSchema:{anyOf:[{type:"string"},{type:"array",items:{type:"string"}}]}}}),{CONSTRUCTORS:i});function s(e){const t=i[e];if(t)return t;throw new Error(`invalid "instanceof" keyword value ${e}`)}t.default=r,e.exports=r},7115:(e,t,i)=>{"use strict";var r=i(6743),s=i(1002),o=i(76),n=i(7119);e.exports=n||r.call(o,s)},7119:e=>{"use strict";e.exports="undefined"!=typeof Reflect&&Reflect&&Reflect.apply},7154:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(3522)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},7176:(e,t,i)=>{"use strict";var r,s=i(3126),o=i(5795);try{r=[].__proto__===Array.prototype}catch(e){if(!e||"object"!=typeof e||!("code"in e)||"ERR_PROTO_ACCESS"!==e.code)throw e}var n=!!r&&o&&o(Object.prototype,"__proto__"),a=Object,p=a.getPrototypeOf;e.exports=n&&"function"==typeof n.get?s([n.get]):"function"==typeof p&&function(e){return p(null==e?e:a(e))}},7180:(e,t,i)=>{"use strict";var r=i(9714),s=i(6170);const o=(e,t)=>({indentAtStart:t?e.indent.length:e.indentAtStart,lineWidth:e.options.lineWidth,minContentWidth:e.options.minContentWidth}),n=e=>/^(%|---|\.\.\.)/m.test(e);function a(e,t){const i=JSON.stringify(e);if(t.options.doubleQuotedAsJSON)return i;const{implicitKey:r}=t,a=t.options.doubleQuotedMinMultiLineLength,p=t.indent||(n(e)?"  ":"");let c="",d=0;for(let e=0,t=i[e];t;t=i[++e])if(" "===t&&"\\"===i[e+1]&&"n"===i[e+2]&&(c+=i.slice(d,e)+"\\ ",e+=1,d=e,t="\\"),"\\"===t)switch(i[e+1]){case"u":{c+=i.slice(d,e);const t=i.substr(e+2,4);switch(t){case"0000":c+="\\0";break;case"0007":c+="\\a";break;case"000b":c+="\\v";break;case"001b":c+="\\e";break;case"0085":c+="\\N";break;case"00a0":c+="\\_";break;case"2028":c+="\\L";break;case"2029":c+="\\P";break;default:"00"===t.substr(0,2)?c+="\\x"+t.substr(2):c+=i.substr(e,6)}e+=5,d=e+1}break;case"n":if(r||'"'===i[e+2]||i.length<a)e+=1;else{for(c+=i.slice(d,e)+"\n\n";"\\"===i[e+2]&&"n"===i[e+3]&&'"'!==i[e+4];)c+="\n",e+=2;c+=p," "===i[e+2]&&(c+="\\"),e+=1,d=e+1}break;default:e+=1}return c=d?c+i.slice(d):i,r?c:s.foldFlowLines(c,p,s.FOLD_QUOTED,o(t,!1))}function p(e,t){if(!1===t.options.singleQuote||t.implicitKey&&e.includes("\n")||/[ \t]\n|\n[ \t]/.test(e))return a(e,t);const i=t.indent||(n(e)?"  ":""),r="'"+e.replace(/'/g,"''").replace(/\n+/g,`$&\n${i}`)+"'";return t.implicitKey?r:s.foldFlowLines(r,i,s.FOLD_FLOW,o(t,!1))}function c(e,t){const{singleQuote:i}=t.options;let r;if(!1===i)r=a;else{const t=e.includes('"'),s=e.includes("'");r=t&&!s?p:s&&!t?a:i?p:a}return r(e,t)}let d;try{d=new RegExp("(^|(?<!\n))\n+(?!\n|$)","g")}catch{d=/\n+(?!\n|$)/g}function u({comment:e,type:t,value:i},a,p,u){const{blockQuote:l,commentString:h,lineWidth:m}=a.options;if(!l||/\n[\t ]+$/.test(i)||/^\s*$/.test(i))return c(i,a);const f=a.indent||(a.forceBlockIndent||n(i)?"  ":""),y="literal"===l||"folded"!==l&&t!==r.Scalar.BLOCK_FOLDED&&(t===r.Scalar.BLOCK_LITERAL||!function(e,t,i){if(!t||t<0)return!1;const r=t-i,s=e.length;if(s<=r)return!1;for(let t=0,i=0;t<s;++t)if("\n"===e[t]){if(t-i>r)return!0;if(i=t+1,s-i<=r)return!1}return!0}(i,m,f.length));if(!i)return y?"|\n":">\n";let g,x;for(x=i.length;x>0;--x){const e=i[x-1];if("\n"!==e&&"\t"!==e&&" "!==e)break}let b=i.substring(x);const v=b.indexOf("\n");-1===v?g="-":i===b||v!==b.length-1?(g="+",u&&u()):g="",b&&(i=i.slice(0,-b.length),"\n"===b[b.length-1]&&(b=b.slice(0,-1)),b=b.replace(d,`$&${f}`));let w,I=!1,k=-1;for(w=0;w<i.length;++w){const e=i[w];if(" "===e)I=!0;else{if("\n"!==e)break;k=w}}let P=i.substring(0,k<w?k+1:w);P&&(i=i.substring(P.length),P=P.replace(/\n+/g,`$&${f}`));let j=(I?f?"2":"1":"")+g;if(e&&(j+=" "+h(e.replace(/ ?[\r\n]+/g," ")),p&&p()),!y){const e=i.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${f}`);let n=!1;const p=o(a,!0);"folded"!==l&&t!==r.Scalar.BLOCK_FOLDED&&(p.onOverflow=()=>{n=!0});const c=s.foldFlowLines(`${P}${e}${b}`,f,s.FOLD_BLOCK,p);if(!n)return`>${j}\n${f}${c}`}return`|${j}\n${f}${P}${i=i.replace(/\n+/g,`$&${f}`)}${b}`}t.stringifyString=function(e,t,i,d){const{implicitKey:l,inFlow:h}=t,m="string"==typeof e.value?e:Object.assign({},e,{value:String(e.value)});let{type:f}=e;f!==r.Scalar.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(m.value)&&(f=r.Scalar.QUOTE_DOUBLE);const y=e=>{switch(e){case r.Scalar.BLOCK_FOLDED:case r.Scalar.BLOCK_LITERAL:return l||h?c(m.value,t):u(m,t,i,d);case r.Scalar.QUOTE_DOUBLE:return a(m.value,t);case r.Scalar.QUOTE_SINGLE:return p(m.value,t);case r.Scalar.PLAIN:return function(e,t,i,a){const{type:p,value:d}=e,{actualString:l,implicitKey:h,indent:m,indentStep:f,inFlow:y}=t;if(h&&d.includes("\n")||y&&/[[\]{},]/.test(d))return c(d,t);if(/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(d))return h||y||!d.includes("\n")?c(d,t):u(e,t,i,a);if(!h&&!y&&p!==r.Scalar.PLAIN&&d.includes("\n"))return u(e,t,i,a);if(n(d)){if(""===m)return t.forceBlockIndent=!0,u(e,t,i,a);if(h&&m===f)return c(d,t)}const g=d.replace(/\n+/g,`$&\n${m}`);if(l){const e=e=>e.default&&"tag:yaml.org,2002:str"!==e.tag&&e.test?.test(g),{compat:i,tags:r}=t.doc.schema;if(r.some(e)||i?.some(e))return c(d,t)}return h?g:s.foldFlowLines(g,m,s.FOLD_FLOW,o(t,!1))}(m,t,i,d);default:return null}};let g=y(f);if(null===g){const{defaultKeyType:e,defaultStringType:i}=t.options,r=l&&e||i;if(g=y(r),null===g)throw new Error(`Unsupported default string type ${r}`)}return g}},7184:(e,t,i)=>{"use strict";i.r(t),i.d(t,{Ono:()=>b,default:()=>P,ono:()=>w});var r=i(9023);const s=["function","symbol","undefined"],o=["constructor","prototype","__proto__"],n=Object.getPrototypeOf({});function a(){let e={},t=this;for(let i of p(t))if("string"==typeof i){let r=t[i],o=typeof r;s.includes(o)||(e[i]=r)}return e}function p(e,t=[]){let i=[];for(;e&&e!==n;)i=i.concat(Object.getOwnPropertyNames(e),Object.getOwnPropertySymbols(e)),e=Object.getPrototypeOf(e);let r=new Set(i);for(let e of t.concat(o))r.delete(e);return r}const c=r.inspect.custom||Symbol.for("nodejs.util.inspect.custom"),d=r.format;function u(e){e[c]=l}function l(){let e={},t=this;for(let i of p(t)){let r=t[i];e[i]=r}return delete e[c],e}const h=/\r?\n/,m=/\bono[ @]/;function f(e,t){let i=y(e.stack),r=t?t.stack:void 0;return i&&r?i+"\n\n"+r:i||r}function y(e){if(e){let t,i=e.split(h);for(let e=0;e<i.length;e++){let r=i[e];if(m.test(r))void 0===t&&(t=e);else if(void 0!==t){i.splice(t,e-t);break}}if(i.length>0)return i.join("\n")}return e}const g=["name","message","stack"];function x(e,t,i){let r=e;return function(e,t){let i=Object.getOwnPropertyDescriptor(e,"stack");!function(e){return Boolean(e&&e.configurable&&"function"==typeof e.get)}(i)?function(e){return Boolean(!e||e.writable||"function"==typeof e.set)}(i)&&(e.stack=f(e,t)):function(e,t,i){i?Object.defineProperty(t,"stack",{get:()=>f({stack:e.get.apply(t)},i),enumerable:!1,configurable:!0}):function(e,t){Object.defineProperty(e,"stack",{get:()=>y(t.get.apply(e)),enumerable:!1,configurable:!0})}(t,e)}(i,e,t)}(r,t),t&&"object"==typeof t&&function(e,t){let i=p(t,g),r=e,s=t;for(let e of i)if(void 0===r[e])try{r[e]=s[e]}catch(e){}}(r,t),r.toJSON=a,u&&u(r),i&&"object"==typeof i&&Object.assign(r,i),r}const b=v;function v(e,t){function i(...i){let{originalError:r,props:s,message:o}=function(e,t){let i,r,s,o="";return"string"==typeof e[0]?s=e:"string"==typeof e[1]?(e[0]instanceof Error?i=e[0]:r=e[0],s=e.slice(1)):(i=e[0],r=e[1],s=e.slice(2)),s.length>0&&(o=t.format?t.format.apply(void 0,s):s.join(" ")),t.concatMessages&&i&&i.message&&(o+=(o?" \n":"")+i.message),{originalError:i,props:r,message:o}}(i,t);return x(new e(o),r,s)}return t=function(e){return{concatMessages:void 0===(e=e||{}).concatMessages||Boolean(e.concatMessages),format:void 0===e.format?d:"function"==typeof e.format&&e.format}}(t),i[Symbol.species]=e,i}v.toJSON=function(e){return a.call(e)},v.extend=function(e,t,i){return i||t instanceof Error?x(e,t,i):t?x(e,void 0,t):x(e)};const w=k;k.error=new b(Error),k.eval=new b(EvalError),k.range=new b(RangeError),k.reference=new b(ReferenceError),k.syntax=new b(SyntaxError),k.type=new b(TypeError),k.uri=new b(URIError);const I=k;function k(...e){let t=e[0];if("object"==typeof t&&"string"==typeof t.name)for(let i of Object.values(I))if("function"==typeof i&&"ono"===i.name){let r=i[Symbol.species];if(r&&r!==Error&&(t instanceof r||t.name===r.name))return i.apply(void 0,e)}return k.error.apply(void 0,e)}e=i.hmd(e);const P=w;"object"==typeof e.exports&&(e.exports=Object.assign(e.exports.default,e.exports))},7191:(e,t,i)=>{"use strict";var r=i(9714),s=i(3144);const o={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:e=>"nan"===e.slice(-3).toLowerCase()?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:s.stringifyNumber},n={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e.replace(/_/g,"")),stringify(e){const t=Number(e.value);return isFinite(t)?t.toExponential():s.stringifyNumber(e)}},a={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(e){const t=new r.Scalar(parseFloat(e.replace(/_/g,""))),i=e.indexOf(".");if(-1!==i){const r=e.substring(i+1).replace(/_/g,"");"0"===r[r.length-1]&&(t.minFractionDigits=r.length)}return t},stringify:s.stringifyNumber};t.float=a,t.floatExp=n,t.floatNaN=o},7210:(e,t,i)=>{"use strict";var r=i(1624),s=i(4781);function o(e,t){return function(){throw new Error("Function yaml."+e+" is removed in js-yaml 4. Use yaml."+t+" instead, which is now safe by default.")}}e.exports.Type=i(5388),e.exports.Schema=i(2119),e.exports.FAILSAFE_SCHEMA=i(7759),e.exports.JSON_SCHEMA=i(6184),e.exports.CORE_SCHEMA=i(1769),e.exports.DEFAULT_SCHEMA=i(5489),e.exports.load=r.load,e.exports.loadAll=r.loadAll,e.exports.dump=s.dump,e.exports.YAMLException=i(1231),e.exports.types={binary:i(9342),float:i(1461),map:i(2369),null:i(9198),pairs:i(6942),set:i(6663),timestamp:i(127),bool:i(6199),int:i(4466),merge:i(1851),omap:i(6946),seq:i(8636),str:i(7212)},e.exports.safeLoad=o("safeLoad","load"),e.exports.safeLoadAll=o("safeLoadAll","loadAll"),e.exports.safeDump=o("safeDump","dump")},7212:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},7230:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2883),s=i(6675),o=i(3701),n=i(749),a={keyword:"additionalProperties",type:["object"],schemaType:["boolean","object"],allowUndefined:!0,trackErrors:!0,error:{message:"must NOT have additional properties",params:({params:e})=>s._`{additionalProperty: ${e.additionalProperty}}`},code(e){const{gen:t,schema:i,parentSchema:a,data:p,errsCount:c,it:d}=e;if(!c)throw new Error("ajv implementation error");const{allErrors:u,opts:l}=d;if(d.props=!0,"all"!==l.removeAdditional&&(0,n.alwaysValidSchema)(d,i))return;const h=(0,r.allSchemaProperties)(a.properties),m=(0,r.allSchemaProperties)(a.patternProperties);function f(e){t.code(s._`delete ${p}[${e}]`)}function y(r){if("all"===l.removeAdditional||l.removeAdditional&&!1===i)f(r);else{if(!1===i)return e.setParams({additionalProperty:r}),e.error(),void(u||t.break());if("object"==typeof i&&!(0,n.alwaysValidSchema)(d,i)){const i=t.name("valid");"failing"===l.removeAdditional?(g(r,i,!1),t.if((0,s.not)(i),(()=>{e.reset(),f(r)}))):(g(r,i),u||t.if((0,s.not)(i),(()=>t.break())))}}}function g(t,i,r){const s={keyword:"additionalProperties",dataProp:t,dataPropType:n.Type.Str};!1===r&&Object.assign(s,{compositeRule:!0,createErrors:!1,allErrors:!1}),e.subschema(s,i)}t.forIn("key",p,(i=>{h.length||m.length?t.if(function(i){let o;if(h.length>8){const e=(0,n.schemaRefOrVal)(d,a.properties,"properties");o=(0,r.isOwnProperty)(t,e,i)}else o=h.length?(0,s.or)(...h.map((e=>s._`${i} === ${e}`))):s.nil;return m.length&&(o=(0,s.or)(o,...m.map((t=>s._`${(0,r.usePattern)(e,t)}.test(${i})`)))),(0,s.not)(o)}(i),(()=>y(i))):y(i)})),e.ok(s._`${c} === ${o.default.errors}`)}};t.default=a},7286:e=>{"use strict";e.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/3gpphal+json":{"source":"iana","compressible":true},"application/3gpphalforms+json":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/ace+cbor":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/alto-updatestreamcontrol+json":{"source":"iana","compressible":true},"application/alto-updatestreamparams+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/at+jwt":{"source":"iana"},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-dynamic-event-message":{"source":"iana"},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/captive+json":{"source":"iana","compressible":true},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/city+json":{"source":"iana","compressible":true},"application/clr":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true,"extensions":["cpl"]},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dash-patch+xml":{"source":"iana","compressible":true,"extensions":["mpp"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dots+cbor":{"source":"iana"},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["es","ecma"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/elm+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/elm+xml":{"source":"iana","compressible":true},"application/emergencycalldata.cap+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/express":{"source":"iana","extensions":["exp"]},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/fhir+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/jscalendar+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lpf+zip":{"source":"iana","compressible":false},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true,"extensions":["mpf"]},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/missing-blocks+cbor-seq":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true},"application/mrb-publish+xml":{"source":"iana","compressible":true},"application/msc-ivr+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msc-mixer+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana","charset":"US-ASCII"},"application/news-groupinfo":{"source":"iana","charset":"US-ASCII"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana","extensions":["cjs"]},"application/nss":{"source":"iana"},"application/oauth-authz-req+jwt":{"source":"iana"},"application/oblivious-dns-message":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{"source":"iana","compressible":true},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p21":{"source":"iana"},"application/p21+zip":{"source":"iana","compressible":false},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana","extensions":["asc"]},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pidf-diff+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.cyn":{"source":"iana","charset":"7-BIT"},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/pvd+json":{"source":"iana","compressible":true},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sarif+json":{"source":"iana","compressible":true},"application/sarif-external-properties+json":{"source":"iana","compressible":true},"application/sbe":{"source":"iana"},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-etch+cbor":{"source":"iana"},"application/senml-etch+json":{"source":"iana","compressible":true},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spdx+json":{"source":"iana","compressible":true},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/td+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/token-introspection+jwt":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana","extensions":["trig"]},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ubjson":{"compressible":false,"extensions":["ubj"]},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true,"extensions":["td"]},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.5gnas":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gtpc":{"source":"iana"},"application/vnd.3gpp.interworking-data":{"source":"iana"},"application/vnd.3gpp.lpp":{"source":"iana"},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ngap":{"source":"iana"},"application/vnd.3gpp.pfcp":{"source":"iana"},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.s1ap":{"source":"iana"},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.cmoca-cmresource":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-cmtable":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.age":{"source":"iana","extensions":["age"]},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.arrow.file":{"source":"iana"},"application/vnd.apache.arrow.stream":{"source":"iana"},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["key"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.cryptomator.encrypted":{"source":"iana"},"application/vnd.cryptomator.vault":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.cyclonedx+json":{"source":"iana","compressible":true},"application/vnd.cyclonedx+xml":{"source":"iana","compressible":true},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.d3m-dataset":{"source":"iana"},"application/vnd.d3m-problem":{"source":"iana"},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.dbf":{"source":"iana","extensions":["dbf"]},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbisl+xml":{"source":"iana","compressible":true},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.eclipse.ditto+json":{"source":"iana","compressible":true},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eu.kasparian.car+json":{"source":"iana","compressible":true},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.familysearch.gedcom+zip":{"source":"iana","compressible":false},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujifilm.fb.docuworks":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.container":{"source":"iana"},"application/vnd.fujifilm.fb.jfi+xml":{"source":"iana","compressible":true},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.slides":{"source":"iana"},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hl7cda+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hl7v2+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana","extensions":["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxar.archive.3tz+zip":{"source":"iana","compressible":false},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.nacamar.ybrid+json":{"source":"iana","compressible":true},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nebumind.line":{"source":"iana"},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oci.image.manifest.v1+json":{"source":"iana","compressible":true},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+cbor":{"source":"iana"},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.opentimestamps.ots":{"source":"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana","extensions":["rar"]},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.resilient.logic":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sar":{"source":"iana"},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.seis+json":{"source":"iana","compressible":true},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.shp":{"source":"iana"},"application/vnd.shx":{"source":"iana"},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.snesdev-page-table":{"source":"iana"},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.sycle+xml":{"source":"iana","compressible":true},"application/vnd.syft+json":{"source":"iana","compressible":true},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","charset":"UTF-8","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veritone.aion+json":{"source":"iana","compressible":true},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","charset":"UTF-8","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.dpp":{"source":"iana"},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"source":"iana","compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true,"extensions":["wif"]},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-iwork-keynote-sffkey":{"extensions":["key"]},"application/x-iwork-numbers-sffnumbers":{"extensions":["numbers"]},"application/x-iwork-pages-sffpages":{"extensions":["pages"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-pki-message":{"source":"iana"},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"iana","extensions":["der","crt","pem"]},"application/x-x509-ca-ra-cert":{"source":"iana"},"application/x-x509-next-ca-cert":{"source":"iana"},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xsl","xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana","extensions":["amr"]},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/mhas":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx","opus"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/scip":{"source":"iana"},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sofa":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tetra_acelp_bb":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/tsvcis":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana","extensions":["avci"]},"image/avcs":{"source":"iana","extensions":["avcs"]},"image/avif":{"source":"iana","compressible":false,"extensions":["avif"]},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/ktx2":{"source":"iana","extensions":["ktx2"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","compressible":true,"extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"compressible":true,"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.pco.b16":{"source":"iana","extensions":["b16"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/e57":{"source":"iana"},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/mtl":{"source":"iana","extensions":["mtl"]},"model/obj":{"source":"iana","extensions":["obj"]},"model/step":{"source":"iana"},"model/step+xml":{"source":"iana","compressible":true,"extensions":["stpx"]},"model/step+zip":{"source":"iana","compressible":false,"extensions":["stpz"]},"model/step-xml+zip":{"source":"iana","compressible":false,"extensions":["stpxz"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.pytha.pyox":{"source":"iana"},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.sap.vds":{"source":"iana","extensions":["vds"]},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/cql":{"source":"iana"},"text/cql-expression":{"source":"iana"},"text/cql-identifier":{"source":"iana"},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/fhirpath":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/gff3":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana","charset":"UTF-8"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana","charset":"UTF-8"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shaclc":{"source":"iana"},"text/shex":{"source":"iana","extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/spdx":{"source":"iana","extensions":["spdx"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana","charset":"UTF-8"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana","charset":"UTF-8"},"text/vnd.familysearch.gedcom":{"source":"iana","extensions":["ged"]},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hans":{"source":"iana"},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","charset":"UTF-8","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana","charset":"UTF-8"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"compressible":true,"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/av1":{"source":"iana"},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/ffv1":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana","extensions":["m4s"]},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/jxsv":{"source":"iana"},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/scip":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/vp9":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')},7309:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o=i(5472),n={keyword:"const",$data:!0,error:{message:"must be equal to constant",params:({schemaCode:e})=>r._`{allowedValue: ${e}}`},code(e){const{gen:t,data:i,$data:n,schemaCode:a,schema:p}=e;n||p&&"object"==typeof p?e.fail$data(r._`!${(0,s.useFunc)(t,o.default)}(${i}, ${a})`):e.fail(r._`${p} !== ${i}`)}};t.default=n},7335:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(8582)),o=r(i(7677)),n=r(i(7034)),a=r(i(1250)),p=r(i(7154)),c=r(i(5463)),d=r(i(7834)),u=r(i(4605)),l=r(i(1164)),h=r(i(9138)),m=r(i(5292)),f=r(i(5137)),y=r(i(2852)),g=r(i(24)),x=r(i(2972)),b=r(i(5387)),v={typeof:s.default,instanceof:o.default,range:n.default,exclusiveRange:a.default,regexp:p.default,transform:c.default,uniqueItemProperties:d.default,allRequired:u.default,anyRequired:l.default,oneRequired:h.default,patternRequired:m.default,prohibited:f.default,deepProperties:y.default,deepRequired:g.default,dynamicDefaults:x.default,select:b.default};t.default=v,e.exports=v},7355:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6982);t.default=function(e){return Array.isArray(e)?e=Buffer.from(e):"string"==typeof e&&(e=Buffer.from(e,"utf8")),(0,r.createHash)("md5").update(e).digest()}},7391:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s={keyword:"format",type:["number","string"],schemaType:"string",$data:!0,error:{message:({schemaCode:e})=>r.str`must match format "${e}"`,params:({schemaCode:e})=>r._`{format: ${e}}`},code(e,t){const{gen:i,data:s,$data:o,schema:n,schemaCode:a,it:p}=e,{opts:c,errSchemaPath:d,schemaEnv:u,self:l}=p;c.validateFormats&&(o?function(){const o=i.scopeValue("formats",{ref:l.formats,code:c.code.formats}),n=i.const("fDef",r._`${o}[${a}]`),p=i.let("fType"),d=i.let("format");i.if(r._`typeof ${n} == "object" && !(${n} instanceof RegExp)`,(()=>i.assign(p,r._`${n}.type || "string"`).assign(d,r._`${n}.validate`)),(()=>i.assign(p,r._`"string"`).assign(d,n))),e.fail$data((0,r.or)(!1===c.strictSchema?r.nil:r._`${a} && !${d}`,function(){const e=u.$async?r._`(${n}.async ? await ${d}(${s}) : ${d}(${s}))`:r._`${d}(${s})`,i=r._`(typeof ${d} == "function" ? ${e} : ${d}.test(${s}))`;return r._`${d} && ${d} !== true && ${p} === ${t} && !${i}`}()))}():function(){const o=l.formats[n];if(!o)return void function(){if(!1!==c.strictSchema)throw new Error(e());function e(){return`unknown format "${n}" ignored in schema at path "${d}"`}l.logger.warn(e())}();if(!0===o)return;const[a,p,h]=function(e){const t=e instanceof RegExp?(0,r.regexpCode)(e):c.code.formats?r._`${c.code.formats}${(0,r.getProperty)(n)}`:void 0,s=i.scopeValue("formats",{key:n,ref:e,code:t});return"object"!=typeof e||e instanceof RegExp?["string",e,s]:[e.type||"string",e.validate,r._`${s}.validate`]}(o);a===t&&e.pass(function(){if("object"==typeof o&&!(o instanceof RegExp)&&o.async){if(!u.$async)throw new Error("async format in sync schema");return r._`await ${h}(${s})`}return"function"==typeof p?r._`${h}(${s})`:r._`${h}.test(${s})`}())}())}};t.default=s},7434:(e,t,i)=>{"use strict";var r=i(7902),s=i(1755),o=i(1386),n=i(9378),a=i(8644),p=i(8334);const c="All mapping items must start at the same column";t.resolveBlockMap=function({composeNode:e,composeEmptyNode:t},i,d,u,l){const h=new(l?.nodeClass??s.YAMLMap)(i.schema);i.atRoot&&(i.atRoot=!1);let m=d.offset,f=null;for(const s of d.items){const{start:l,key:y,sep:g,value:x}=s,b=o.resolveProps(l,{indicator:"explicit-key-ind",next:y??g?.[0],offset:m,onError:u,parentIndent:d.indent,startOnNewline:!0}),v=!b.found;if(v){if(y&&("block-seq"===y.type?u(m,"BLOCK_AS_IMPLICIT_KEY","A block sequence may not be used as an implicit map key"):"indent"in y&&y.indent!==d.indent&&u(m,"BAD_INDENT",c)),!b.anchor&&!b.tag&&!g){f=b.end,b.comment&&(h.comment?h.comment+="\n"+b.comment:h.comment=b.comment);continue}(b.newlineAfterProp||n.containsNewline(y))&&u(y??l[l.length-1],"MULTILINE_IMPLICIT_KEY","Implicit keys need to be on a single line")}else b.found?.indent!==d.indent&&u(m,"BAD_INDENT",c);i.atKey=!0;const w=b.end,I=y?e(i,y,b,u):t(i,w,l,null,b,u);i.schema.compat&&a.flowIndentCheck(d.indent,y,u),i.atKey=!1,p.mapIncludes(i,h.items,I)&&u(w,"DUPLICATE_KEY","Map keys must be unique");const k=o.resolveProps(g??[],{indicator:"map-value-ind",next:x,offset:I.range[2],onError:u,parentIndent:d.indent,startOnNewline:!y||"block-scalar"===y.type});if(m=k.end,k.found){v&&("block-map"!==x?.type||k.hasNewline||u(m,"BLOCK_AS_IMPLICIT_KEY","Nested mappings are not allowed in compact mappings"),i.options.strict&&b.start<k.found.offset-1024&&u(I.range,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit block mapping key"));const o=x?e(i,x,k,u):t(i,m,g,null,k,u);i.schema.compat&&a.flowIndentCheck(d.indent,x,u),m=o.range[2];const n=new r.Pair(I,o);i.options.keepSourceTokens&&(n.srcToken=s),h.items.push(n)}else{v&&u(I.range,"MISSING_CHAR","Implicit map keys need to be followed by map values"),k.comment&&(I.comment?I.comment+="\n"+k.comment:I.comment=k.comment);const e=new r.Pair(I);i.options.keepSourceTokens&&(e.srcToken=s),h.items.push(e)}}return f&&f<m&&u(f,"IMPOSSIBLE","Map comment with trailing content"),h.range=[d.offset,m,f??m],h}},7444:(e,t,i)=>{"use strict";var r=i(932);t.debug=function(e,...t){"debug"===e&&console.log(...t)},t.warn=function(e,t){"debug"!==e&&"warn"!==e||("function"==typeof r.emitWarning?r.emitWarning(t):console.warn(t))}},7507:(e,t,i)=>{var r;e.exports=function(){if(!r){try{r=i(5753)("follow-redirects")}catch(e){}"function"!=typeof r&&(r=function(){})}r.apply(null,arguments)}},7514:(e,t,i)=>{e=i.nmd(e);const{schemas:r}=i(689),s=i(5188),o=i(1420),n=i(9806),a=i(5655),p=i(5827),c=new s({strictSchema:!1,useDefaults:!0,allErrors:!0,allowUnionTypes:!0,coerceTypes:!0});i(4332).DEFAULTS.uuid=()=>p.v4,o(c),n(c),a(c),t.validate=l,t.transformToSchemaKey=h;for(const[e,t]of Object.entries(r))c.addSchema(t,e);const d={config_v3:["config_v2"],context_v3:["context_v2"],openApi_v3:["openApi_v2"],spec_v3:["spec_v2"],step_v3:["checkLink_v2","find_v2","goTo_v2","httpRequest_v2","runShell_v2","runCode_v2","saveScreenshot_v2","setVariables_v2","startRecording_v2","stopRecording_v2","typeKeys_v2","wait_v2"],test_v3:["test_v2"]};function u(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function l({schemaKey:e,object:t,addDefaults:i=!0}){if(!e)throw new Error("Schema key is required.");if(!t)throw new Error("Object is required.");const r={};let s,o=c.getSchema(e);if(!o)return r.valid=!1,r.errors=`Schema not found: ${e}`,r.object=t,r;if(s=JSON.parse(JSON.stringify(t)),r.valid=o(s),r.errors="",o.errors){const i=d[e];if(!i)return r.errors=o.errors.map((e=>`${e.instancePath} ${e.message} (${JSON.stringify(e.params)})`)).join(", "),r.object=t,r.valid=!1,r;const n=i.find((e=>{if(s=JSON.parse(JSON.stringify(t)),c.getSchema(e)(s))return e}));if(!n)return r.errors="Invalid object",r.object=t,r.valid=!1,r;{const i=h({currentSchema:n,targetSchema:e,object:s});if(r.valid=o(i),r.valid)s=i,t=i;else if(o.errors){const e=o.errors.map((e=>`${e.instancePath} ${e.message} (${JSON.stringify(e.params)})`));return r.errors=e.join(", "),r}}}return r.object=i?s:t,r}function h({currentSchema:e="",targetSchema:t="",object:i={}}){if(e===t)return i;if(!d[t].includes(e))throw new Error(`Can't transform from ${e} to ${t}.`);if("step_v3"===t){const t={stepId:i.id,description:i.description};"goTo_v2"===e?t.goTo={url:i.url,origin:i.origin}:"checkLink_v2"===e?t.checkLink={url:i.url,origin:i.origin,statusCodes:i.statusCodes}:"find_v2"===e?(t.find={selector:i.selector,elementText:i.matchText,timeout:i.timeout,moveTo:i.moveTo,click:i.click,type:i.typeKeys},"object"==typeof i.typeKeys&&i.typeKeys.keys&&(t.find.type.inputDelay=i.typeKeys.delay,delete t.find.type.delay),t.variables={},i.setVariables?.forEach((e=>{t.variables[e.name]=`extract($$element.text, "${e.regex}")`}))):"httpRequest_v2"===e?(t.httpRequest={method:i.method,url:i.url,openApi:i.openApi,request:{body:i.requestData,headers:i.requestHeaders,parameters:i.requestParams},response:{body:i.responseData,headers:i.responseHeaders},statusCodes:i.statusCodes,allowAdditionalFields:i.allowAdditionalFields,timeout:i.timeout,path:i.savePath,directory:i.saveDirectory,maxVariation:i.maxVariation/100,overwrite:"byVariation"===i.overwrite?"aboveVariation":i.overwrite},i.openApi&&(t.httpRequest.openApi=h({currentSchema:"openApi_v2",targetSchema:"openApi_v3",object:i.openApi})),t.variables={},i.envsFromResponseData?.forEach((e=>{t.variables[e.name]=`jq($$response.body, "${e.jqFilter}")`}))):"runShell_v2"===e?(t.runShell={command:i.command,args:i.args,workingDirectory:i.workingDirectory,exitCodes:i.exitCodes,stdio:i.output,path:i.savePath,directory:i.saveDirectory,maxVariation:i.maxVariation/100,overwrite:"byVariation"===i.overwrite?"aboveVariation":i.overwrite,timeout:i.timeout},t.variables={},i.setVariables?.forEach((e=>{t.variables[e.name]=`extract($$stdio.stdout, "${e.regex}")`}))):"runCode_v2"===e?(t.runCode={language:i.language,code:i.code,args:i.args,workingDirectory:i.workingDirectory,exitCodes:i.exitCodes,stdio:i.output,path:i.savePath,directory:i.saveDirectory,maxVariation:i.maxVariation/100,overwrite:"byVariation"===i.overwrite?"aboveVariation":i.overwrite,timeout:i.timeout},t.variables={},i?.setVariables?.forEach((e=>{t.variables[e.name]=`extract($$stdio.stdout, "${e.regex}")`}))):"setVariables_v2"===e?t.loadVariables=i.path:"typeKeys_v2"===e?t.type={keys:i.keys,inputDelay:i.delay}:"saveScreenshot_v2"===e?t.screenshot={path:i.path,directory:i.directory,maxVariation:i.maxVariation/100,overwrite:"byVariation"===i.overwrite?"aboveVariation":i.overwrite,crop:i.crop}:"startRecording_v2"===e?t.record={path:i.path,directory:i.directory,overwrite:i.overwrite}:"stopRecording_v2"===e?t.stopRecord=!0:"wait_v2"===e&&(t.wait=i);const r=l({schemaKey:"step_v3",object:t});if(!r.valid)throw new Error(`Invalid object: ${r.errors}`);return r.object}if("config_v3"===t){const e={loadVariables:i.envVariables,input:i?.runTests?.input||i.input,output:i?.runTests?.output||i.output,recursive:i?.runTests?.recursive||i.recursive,relativePathBase:i.relativePathBase,detectSteps:i?.runTests?.detectSteps,beforeAny:i?.runTests?.setup,afterAll:i?.runTests?.cleanup,logLevel:i.logLevel,telemetry:i.telemetry};i?.runTests?.contexts&&(e.runOn=i.runTests.contexts.map((e=>h({currentSchema:"context_v2",targetSchema:"context_v3",object:e})))),i?.integrations?.openApi&&(e.integrations={},e.integrations.openApi=i.integrations.openApi.map((e=>h({currentSchema:"openApi_v2",targetSchema:"openApi_v3",object:e})))),i?.fileTypes&&(e.fileTypes=i.fileTypes.map((e=>{const t={name:e.name,extensions:e.extensions.map((e=>e.replace(/^\./,""))),inlineStatements:{testStart:`${u(e.testStartStatementOpen)}(.*?)${u(e.testStartStatementClose)}`,testEnd:u(e.testEndStatement),ignoreStart:u(e.testIgnoreStatement),step:`${u(e.stepStatementOpen)}(.*?)${u(e.stepStatementClose)}`}};return e.markup&&(t.markup=e.markup.map((e=>{const t={name:e.name,regex:e.regex};return e.actions&&(t.actions=e.actions.map((e=>"string"==typeof e?e:"object"==typeof e?(e.params&&(e={action:e.name,...e.params}),h({currentSchema:`${e.action}_v2`,targetSchema:"step_v3",object:e})):void 0))),t}))),t})));const t=l({schemaKey:"config_v3",object:e});if(!t.valid)throw new Error(`Invalid object: ${t.errors}`);return t.object}if("context_v3"===t){const e={};if(e.platforms=i.platforms,i.app?.name){const t="edge"===i.app.name?"chrome":i.app?.name;e.browsers=[],e.browsers.push({name:t,headless:i.app?.options?.headless,window:{width:i.app?.options?.width,height:i.app?.options?.height},viewport:{width:i.app?.options?.viewport_width,height:i.app?.options?.viewport_height}})}const t=l({schemaKey:"context_v3",object:e});if(!t.valid)throw new Error(`Invalid object: ${t.errors}`);return t.object}if("openApi_v3"===t){let e;const{name:t,requestHeaders:r,...s}=i;s.name=i.name,s.headers=i.requestHeaders,e={...s};const o=l({schemaKey:"openApi_v3",object:e});if(!o.valid)throw new Error(`Invalid object: ${o.errors}`);return e}if("spec_v3"===t){const e={specId:i.id,description:i.description,contentPath:i.file};i.contexts&&(e.runOn=i.contexts.map((e=>h({currentSchema:"context_v2",targetSchema:"context_v3",object:e})))),i.openApi&&(e.openApi=i.openApi.map((e=>h({currentSchema:"openApi_v2",targetSchema:"openApi_v3",object:e})))),e.tests=i.tests.map((e=>h({currentSchema:"test_v2",targetSchema:"test_v3",object:e})));const t=l({schemaKey:"spec_v3",object:e});if(!t.valid)throw new Error(`Invalid object: ${t.errors}`);return t.object}if("test_v3"===t){const e={testId:i.id,description:i.description,contentPath:i.file,detectSteps:i.detectSteps,before:i.setup,after:i.cleanup};i.contexts&&(e.runOn=i.contexts.map((e=>h({currentSchema:"context_v2",targetSchema:"context_v3",object:e})))),i.openApi&&(e.openApi=i.openApi.map((e=>h({currentSchema:"openApi_v2",targetSchema:"openApi_v3",object:e})))),e.steps=i.steps.map((e=>h({currentSchema:`${e.action}_v2`,targetSchema:"step_v3",object:e})));const t=l({schemaKey:"test_v3",object:e});if(!t.valid)throw new Error(`Invalid object: ${t.errors}`);return t.object}return null}if(i.c[i.s]===e){const e=l({schemaKey:"screenshot_v3",object:{path:"/User/manny/projects/doc-detective/static/images/image.png"}});console.log(JSON.stringify(e,null,2))}},7571:(e,t,i)=>{"use strict";var r=i(9714),s=i(6845);function o(e){let t,i;try{t=new RegExp("(.*?)(?<![ \t])[ \t]*\r?\n","sy"),i=new RegExp("[ \t]*(.*?)(?:(?<![ \t])[ \t]*)?\r?\n","sy")}catch{t=/(.*?)[ \t]*\r?\n/sy,i=/[ \t]*(.*?)[ \t]*\r?\n/sy}let r=t.exec(e);if(!r)return e;let s=r[1],o=" ",n=t.lastIndex;for(i.lastIndex=n;r=i.exec(e);)""===r[1]?"\n"===o?s+=o:o="\n":(s+=o+r[1],o=" "),n=i.lastIndex;const a=/[ \t]*(.*)/sy;return a.lastIndex=n,r=a.exec(e),s+o+(r?.[1]??"")}function n(e,t){let i="",r=e[t+1];for(;!(" "!==r&&"\t"!==r&&"\n"!==r&&"\r"!==r||"\r"===r&&"\n"!==e[t+2]);)"\n"===r&&(i+="\n"),r=e[(t+=1)+1];return i||(i=" "),{fold:i,offset:t}}const a={0:"\0",a:"",b:"\b",e:"",f:"\f",n:"\n",r:"\r",t:"\t",v:"\v",N:"",_:" ",L:"\u2028",P:"\u2029"," ":" ",'"':'"',"/":"/","\\":"\\","\t":"\t"};function p(e,t,i,r){const s=e.substr(t,i),o=s.length===i&&/^[0-9a-fA-F]+$/.test(s)?parseInt(s,16):NaN;if(isNaN(o)){const s=e.substr(t-2,i+2);return r(t-2,"BAD_DQ_ESCAPE",`Invalid escape sequence ${s}`),s}return String.fromCodePoint(o)}t.resolveFlowScalar=function(e,t,i){const{offset:c,type:d,source:u,end:l}=e;let h,m;const f=(e,t,r)=>i(c+e,t,r);switch(d){case"scalar":h=r.Scalar.PLAIN,m=function(e,t){let i="";switch(e[0]){case"\t":i="a tab character";break;case",":i="flow indicator character ,";break;case"%":i="directive indicator character %";break;case"|":case">":i=`block scalar indicator ${e[0]}`;break;case"@":case"`":i=`reserved character ${e[0]}`}return i&&t(0,"BAD_SCALAR_START",`Plain value cannot start with ${i}`),o(e)}(u,f);break;case"single-quoted-scalar":h=r.Scalar.QUOTE_SINGLE,m=function(e,t){return"'"===e[e.length-1]&&1!==e.length||t(e.length,"MISSING_CHAR","Missing closing 'quote"),o(e.slice(1,-1)).replace(/''/g,"'")}(u,f);break;case"double-quoted-scalar":h=r.Scalar.QUOTE_DOUBLE,m=function(e,t){let i="";for(let r=1;r<e.length-1;++r){const s=e[r];if("\r"!==s||"\n"!==e[r+1])if("\n"===s){const{fold:t,offset:s}=n(e,r);i+=t,r=s}else if("\\"===s){let s=e[++r];const o=a[s];if(o)i+=o;else if("\n"===s)for(s=e[r+1];" "===s||"\t"===s;)s=e[1+ ++r];else if("\r"===s&&"\n"===e[r+1])for(s=e[1+ ++r];" "===s||"\t"===s;)s=e[1+ ++r];else if("x"===s||"u"===s||"U"===s){const o={x:2,u:4,U:8}[s];i+=p(e,r+1,o,t),r+=o}else{const s=e.substr(r-1,2);t(r-1,"BAD_DQ_ESCAPE",`Invalid escape sequence ${s}`),i+=s}}else if(" "===s||"\t"===s){const t=r;let o=e[r+1];for(;" "===o||"\t"===o;)o=e[1+ ++r];"\n"===o||"\r"===o&&"\n"===e[r+2]||(i+=r>t?e.slice(t,r+1):s)}else i+=s}return'"'===e[e.length-1]&&1!==e.length||t(e.length,"MISSING_CHAR",'Missing closing "quote'),i}(u,f);break;default:return i(e,"UNEXPECTED_TOKEN",`Expected a flow scalar value, but found: ${d}`),{value:"",type:null,comment:"",range:[c,c+u.length,c+u.length]}}const y=c+u.length,g=s.resolveEnd(l,y,t,i);return{value:m,type:h,comment:g.comment,range:[c,y,g.offset]}}},7677:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(7085)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},7697:(e,t)=>{"use strict";function i(){return{keyword:"prohibited",type:"object",schemaType:"array",macro:function(e){return 0===e.length||(1===e.length?{not:{required:e}}:{not:{anyOf:e.map((e=>({required:[e]})))}})},metaSchema:{type:"array",items:{type:"string"}}}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i,e.exports=i},7728:e=>{"use strict";var t=e.exports=function(e,t,r){"function"==typeof t&&(r=t,t={}),i(t,"function"==typeof(r=t.cb||r)?r:r.pre||function(){},r.post||function(){},e,"",e)};function i(e,r,s,o,n,a,p,c,d,u){if(o&&"object"==typeof o&&!Array.isArray(o)){for(var l in r(o,n,a,p,c,d,u),o){var h=o[l];if(Array.isArray(h)){if(l in t.arrayKeywords)for(var m=0;m<h.length;m++)i(e,r,s,h[m],n+"/"+l+"/"+m,a,n,l,o,m)}else if(l in t.propsKeywords){if(h&&"object"==typeof h)for(var f in h)i(e,r,s,h[f],n+"/"+l+"/"+f.replace(/~/g,"~0").replace(/\//g,"~1"),a,n,l,o,f)}else(l in t.keywords||e.allKeys&&!(l in t.skipKeywords))&&i(e,r,s,h,n+"/"+l,a,n,l,o)}s(o,n,a,p,c,d,u)}}t.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0,if:!0,then:!0,else:!0},t.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},t.propsKeywords={$defs:!0,definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},t.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0}},7759:(e,t,i)=>{"use strict";var r=i(2119);e.exports=new r({explicit:[i(7212),i(8636),i(2369)]})},7766:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6982);t.default=function(e){return Array.isArray(e)?e=Buffer.from(e):"string"==typeof e&&(e=Buffer.from(e,"utf8")),(0,r.createHash)("sha1").update(e).digest()}},7775:(e,t,i)=>{const r=i(9896),s=i(857),o=i(6982),n=i(1198),a=i(9329),p=i(6928),c=i(5827),{spawn:d}=i(5317),{validate:u,resolvePaths:l,transformToSchemaKey:h,readFile:m}=i(3614);function f({stringifiedObject:e}){if("string"==typeof e)try{return JSON.parse(e)}catch(t){try{return n.parse(e)}catch(e){throw new Error("Invalid JSON or YAML format")}}return e}async function y(e){try{const t=await a.get(e);"object"==typeof t.data?t.data=JSON.stringify(t.data,null,2):t.data=t.data.toString();const i=e.split("/").pop(),n=o.createHash("md5").update(t.data).digest("hex"),p=`${s.tmpdir}/doc-detective/${n}_${i}`;return r.existsSync(`${s.tmpdir}/doc-detective`)||r.mkdirSync(`${s.tmpdir}/doc-detective`),r.existsSync(p)||r.writeFileSync(p,t.data),{result:"success",path:p}}catch(e){return{result:"error",message:e}}}async function g({config:e,files:t,source:i}){b(e,"debug",`validation: ${i}`);let s=["json","yaml","yml"];if(e.fileTypes.forEach((e=>{s=s.concat(e.extensions)})),t.indexOf(i)>=0)return!1;if(".json"===p.extname(i)||".yaml"===p.extname(i)||".yml"===p.extname(i)){const t=await m({fileURLOrPath:i});if("object"!=typeof t)return b(e,"debug",`${i} isn't a valid test specification. Skipping.`),!1;const s=u({schemaKey:"spec_v3",object:t,addDefaults:!1});if(!s.valid)return b(e,"warning",s),b(e,"warning",`${i} isn't a valid test specification. Skipping.`),!1;for(const s of t.tests){if(s.before){let t="";if(t="file"===e.relativePathBase?p.resolve(p.dirname(i),s.before):p.resolve(s.before),!r.existsSync(t))return b(e,"debug",`${t} is specified to run before a test but isn't a valid file. Skipping ${i}.`),!1}if(s.after){let t="";if(t="file"===e.relativePathBase?p.resolve(p.dirname(i),s.after):p.resolve(s.after),!r.existsSync(t))return b(e,"debug",`${t} is specified to run after a test but isn't a valid file. Skipping ${i}.`),!1}}}const o=p.extname(i).substring(1);return!!s.includes(o)||(b(e,"debug",`${i} extension isn't specified in a \`config.fileTypes\` object. Skipping.`),!1)}async function x({config:e,content:t,filePath:i,fileType:r}){const o=[];function n({tests:e,testId:t}){let i=e.find((e=>e.testId===t));return i||(i={testId:t,steps:[]},e.push(i)),i}function a(e,t){if("string"!=typeof e&&"object"!=typeof e)throw new Error("Invalid stringOrObject type");if("object"!=typeof t)throw new Error("Invalid values type");return"string"==typeof e&&(e=e.replace(/\$[0-9]+/g,(e=>{const i=e.substring(1);return t[i]}))),Object.keys(e).forEach((i=>("object"==typeof e[i]?e[i]=a(e[i],t):"string"==typeof e[i]&&(e[i]=e[i].replace(/\$[0-9]+/g,(e=>{const i=e.substring(1);return t[i]}))),i))),e}["testStart","testEnd","ignoreStart","ignoreEnd","step"].forEach((e=>{void 0!==r.inlineStatements&&void 0!==r.inlineStatements[e]&&r.inlineStatements[e].forEach((i=>{const r=new RegExp(i,"g"),s=[...t.matchAll(r)];s.forEach((t=>{t.type=e,t.sortIndex=t[1]?t.index+t[1].length:t.index})),o.push(...s)}))})),e.detectSteps&&r.markup&&r.markup.forEach((e=>{e.regex.forEach((i=>{const r=new RegExp(i,"g"),n=[...t.matchAll(r)];if(n.length>0&&e.batchMatches){const t={1:n.map((e=>e[1]||e[0])).join(s.EOL),type:"detectedStep",markup:e,sortIndex:Math.min(...n.map((e=>e.index)))};o.push(t)}else n.forEach((t=>{t.type="detectedStep",t.markup=e,t.sortIndex=t[1]?t.index+t[1].length:t.index})),o.push(...n)}))})),o.sort(((e,t)=>e.sortIndex-t.sortIndex));let p=[],d=`${c.v4()}`,l=!1,m=0;return o.forEach((t=>{let i="",r="",s=!1;switch(m=t.sortIndex,t.type){case"testStart":r=t[1]||t[0],i=f({stringifiedObject:r}),(i.id||i.file||i.setup||i.cleanup)&&(i.steps||(i.steps=[{action:"goTo",url:"https://doc-detective.com"}],s=!0),i=h({object:i,currentSchema:"test_v2",targetSchema:"test_v3"}),s&&(i.steps=[],s=!1)),i.testId?d=`${i.testId}`:i.testId=`${d}`,i.steps||(i.steps=[]),p.push(i);break;case"testEnd":d=`${c.v4()}`,l=!1;break;case"ignoreStart":l=!0;break;case"ignoreEnd":l=!1;break;case"detectedStep":if(i=n({tests:p,testId:d}),void 0!==i.detectSteps&&!i.detectSteps)break;t?.markup?.actions&&t.markup.actions.forEach((r=>{let s={};if("string"==typeof r){if("runCode"===r)return;s[r]=t[1]||t[0],!e.origin||"goTo"!==r&&"checkLink"!==r||(s[r].origin=e.origin)}else s=a(r,t);if(valid=u({schemaKey:"step_v3",object:s,addDefaults:!1}),!valid)return b(e,"warning",`Step ${JSON.stringify(s)} isn't a valid step. Skipping.`),!1;s=valid.object,i.steps.push(s)}));break;case"step":i=n({tests:p,testId:d}),r=t[1]||t[0];let o=f({stringifiedObject:r});const m=u({schemaKey:"step_v3",object:o,addDefaults:!1});if(!m.valid)return b(e,"warning",`Step ${JSON.stringify(o)} isn't a valid step. Skipping.`),!1;o=m.object,i.steps.push(o)}})),p.forEach((t=>{const r=u({schemaKey:"test_v3",object:t,addDefaults:!1});if(!r.valid)return b(e,"warning",`Couldn't convert some steps in ${i} to a valid test.Skipping. Errors: ${r.errors}`),!1;t=r.object})),p}async function b(e,t,i){let r=!1;if("error"===e.logLevel&&"error"===t?r=!0:("warning"!==e.logLevel||"error"!==t&&"warning"!==t)&&("info"!==e.logLevel||"error"!==t&&"warning"!==t&&"info"!==t)&&("debug"!==e.logLevel||"error"!==t&&"warning"!==t&&"info"!==t&&"debug"!==t)||(r=!0),r)if("string"==typeof i){let e=`(${t.toUpperCase()}) ${i}`;console.log(e)}else if("object"==typeof i){let e=`(${t.toUpperCase()})`;console.log(e),console.log(JSON.stringify(i,null,2))}}async function v(e,t=[],i){i||(i={});let r="bash",s=["-c"];"win32"===process.platform&&(r="cmd",s=["/c"]);let o=[e,...t].join(" ");s.push(o);let n={};"win32"===process.platform&&(n.shell=!0,n.windowsHide=!0),i.cwd&&(n.cwd=i.cwd);const a=d(r,s,n);a.on("error",(e=>{}));let p="";for await(const e of a.stdout)p+=e,i.debug&&console.log(e.toString());p=p.replace(/\n$/,"");let c="";for await(const e of a.stderr)c+=e,i.debug&&console.log(e.toString());return c=c.replace(/\n$/,""),{stdout:p,stderr:c,exitCode:await new Promise(((e,t)=>{a.on("close",e)}))}}t.qualifyFiles=async function({config:e}){let t=[],i=[],s=[];const o=e.beforeAny;o&&(s=s.concat(o));const n=e.input;s=s.concat(n);const a=e.afterAll;a&&(s=s.concat(a));for(let o of s){if(b(e,"debug",`source: ${o}`),o.startsWith("http://")||o.startsWith("https://")){const t=await y(o);if("error"===t.result){b(e,"warning",t.message);continue}o=t.path}let s=r.statSync(o).isFile(),n=r.statSync(o).isDirectory();if(s&&await g({config:e,files:i,source:o}))i.push(p.resolve(o));else if(n){t=[],t[0]=o;for(const s of t){const o=r.readdirSync(s);for(const n of o){const o=p.resolve(s+"/"+n);if(o.includes("node_modules"))continue;const a=r.statSync(o).isFile(),c=r.statSync(o).isDirectory();a&&await g({config:e,files:i,source:o})?i.push(p.resolve(o)):c&&e.recursive&&t.push(o)}}}}return i},t.parseTests=async function({config:e,files:t}){let i=[];for(const r of t){b(e,"debug",`file: ${r}`);const t=p.extname(r).slice(1);let s="";if(s=await m({fileURLOrPath:r}),"object"==typeof s){s=await l({config:e,object:s,filePath:r});for(const e of s.tests){if(e.before){const t=await m({fileURLOrPath:e.before});e.steps=t.tests[0].steps.concat(e.steps)}if(e.after){const t=await m({fileURLOrPath:e.after});e.steps=e.steps.concat(t.tests[0].steps)}}for(const t of s.tests)t.steps.forEach((t=>!!u({schemaKey:"step_v3",object:{...t},addDefaults:!1}).valid||(b(e,"warning",`Step ${t} isn't a valid step. Skipping.`),!1)));const t=u({schemaKey:"spec_v3",object:s,addDefaults:!1});if(!t.valid)return b(e,"warning",t),b(e,"warning",`After applying setup and cleanup steps, ${r} isn't a valid test specification. Skipping.`),!1;s=t.object,s=await l({config:e,object:s,filePath:r}),i.push(s)}else{let o={specId:`${c.v4()}`,contentPath:r,tests:[]};const n=e.fileTypes.find((e=>e.extensions.includes(t)));if(n.runShell){let t=JSON.stringify(n.runShell);t=t.replace(/\$1/g,r),t=JSON.parse(t);const i={steps:[{runShell:t}]},s=u({schemaKey:"test_v3",object:i,addDefaults:!1});if(!s.valid){b(e,"warning",`Failed to convert ${r} to a runShell step: ${s.errors}. Skipping.`);continue}o.tests.push(i);continue}const a=await x({config:e,content:s,fileType:n,filePath:r});o.tests.push(...a),o.tests=o.tests.filter((e=>e.steps.length>0)),u({schemaKey:"spec_v3",object:o,addDefaults:!1}).valid?(o=await l({config:e,object:o,filePath:r}),i.push(o)):b(e,"warning",`Tests from ${r} don't create a valid test specification. Skipping.`)}}return i},t.outputResults=async function(e,t,i){let s=JSON.stringify(t,null,2);r.writeFile(e,s,(e=>{if(e)throw e})),b(i,"info","RESULTS:"),b(i,"info",t),b(i,"info",`See results at ${e}`),b(i,"info","Cleaning up and finishing post-processing.")},t.loadEnvs=async function(e){return r.existsSync(e)?(i(998).config({path:e,override:!0}),{status:"PASS",description:"Envs set."}):{status:"FAIL",description:"Invalid file."}},t.log=b,t.timestamp=function(){let e=new Date;return`${e.getFullYear()}${("0"+(e.getMonth()+1)).slice(-2)}${("0"+e.getDate()).slice(-2)}-${("0"+e.getHours()).slice(-2)}${("0"+e.getMinutes()).slice(-2)}${("0"+e.getSeconds()).slice(-2)}`},t.replaceEnvs=function e(t){if(!t)return t;if("object"==typeof t)Object.keys(t).forEach((i=>{t[i]=e(t[i])}));else if("string"==typeof t){if(variableRegex=new RegExp(/\$[a-zA-Z0-9_]+/,"g"),matches=t.match(variableRegex),!matches)return t;matches.forEach((i=>{if(value=process.env[i.substring(1)],value){try{i.length===t.length&&"object"==typeof JSON.parse(t)&&(value=JSON.parse(value))}catch{}value=e(value),"string"==typeof value?t=t.replace(i,value):"object"==typeof value&&(t=value)}}))}return t},t.spawnCommand=v,t.inContainer=async function(){return"true"===process.env.IN_CONTAINER||"linux"===process.platform&&(result=await v('grep -sq "docker|lxc|kubepods" /proc/1/cgroup'),0===result.exitCode)},t.cleanTemp=function(){const e=`${s.tmpdir}/doc-detective`;r.existsSync(e)&&r.readdirSync(e).forEach((t=>{const i=`${e}/${t}`;r.unlinkSync(i)}))},t.calculatePercentageDifference=function(e,t){return(function(e,t){if(!e.length)return t.length;if(!t.length)return e.length;const i=[];for(let e=0;e<=t.length;e++)i[e]=[e];for(let t=0;t<=e.length;t++)i[0][t]=t;for(let r=1;r<=t.length;r++)for(let s=1;s<=e.length;s++)i[r][s]=Math.min(i[r-1][s]+1,i[r][s-1]+1,i[r-1][s-1]+(e[s-1]===t[r-1]?0:1));return i[t.length][e.length]}(e,t)/Math.max(e.length,t.length)*100).toFixed(2)},t.fetchFile=y,t.isRelativeUrl=function(e){try{return new URL(e),!1}catch(e){return!0}}},7808:(e,t)=>{"use strict";function i(e){switch(e.type){case"block-scalar":{let t="";for(const r of e.props)t+=i(r);return t+e.source}case"block-map":case"block-seq":{let t="";for(const i of e.items)t+=r(i);return t}case"flow-collection":{let t=e.start.source;for(const i of e.items)t+=r(i);for(const i of e.end)t+=i.source;return t}case"document":{let t=r(e);if(e.end)for(const i of e.end)t+=i.source;return t}default:{let t=e.source;if("end"in e&&e.end)for(const i of e.end)t+=i.source;return t}}}function r({start:e,key:t,sep:r,value:s}){let o="";for(const t of e)o+=t.source;if(t&&(o+=i(t)),r)for(const e of r)o+=e.source;return s&&(o+=i(s)),o}t.stringify=e=>"type"in e?i(e):r(e)},7833:(e,t,i)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const i="color: "+this.color;t.splice(1,0,i,"color: inherit");let r=0,s=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(r++,"%c"===e&&(s=r))})),t.splice(s,0,i)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")||t.storage.getItem("DEBUG")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let e;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&(e=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(e[1],10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=i(736)(t);const{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},7834:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(2058)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},7857:(e,t,i)=>{const{setConfig:r}=i(2467),{qualifyFiles:s,parseTests:o,log:n}=i(7775),{resolveDetectedTests:a}=i(9541);async function p({config:e,detectedTests:t}){return e.environment||(e=await r({config:e}),n(e,"debug","CONFIG:"),n(e,"debug",e)),await a({config:e,detectedTests:t})}async function c({config:e}){e.environment||(e=await r({config:e}),n(e,"debug","CONFIG:"),n(e,"debug",e));const t=await s({config:e});n(e,"debug","FILES:"),n(e,"debug",t);const i=await o({config:e,files:t});return n(e,"debug","SPECS:"),n(e,"info",i),i}t.detectTests=c,t.resolveTests=p,t.detectAndResolveTests=async function({config:e}){e=await r({config:e});const t=await c({config:e});return t&&0!==t.length?await p({config:e,detectedTests:t}):(n(e,"warn","No tests detected."),null)}},7888:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const a=i(7184),p=n(i(6385)),c=n(i(5288)),d=i(2270);t.default=async function(e,t,i){const r=e.indexOf("#");let s="";r>=0&&(s=e.substring(r),e=e.substring(0,r));const o=t._add(e),n={url:e,hash:s,extension:p.getExtension(e)};try{const e=await async function(e,t,i){let r=c.all(t.resolve);r=c.filter(r,"canRead",e),c.sort(r);try{return await c.run(r,"read",e,i)}catch(i){throw!i&&t.continueOnError?new d.UnmatchedResolverError(e.url):i&&"error"in i?i.error instanceof d.ResolverError?i.error:new d.ResolverError(i,e.url):a.ono.syntax(`Unable to resolve $ref pointer "${e.url}"`)}}(n,i,t);o.pathType=e.plugin.name,n.data=e.result;const r=await async function(e,t,i){const r=c.all(t.parse),s=c.filter(r,"canParse",e),o=s.length>0?s:r;c.sort(o);try{const t=await c.run(o,"parse",e,i);if(!t.plugin.allowEmpty&&function(e){return void 0===e||"object"==typeof e&&0===Object.keys(e).length||"string"==typeof e&&0===e.trim().length||Buffer.isBuffer(e)&&0===e.length}(t.result))throw a.ono.syntax(`Error parsing "${e.url}" as ${t.plugin.name}. \nParsed value is empty`);return t}catch(i){throw!i&&t.continueOnError?new d.UnmatchedParserError(e.url):i&&i.message&&i.message.startsWith("Error parsing")?i:i&&"error"in i?i.error instanceof d.ParserError?i.error:new d.ParserError(i.error.message,e.url):a.ono.syntax(`Unable to parse ${e.url}`)}}(n,i,t);return o.value=r.result,r.result}catch(e){throw(0,d.isHandledError)(e)&&(o.value=e),e}}},7892:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=r.operators,o={maximum:{okStr:"<=",ok:s.LTE,fail:s.GT},minimum:{okStr:">=",ok:s.GTE,fail:s.LT},exclusiveMaximum:{okStr:"<",ok:s.LT,fail:s.GTE},exclusiveMinimum:{okStr:">",ok:s.GT,fail:s.LTE}},n={message:({keyword:e,schemaCode:t})=>r.str`must be ${o[e].okStr} ${t}`,params:({keyword:e,schemaCode:t})=>r._`{comparison: ${o[e].okStr}, limit: ${t}}`},a={keyword:Object.keys(o),type:"number",schemaType:"number",$data:!0,error:n,code(e){const{keyword:t,data:i,schemaCode:s}=e;e.fail$data(r._`${i} ${o[t].fail} ${s} || isNaN(${i})`)}};t.default=a},7902:(e,t,i)=>{"use strict";var r=i(5219),s=i(8017),o=i(5139),n=i(484);class a{constructor(e,t=null){Object.defineProperty(this,n.NODE_TYPE,{value:n.PAIR}),this.key=e,this.value=t}clone(e){let{key:t,value:i}=this;return n.isNode(t)&&(t=t.clone(e)),n.isNode(i)&&(i=i.clone(e)),new a(t,i)}toJSON(e,t){const i=t?.mapAsMap?new Map:{};return o.addPairToJSMap(t,i,this)}toString(e,t,i){return e?.doc?s.stringifyPair(this,e,t,i):JSON.stringify(this)}}t.Pair=a,t.createPair=function(e,t,i){const s=r.createNode(e,void 0,i),o=r.createNode(t,void 0,i);return new a(s,o)}},7906:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const a=n(i(270)),p=i(2270),c=i(6385);class d{constructor(e){this.errors=[],this.$refs=e}addError(e){void 0===this.errors&&(this.errors=[]);const t=this.errors.map((({footprint:e})=>e));"errors"in e&&Array.isArray(e.errors)?this.errors.push(...e.errors.map(p.normalizeError).filter((({footprint:e})=>!t.includes(e)))):"footprint"in e&&t.includes(e.footprint)||this.errors.push((0,p.normalizeError)(e))}exists(e,t){try{return this.resolve(e,t),!0}catch{return!1}}get(e,t){return this.resolve(e,t)?.value}resolve(e,t,i,r){const s=new a.default(this,e,i);try{const e=s.resolve(this.value,t,r);return e.value===a.nullSymbol&&(e.value=null),e}catch(e){if(!t||!t.continueOnError||!(0,p.isHandledError)(e))throw e;return null===e.path&&(e.path=(0,c.safePointerToPath)((0,c.getHash)(r))),e instanceof p.InvalidPointerError&&(e.source=decodeURI((0,c.stripHash)(r))),this.addError(e),null}}set(e,t){const i=new a.default(this,e);this.value=i.set(this.value,t),this.value===a.nullSymbol&&(this.value=null)}static is$Ref(e){return Boolean(e)&&"object"==typeof e&&null!==e&&"$ref"in e&&"string"==typeof e.$ref&&e.$ref.length>0}static isExternal$Ref(e){return d.is$Ref(e)&&"#"!==e.$ref[0]}static isAllowed$Ref(e,t){if(this.is$Ref(e)){if("#/"===e.$ref.substring(0,2)||"#"===e.$ref)return!0;if("#"!==e.$ref[0]&&(!t||t.resolve?.external))return!0}}static isExtended$Ref(e){return d.is$Ref(e)&&Object.keys(e).length>1}static dereference(e,t){if(t&&"object"==typeof t&&d.isExtended$Ref(e)){const i={};for(const t of Object.keys(e))"$ref"!==t&&(i[t]=e[t]);for(const e of Object.keys(t))e in i||(i[e]=t[e]);return i}return t}}t.default=d},7920:(e,t,i)=>{e=i.nmd(e);const r=i(9896),s=i(6928),{validate:o}=i(7514);async function n({config:e,object:t,filePath:i,nested:a=!1,objectType:p}){const c=["input","output","loadVariables","setup","cleanup","configPath","beforeAny","afterAll","mediaDirectory","downloadDirectory","descriptionPath","path"],d=["file","path","directory","before","after","loadVariables","setup","cleanup","savePath","saveDirectory","specPath","descriptionPath","workingDirectory"],u=["requestData","responseData","requestHeaders","responseHeaders","requestParams","responseParams"];function l(e,t,i){if(s.isAbsolute(t))return t;const o=(r.existsSync(i)?r.lstatSync(i).isFile():""!==s.parse(i).ext)?s.dirname(i):i;return"file"===e?s.resolve(o,t):s.resolve(t)}const h=e.relativePathBase;let m;if(a||p){if(a&&!p)throw new Error("Object type is required for nested objects.");"config"===p?m=c:"spec"===p&&(m=d)}else if(o({schemaKey:"config_v3",object:{...t}}).valid)m=c,p="config";else{if(!o({schemaKey:"spec_v3",object:{...t}}).valid)throw new Error("Object isn't a valid config or spec.");m=d,p="spec"}for(const r of Object.keys(t))if(Array.isArray(t[r]))for(let o=0;o<t[r].length;o++){const a=t[r][o];if("object"==typeof a)await n({config:e,object:a,filePath:i,nested:!0,objectType:p});else if("string"==typeof a&&m.includes(r)){const e="path"===r&&t.directory&&s.isAbsolute(t.directory)?l(h,a,t.directory):l(h,a,i);t[r][o]=e}}else if("object"!=typeof t[r]||("spec"!==p||u.includes(r))&&"config"!==p){if("string"==typeof t[r]){if(t[r].startsWith("https://")||t[r].startsWith("http://"))continue;if(m.includes(r))if("path"===r&&t.directory){const e=s.isAbsolute(t.directory)?t.directory:l(h,t.directory,i);t[r]=l(h,t[r],e)}else t[r]=l(h,t[r],i)}}else t[r]=await n({config:e,object:t[r],filePath:i,nested:!0,objectType:p});return t}t.resolvePaths=n,i.c[i.s]===e&&(async()=>{const e={tests:[{steps:[{screenshot:{path:"file.png",directory:"/home/hawkeyexl/Workspaces/doc-detective-common/screenshots"}}]}]},t=process.cwd();await n({config:{relativePathBase:"file"},object:e,filePath:t}),console.log(JSON.stringify(e,null,2))})()},7959:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},7968:(e,t,i)=>{"use strict";var r=i(5125);e.exports=r},7969:(e,t,i)=>{"use strict";var r=i(9714);function s({value:e,source:t},i){return t&&(e?o:n).test.test(t)?t:e?i.options.trueStr:i.options.falseStr}const o={identify:e=>!0===e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new r.Scalar(!0),stringify:s},n={identify:e=>!1===e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,resolve:()=>new r.Scalar(!1),stringify:s};t.falseTag=n,t.trueTag=o},7971:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(3202),s=i(458),o=i(3891);t.default=function(e,t,i){e??={},i??=0;let n=(0,s.default)({...e,_v6:!0},new Uint8Array(16));if(n=(0,o.default)(n),t){for(let e=0;e<16;e++)t[i+e]=n[e];return t}return(0,r.unsafeStringify)(n)}},8002:e=>{"use strict";e.exports=Math.min},8011:(e,t,i)=>{e.exports=i(7286)},8017:(e,t,i)=>{"use strict";var r=i(484),s=i(9714),o=i(3793),n=i(248);t.stringifyPair=function({key:e,value:t},i,a,p){const{allNullValues:c,doc:d,indent:u,indentStep:l,options:{commentString:h,indentSeq:m,simpleKeys:f}}=i;let y=r.isNode(e)&&e.comment||null;if(f){if(y)throw new Error("With simple keys, key nodes cannot have comments");if(r.isCollection(e)||!r.isNode(e)&&"object"==typeof e)throw new Error("With simple keys, collection cannot be used as a key value")}let g=!f&&(!e||y&&null==t&&!i.inFlow||r.isCollection(e)||(r.isScalar(e)?e.type===s.Scalar.BLOCK_FOLDED||e.type===s.Scalar.BLOCK_LITERAL:"object"==typeof e));i=Object.assign({},i,{allNullValues:!1,implicitKey:!g&&(f||!c),indent:u+l});let x,b,v,w=!1,I=!1,k=o.stringify(e,i,(()=>w=!0),(()=>I=!0));if(!g&&!i.inFlow&&k.length>1024){if(f)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");g=!0}if(i.inFlow){if(c||null==t)return w&&a&&a(),""===k?"?":g?`? ${k}`:k}else if(c&&!f||null==t&&g)return k=`? ${k}`,y&&!w?k+=n.lineComment(k,i.indent,h(y)):I&&p&&p(),k;w&&(y=null),g?(y&&(k+=n.lineComment(k,i.indent,h(y))),k=`? ${k}\n${u}:`):(k=`${k}:`,y&&(k+=n.lineComment(k,i.indent,h(y)))),r.isNode(t)?(x=!!t.spaceBefore,b=t.commentBefore,v=t.comment):(x=!1,b=null,v=null,t&&"object"==typeof t&&(t=d.createNode(t))),i.implicitKey=!1,g||y||!r.isScalar(t)||(i.indentAtStart=k.length+1),I=!1,m||!(l.length>=2)||i.inFlow||g||!r.isSeq(t)||t.flow||t.tag||t.anchor||(i.indent=i.indent.substring(2));let P=!1;const j=o.stringify(t,i,(()=>P=!0),(()=>I=!0));let A=" ";if(y||x||b){if(A=x?"\n":"",b){const e=h(b);A+=`\n${n.indentComment(e,i.indent)}`}""!==j||i.inFlow?A+=`\n${i.indent}`:"\n"===A&&(A="\n\n")}else if(!g&&r.isCollection(t)){const e=j[0],r=j.indexOf("\n"),s=-1!==r,o=i.inFlow??t.flow??0===t.items.length;if(s||!o){let t=!1;if(s&&("&"===e||"!"===e)){let i=j.indexOf(" ");"&"===e&&-1!==i&&i<r&&"!"===j[i+1]&&(i=j.indexOf(" ",i+1)),(-1===i||r<i)&&(t=!0)}t||(A=`\n${i.indent}`)}}else""!==j&&"\n"!==j[0]||(A="");return k+=A+j,i.inFlow?P&&a&&a():v&&!P?k+=n.lineComment(k,i.indent,h(v)):I&&p&&p(),k}},8025:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.extendSubschemaMode=t.extendSubschemaData=t.getSubschema=void 0;const r=i(6675),s=i(749);t.getSubschema=function(e,{keyword:t,schemaProp:i,schema:o,schemaPath:n,errSchemaPath:a,topSchemaRef:p}){if(void 0!==t&&void 0!==o)throw new Error('both "keyword" and "schema" passed, only one allowed');if(void 0!==t){const o=e.schema[t];return void 0===i?{schema:o,schemaPath:r._`${e.schemaPath}${(0,r.getProperty)(t)}`,errSchemaPath:`${e.errSchemaPath}/${t}`}:{schema:o[i],schemaPath:r._`${e.schemaPath}${(0,r.getProperty)(t)}${(0,r.getProperty)(i)}`,errSchemaPath:`${e.errSchemaPath}/${t}/${(0,s.escapeFragment)(i)}`}}if(void 0!==o){if(void 0===n||void 0===a||void 0===p)throw new Error('"schemaPath", "errSchemaPath" and "topSchemaRef" are required with "schema"');return{schema:o,schemaPath:n,topSchemaRef:p,errSchemaPath:a}}throw new Error('either "keyword" or "schema" must be passed')},t.extendSubschemaData=function(e,t,{dataProp:i,dataPropType:o,data:n,dataTypes:a,propertyName:p}){if(void 0!==n&&void 0!==i)throw new Error('both "data" and "dataProp" passed, only one allowed');const{gen:c}=t;if(void 0!==i){const{errorPath:n,dataPathArr:a,opts:p}=t;d(c.let("data",r._`${t.data}${(0,r.getProperty)(i)}`,!0)),e.errorPath=r.str`${n}${(0,s.getErrorPath)(i,o,p.jsPropertySyntax)}`,e.parentDataProperty=r._`${i}`,e.dataPathArr=[...a,e.parentDataProperty]}function d(i){e.data=i,e.dataLevel=t.dataLevel+1,e.dataTypes=[],t.definedProperties=new Set,e.parentData=t.data,e.dataNames=[...t.dataNames,i]}void 0!==n&&(d(n instanceof r.Name?n:c.let("data",n,!0)),void 0!==p&&(e.propertyName=p)),a&&(e.dataTypes=a)},t.extendSubschemaMode=function(e,{jtdDiscriminator:t,jtdMetadata:i,compositeRule:r,createErrors:s,allErrors:o}){void 0!==r&&(e.compositeRule=r),void 0!==s&&(e.createErrors=s),void 0!==o&&(e.allErrors=o),e.jtdDiscriminator=t,e.jtdMetadata=i}},8051:(e,t,i)=>{var r=i(2313),s=i(4555);e.exports=function(e,t,i,o){var n=i.keyedList?i.keyedList[i.index]:i.index;i.jobs[n]=function(e,t,i,s){return 2==e.length?e(i,r(s)):e(i,t,r(s))}(t,n,e[n],(function(e,t){n in i.jobs&&(delete i.jobs[n],e?s(i):i.results[n]=t,o(e,i.results))}))}},8068:e=>{"use strict";e.exports=SyntaxError},8069:(e,t,i)=>{var r=i(2203).Stream,s=i(9023);function o(){this.source=null,this.dataSize=0,this.maxDataSize=1048576,this.pauseStream=!0,this._maxDataSizeExceeded=!1,this._released=!1,this._bufferedEvents=[]}e.exports=o,s.inherits(o,r),o.create=function(e,t){var i=new this;for(var r in t=t||{})i[r]=t[r];i.source=e;var s=e.emit;return e.emit=function(){return i._handleEmit(arguments),s.apply(e,arguments)},e.on("error",(function(){})),i.pauseStream&&e.pause(),i},Object.defineProperty(o.prototype,"readable",{configurable:!0,enumerable:!0,get:function(){return this.source.readable}}),o.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)},o.prototype.resume=function(){this._released||this.release(),this.source.resume()},o.prototype.pause=function(){this.source.pause()},o.prototype.release=function(){this._released=!0,this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this)),this._bufferedEvents=[]},o.prototype.pipe=function(){var e=r.prototype.pipe.apply(this,arguments);return this.resume(),e},o.prototype._handleEmit=function(e){this._released?this.emit.apply(this,e):("data"===e[0]&&(this.dataSize+=e[1].length,this._checkIfMaxDataSizeExceeded()),this._bufferedEvents.push(e))},o.prototype._checkIfMaxDataSizeExceeded=function(){if(!(this._maxDataSizeExceeded||this.dataSize<=this.maxDataSize)){this._maxDataSizeExceeded=!0;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}}},8071:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatLimitDefinition=void 0;const r=i(5188),s=i(6675),o=s.operators,n={formatMaximum:{okStr:"<=",ok:o.LTE,fail:o.GT},formatMinimum:{okStr:">=",ok:o.GTE,fail:o.LT},formatExclusiveMaximum:{okStr:"<",ok:o.LT,fail:o.GTE},formatExclusiveMinimum:{okStr:">",ok:o.GT,fail:o.LTE}},a={message:({keyword:e,schemaCode:t})=>s.str`should be ${n[e].okStr} ${t}`,params:({keyword:e,schemaCode:t})=>s._`{comparison: ${n[e].okStr}, limit: ${t}}`};t.formatLimitDefinition={keyword:Object.keys(n),type:"string",schemaType:"string",$data:!0,error:a,code(e){const{gen:t,data:i,schemaCode:o,keyword:a,it:p}=e,{opts:c,self:d}=p;if(!c.validateFormats)return;const u=new r.KeywordCxt(p,d.RULES.all.format.definition,"format");function l(e){return s._`${e}.compare(${i}, ${o}) ${n[a].fail} 0`}u.$data?function(){const i=t.scopeValue("formats",{ref:d.formats,code:c.code.formats}),r=t.const("fmt",s._`${i}[${u.schemaCode}]`);e.fail$data((0,s.or)(s._`typeof ${r} != "object"`,s._`${r} instanceof RegExp`,s._`typeof ${r}.compare != "function"`,l(r)))}():function(){const i=u.schema,r=d.formats[i];if(!r||!0===r)return;if("object"!=typeof r||r instanceof RegExp||"function"!=typeof r.compare)throw new Error(`"${a}": format "${i}" does not define "compare" function`);const o=t.scopeValue("formats",{key:i,ref:r,code:c.code.formats?s._`${c.code.formats}${(0,s.getProperty)(i)}`:void 0});e.fail$data(l(o))}()},dependencies:["format"]},t.default=e=>(e.addKeyword(t.formatLimitDefinition),e)},8080:(e,t,i)=>{"use strict";var r=i(181),s=i(9714),o=i(7180);const n={identify:e=>e instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(e,t){if("function"==typeof r.Buffer)return r.Buffer.from(e,"base64");if("function"==typeof atob){const t=atob(e.replace(/[\n\r]/g,"")),i=new Uint8Array(t.length);for(let e=0;e<t.length;++e)i[e]=t.charCodeAt(e);return i}return t("This environment does not support reading binary tags; either Buffer or atob is required"),e},stringify({comment:e,type:t,value:i},n,a,p){if(!i)return"";const c=i;let d;if("function"==typeof r.Buffer)d=c instanceof r.Buffer?c.toString("base64"):r.Buffer.from(c.buffer).toString("base64");else{if("function"!=typeof btoa)throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let e="";for(let t=0;t<c.length;++t)e+=String.fromCharCode(c[t]);d=btoa(e)}}if(t??(t=s.Scalar.BLOCK_LITERAL),t!==s.Scalar.QUOTE_DOUBLE){const e=Math.max(n.options.lineWidth-n.indent.length,n.options.minContentWidth),i=Math.ceil(d.length/e),r=new Array(i);for(let t=0,s=0;t<i;++t,s+=e)r[t]=d.substr(s,e);d=r.join(t===s.Scalar.BLOCK_LITERAL?"\n":" ")}return o.stringifyString({comment:e,type:t,value:d},n,a,p)}};t.binary=n},8083:(e,t,i)=>{"use strict";var r=i(8433);function s(e,t,i,r,s){var o="",n="",a=Math.floor(s/2)-1;return r-t>a&&(t=r-a+(o=" ... ").length),i-r>a&&(i=r+a-(n=" ...").length),{str:o+e.slice(t,i).replace(/\t/g,"→")+n,pos:r-t+o.length}}function o(e,t){return r.repeat(" ",t-e.length)+e}e.exports=function(e,t){if(t=Object.create(t||null),!e.buffer)return null;t.maxLength||(t.maxLength=79),"number"!=typeof t.indent&&(t.indent=1),"number"!=typeof t.linesBefore&&(t.linesBefore=3),"number"!=typeof t.linesAfter&&(t.linesAfter=2);for(var i,n=/\r?\n|\r|\0/g,a=[0],p=[],c=-1;i=n.exec(e.buffer);)p.push(i.index),a.push(i.index+i[0].length),e.position<=i.index&&c<0&&(c=a.length-2);c<0&&(c=a.length-1);var d,u,l="",h=Math.min(e.line+t.linesAfter,p.length).toString().length,m=t.maxLength-(t.indent+h+3);for(d=1;d<=t.linesBefore&&!(c-d<0);d++)u=s(e.buffer,a[c-d],p[c-d],e.position-(a[c]-a[c-d]),m),l=r.repeat(" ",t.indent)+o((e.line-d+1).toString(),h)+" | "+u.str+"\n"+l;for(u=s(e.buffer,a[c],p[c],e.position,m),l+=r.repeat(" ",t.indent)+o((e.line+1).toString(),h)+" | "+u.str+"\n",l+=r.repeat("-",t.indent+h+3+u.pos)+"^\n",d=1;d<=t.linesAfter&&!(c+d>=p.length);d++)u=s(e.buffer,a[c+d],p[c+d],e.position-(a[c]-a[c+d]),m),l+=r.repeat(" ",t.indent)+o((e.line+d+1).toString(),h)+" | "+u.str+"\n";return l.replace(/\n$/,"")}},8157:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.URL=t.DNS=t.stringToBytes=void 0;const r=i(2524),s=i(3202);function o(e){e=unescape(encodeURIComponent(e));const t=new Uint8Array(e.length);for(let i=0;i<e.length;++i)t[i]=e.charCodeAt(i);return t}t.stringToBytes=o,t.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",t.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",t.default=function(e,t,i,n,a,p){const c="string"==typeof i?o(i):i,d="string"==typeof n?(0,r.default)(n):n;if("string"==typeof n&&(n=(0,r.default)(n)),16!==n?.length)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let u=new Uint8Array(16+c.length);if(u.set(d),u.set(c,d.length),u=t(u),u[6]=15&u[6]|e,u[8]=63&u[8]|128,a){p=p||0;for(let e=0;e<16;++e)a[p+e]=u[e];return a}return(0,s.unsafeStringify)(u)}},8167:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(6238),o=i(4253),n=i(6649),a=i(749),p={keyword:"discriminator",type:"object",schemaType:"object",error:{message:({params:{discrError:e,tagName:t}})=>e===s.DiscrError.Tag?`tag "${t}" must be string`:`value of tag "${t}" must be in oneOf`,params:({params:{discrError:e,tag:t,tagName:i}})=>r._`{error: ${e}, tag: ${i}, tagValue: ${t}}`},code(e){const{gen:t,data:i,schema:p,parentSchema:c,it:d}=e,{oneOf:u}=c;if(!d.opts.discriminator)throw new Error("discriminator: requires discriminator option");const l=p.propertyName;if("string"!=typeof l)throw new Error("discriminator: requires propertyName");if(p.mapping)throw new Error("discriminator: mapping is not supported");if(!u)throw new Error("discriminator: requires oneOf keyword");const h=t.let("valid",!1),m=t.const("tag",r._`${i}${(0,r.getProperty)(l)}`);function f(i){const s=t.name("valid"),o=e.subschema({keyword:"oneOf",schemaProp:i},s);return e.mergeEvaluated(o,r.Name),s}t.if(r._`typeof ${m} == "string"`,(()=>function(){const i=function(){var e;const t={},i=s(c);let r=!0;for(let t=0;t<u.length;t++){let c=u[t];if((null==c?void 0:c.$ref)&&!(0,a.schemaHasRulesButRef)(c,d.self.RULES)){const e=c.$ref;if(c=o.resolveRef.call(d.self,d.schemaEnv.root,d.baseId,e),c instanceof o.SchemaEnv&&(c=c.schema),void 0===c)throw new n.default(d.opts.uriResolver,d.baseId,e)}const h=null===(e=null==c?void 0:c.properties)||void 0===e?void 0:e[l];if("object"!=typeof h)throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have "properties/${l}"`);r=r&&(i||s(c)),p(h,t)}if(!r)throw new Error(`discriminator: "${l}" must be required`);return t;function s({required:e}){return Array.isArray(e)&&e.includes(l)}function p(e,t){if(e.const)h(e.const,t);else{if(!e.enum)throw new Error(`discriminator: "properties/${l}" must have "const" or "enum"`);for(const i of e.enum)h(i,t)}}function h(e,i){if("string"!=typeof e||e in t)throw new Error(`discriminator: "${l}" values must be unique strings`);t[e]=i}}();t.if(!1);for(const e in i)t.elseIf(r._`${m} === ${e}`),t.assign(h,f(i[e]));t.else(),e.error(!1,{discrError:s.DiscrError.Mapping,tag:m,tagName:l}),t.endIf()}()),(()=>e.error(!1,{discrError:s.DiscrError.Tag,tag:m,tagName:l}))),e.ok(h)}};t.default=p},8269:(e,t,i)=>{"use strict";var r=i(9896),s=i(8543),o=i(1893);e.exports={order:100,canRead:function(e){return o.isFileSystemPath(e.url)},read:function(e){return new Promise((function(t,i){var n;try{n=o.toFileSystemPath(e.url)}catch(t){i(s.uri(t,"Malformed URI: %s",e.url))}try{r.readFile(n,(function(e,r){e?i(s(e,'Error opening file "%s"',n)):t(r)}))}catch(e){i(s(e,'Error opening file "%s"',n))}}))}}},8300:(e,t,i)=>{"use strict";var r=i(9343),s=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"],o=["scalar","sequence","mapping"];e.exports=function(e,t){if(t=t||{},Object.keys(t).forEach((function(t){if(-1===s.indexOf(t))throw new r('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.defaultStyle=t.defaultStyle||null,this.styleAliases=function(e){var t={};return null!==e&&Object.keys(e).forEach((function(i){e[i].forEach((function(e){t[String(e)]=i}))})),t}(t.styleAliases||null),-1===o.indexOf(this.kind))throw new r('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},8311:e=>{"use strict";var t=/\.(jpeg|jpg|gif|png|bmp|ico)$/i;e.exports={order:400,allowEmpty:!0,canParse:function(e){return Buffer.isBuffer(e.data)&&t.test(e.url)},parse:function(e){return Buffer.isBuffer(e.data)?e.data:new Buffer(e.data)}}},8334:(e,t,i)=>{"use strict";var r=i(484);t.mapIncludes=function(e,t,i){const{uniqueKeys:s}=e.options;if(!1===s)return!1;const o="function"==typeof s?s:(e,t)=>e===t||r.isScalar(e)&&r.isScalar(t)&&e.value===t.value;return t.some((e=>o(e.key,i)))}},8335:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="object"==typeof process&&"function"==typeof process.nextTick?process.nextTick:"function"==typeof setImmediate?setImmediate:function(e){setTimeout(e,0)}},8337:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=a(i(9896)),c=i(7184),d=n(i(6385)),u=i(2270);t.default={order:100,canRead:e=>d.isFileSystemPath(e.url),async read(e){let t;try{t=d.toFileSystemPath(e.url)}catch(t){throw new u.ResolverError(c.ono.uri(t,`Malformed URI: ${e.url}`),e.url)}try{return await p.default.promises.readFile(t)}catch(e){throw new u.ResolverError((0,c.ono)(e,`Error opening file "${t}"`),t)}}}},8343:(e,t,i)=>{"use strict";const{normalizeIPv6:r,normalizeIPv4:s,removeDotSegments:o,recomposeAuthority:n,normalizeComponentEncoding:a}=i(4834),p=i(343);function c(e,t,i,r){const s={};return r||(e=h(d(e,i),i),t=h(d(t,i),i)),!(i=i||{}).tolerant&&t.scheme?(s.scheme=t.scheme,s.userinfo=t.userinfo,s.host=t.host,s.port=t.port,s.path=o(t.path||""),s.query=t.query):(void 0!==t.userinfo||void 0!==t.host||void 0!==t.port?(s.userinfo=t.userinfo,s.host=t.host,s.port=t.port,s.path=o(t.path||""),s.query=t.query):(t.path?("/"===t.path.charAt(0)?s.path=o(t.path):(void 0===e.userinfo&&void 0===e.host&&void 0===e.port||e.path?e.path?s.path=e.path.slice(0,e.path.lastIndexOf("/")+1)+t.path:s.path=t.path:s.path="/"+t.path,s.path=o(s.path)),s.query=t.query):(s.path=e.path,void 0!==t.query?s.query=t.query:s.query=e.query),s.userinfo=e.userinfo,s.host=e.host,s.port=e.port),s.scheme=e.scheme),s.fragment=t.fragment,s}function d(e,t){const i={host:e.host,scheme:e.scheme,userinfo:e.userinfo,port:e.port,path:e.path,query:e.query,nid:e.nid,nss:e.nss,uuid:e.uuid,fragment:e.fragment,reference:e.reference,resourceName:e.resourceName,secure:e.secure,error:""},r=Object.assign({},t),s=[],a=p[(r.scheme||i.scheme||"").toLowerCase()];a&&a.serialize&&a.serialize(i,r),void 0!==i.path&&(r.skipEscape?i.path=unescape(i.path):(i.path=escape(i.path),void 0!==i.scheme&&(i.path=i.path.split("%3A").join(":")))),"suffix"!==r.reference&&i.scheme&&s.push(i.scheme,":");const c=n(i);if(void 0!==c&&("suffix"!==r.reference&&s.push("//"),s.push(c),i.path&&"/"!==i.path.charAt(0)&&s.push("/")),void 0!==i.path){let e=i.path;r.absolutePath||a&&a.absolutePath||(e=o(e)),void 0===c&&(e=e.replace(/^\/\//u,"/%2F")),s.push(e)}return void 0!==i.query&&s.push("?",i.query),void 0!==i.fragment&&s.push("#",i.fragment),s.join("")}const u=Array.from({length:127},((e,t)=>/[^!"$&'()*+,\-.;=_`a-z{}~]/u.test(String.fromCharCode(t)))),l=/^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;function h(e,t){const i=Object.assign({},t),o={scheme:void 0,userinfo:void 0,host:"",port:void 0,path:"",query:void 0,fragment:void 0},n=-1!==e.indexOf("%");let a=!1;"suffix"===i.reference&&(e=(i.scheme?i.scheme+":":"")+"//"+e);const c=e.match(l);if(c){if(o.scheme=c[1],o.userinfo=c[3],o.host=c[4],o.port=parseInt(c[5],10),o.path=c[6]||"",o.query=c[7],o.fragment=c[8],isNaN(o.port)&&(o.port=c[5]),o.host){const e=s(o.host);if(!1===e.isIPV4){const t=r(e.host);o.host=t.host.toLowerCase(),a=t.isIPV6}else o.host=e.host,a=!0}void 0!==o.scheme||void 0!==o.userinfo||void 0!==o.host||void 0!==o.port||void 0!==o.query||o.path?void 0===o.scheme?o.reference="relative":void 0===o.fragment?o.reference="absolute":o.reference="uri":o.reference="same-document",i.reference&&"suffix"!==i.reference&&i.reference!==o.reference&&(o.error=o.error||"URI is not a "+i.reference+" reference.");const e=p[(i.scheme||o.scheme||"").toLowerCase()];if(!(i.unicodeSupport||e&&e.unicodeSupport)&&o.host&&(i.domainHost||e&&e.domainHost)&&!1===a&&function(e){let t=0;for(let i=0,r=e.length;i<r;++i)if(t=e.charCodeAt(i),t>126||u[t])return!0;return!1}(o.host))try{o.host=URL.domainToASCII(o.host.toLowerCase())}catch(e){o.error=o.error||"Host's domain name can not be converted to ASCII: "+e}(!e||e&&!e.skipNormalize)&&(n&&void 0!==o.scheme&&(o.scheme=unescape(o.scheme)),n&&void 0!==o.host&&(o.host=unescape(o.host)),o.path&&(o.path=escape(unescape(o.path))),o.fragment&&(o.fragment=encodeURI(decodeURIComponent(o.fragment)))),e&&e.parse&&e.parse(o,i)}else o.error=o.error||"URI can not be parsed.";return o}const m={SCHEMES:p,normalize:function(e,t){return"string"==typeof e?e=d(h(e,t),t):"object"==typeof e&&(e=h(d(e,t),t)),e},resolve:function(e,t,i){const r=Object.assign({scheme:"null"},i);return d(c(h(e,r),h(t,r),r,!0),{...r,skipEscape:!0})},resolveComponents:c,equal:function(e,t,i){return"string"==typeof e?(e=unescape(e),e=d(a(h(e,i),!0),{...i,skipEscape:!0})):"object"==typeof e&&(e=d(a(e,!0),{...i,skipEscape:!0})),"string"==typeof t?(t=unescape(t),t=d(a(h(t,i),!0),{...i,skipEscape:!0})):"object"==typeof t&&(t=d(a(t,!0),{...i,skipEscape:!0})),e.toLowerCase()===t.toLowerCase()},serialize:d,parse:h};e.exports=m,e.exports.default=m,e.exports.fastUri=m},8416:(e,t,i)=>{"use strict";var r=i(484),s=i(7902),o=i(9714),n=i(6010);function a(e,t){if(r.isSeq(e))for(let i=0;i<e.items.length;++i){let n=e.items[i];if(!r.isPair(n)){if(r.isMap(n)){n.items.length>1&&t("Each pair must have its own sequence indicator");const e=n.items[0]||new s.Pair(new o.Scalar(null));if(n.commentBefore&&(e.key.commentBefore=e.key.commentBefore?`${n.commentBefore}\n${e.key.commentBefore}`:n.commentBefore),n.comment){const t=e.value??e.key;t.comment=t.comment?`${n.comment}\n${t.comment}`:n.comment}n=e}e.items[i]=r.isPair(n)?n:new s.Pair(n)}}else t("Expected a sequence for this tag");return e}function p(e,t,i){const{replacer:r}=i,o=new n.YAMLSeq(e);o.tag="tag:yaml.org,2002:pairs";let a=0;if(t&&Symbol.iterator in Object(t))for(let e of t){let n,p;if("function"==typeof r&&(e=r.call(t,String(a++),e)),Array.isArray(e)){if(2!==e.length)throw new TypeError(`Expected [key, value] tuple: ${e}`);n=e[0],p=e[1]}else if(e&&e instanceof Object){const t=Object.keys(e);if(1!==t.length)throw new TypeError(`Expected tuple with one key, not ${t.length} keys`);n=t[0],p=e[n]}else n=e;o.items.push(s.createPair(n,p,i))}return o}const c={collection:"seq",default:!1,tag:"tag:yaml.org,2002:pairs",resolve:a,createNode:p};t.createPairs=p,t.pairs=c,t.resolvePairs=a},8427:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(749),o={keyword:"contains",type:"array",schemaType:["object","boolean"],before:"uniqueItems",trackErrors:!0,error:{message:({params:{min:e,max:t}})=>void 0===t?r.str`must contain at least ${e} valid item(s)`:r.str`must contain at least ${e} and no more than ${t} valid item(s)`,params:({params:{min:e,max:t}})=>void 0===t?r._`{minContains: ${e}}`:r._`{minContains: ${e}, maxContains: ${t}}`},code(e){const{gen:t,schema:i,parentSchema:o,data:n,it:a}=e;let p,c;const{minContains:d,maxContains:u}=o;a.opts.next?(p=void 0===d?1:d,c=u):p=1;const l=t.const("len",r._`${n}.length`);if(e.setParams({min:p,max:c}),void 0===c&&0===p)return void(0,s.checkStrictMode)(a,'"minContains" == 0 without "maxContains": "contains" keyword ignored');if(void 0!==c&&p>c)return(0,s.checkStrictMode)(a,'"minContains" > "maxContains" is always invalid'),void e.fail();if((0,s.alwaysValidSchema)(a,i)){let t=r._`${l} >= ${p}`;return void 0!==c&&(t=r._`${t} && ${l} <= ${c}`),void e.pass(t)}a.items=!0;const h=t.name("valid");function m(){const e=t.name("_valid"),i=t.let("count",0);f(e,(()=>t.if(e,(()=>function(e){t.code(r._`${e}++`),void 0===c?t.if(r._`${e} >= ${p}`,(()=>t.assign(h,!0).break())):(t.if(r._`${e} > ${c}`,(()=>t.assign(h,!1).break())),1===p?t.assign(h,!0):t.if(r._`${e} >= ${p}`,(()=>t.assign(h,!0))))}(i)))))}function f(i,r){t.forRange("i",0,l,(t=>{e.subschema({keyword:"contains",dataProp:t,dataPropType:s.Type.Num,compositeRule:!0},i),r()}))}void 0===c&&1===p?f(h,(()=>t.if(h,(()=>t.break())))):0===p?(t.let(h,!0),void 0!==c&&t.if(r._`${n}.length > 0`,m)):(t.let(h,!1),m()),e.result(h,(()=>e.reset()))}};t.default=o},8433:e=>{"use strict";function t(e){return null==e}e.exports.isNothing=t,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:t(e)?[]:[e]},e.exports.repeat=function(e,t){var i,r="";for(i=0;i<t;i+=1)r+=e;return r},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,t){var i,r,s,o;if(t)for(i=0,r=(o=Object.keys(t)).length;i<r;i+=1)e[s=o[i]]=t[s];return e}},8523:(e,t,i)=>{"use strict";var r=i(3334),s=i(6055),o=i(1919),n=i(8531),a=i(5132),p=i(988),c=i(2891);const d=[r.map,o.seq,n.string,s.nullTag,a.boolTag,c.intOct,c.int,c.intHex,p.floatNaN,p.floatExp,p.float];t.schema=d},8531:(e,t,i)=>{"use strict";var r=i(7180);const s={identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:e=>e,stringify:(e,t,i,s)=>(t=Object.assign({actualString:!0},t),r.stringifyString(e,t,i,s))};t.string=s},8538:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(749),s={keyword:"allOf",schemaType:"array",code(e){const{gen:t,schema:i,it:s}=e;if(!Array.isArray(i))throw new Error("ajv implementation error");const o=t.name("valid");i.forEach(((t,i)=>{if((0,r.alwaysValidSchema)(s,t))return;const n=e.subschema({keyword:"allOf",schemaProp:i},o);e.ok(o),e.mergeEvaluated(n)}))}};t.default=s},8543:(e,t,i)=>{"use strict";var r=i(4441),s=Array.prototype.slice,o=["name","message","stack"],n=["name","message","description","number","code","fileName","lineNumber","columnNumber","sourceURL","line","column","stack"];function a(t){return function(i,r,o,n){var a=[],m="";"string"==typeof i?(a=s.call(arguments),i=r=void 0):"string"==typeof r?(a=s.call(arguments,1),r=void 0):"string"==typeof o&&(a=s.call(arguments,2)),a.length>0&&(m=e.exports.formatter.apply(null,a)),i&&i.message&&(m+=(m?" \n":"")+i.message);var f,y,g,x=new t(m);return function(e,t){var i,r;!function(e){if(!h)return!1;var t=Object.getOwnPropertyDescriptor(e,"stack");return!!t&&"function"==typeof t.get}(e)?e.stack=t?u(e.stack,t.stack):l(e.stack):t?function(e,t){var i=Object.getOwnPropertyDescriptor(e,"stack");Object.defineProperty(e,"stack",{get:function(){return u(i.get.apply(e),t.stack)},enumerable:!1,configurable:!0})}(e,t):(i=e,r=Object.getOwnPropertyDescriptor(i,"stack"),Object.defineProperty(i,"stack",{get:function(){return l(r.get.apply(i))},enumerable:!1,configurable:!0}))}(f=x,y=i),p(f,y),(g=x).toJSON=c,g.inspect=d,p(x,r),x}}function p(e,t){if(t&&"object"==typeof t)for(var i=Object.keys(t),r=0;r<i.length;r++){var s=i[r];if(!(o.indexOf(s)>=0))try{e[s]=t[s]}catch(e){}}}function c(){var e={},t=Object.keys(this);t=t.concat(n);for(var i=0;i<t.length;i++){var r=t[i],s=this[r],o=typeof s;"undefined"!==o&&"function"!==o&&(e[r]=s)}return e}function d(){return JSON.stringify(this,null,2).replace(/\\n/g,"\n")}function u(e,t){return(e=l(e))&&t?e+"\n\n"+t:e||t}function l(e){if(e){var t=e.split("\n");if(t.length<2)return e;for(var i=0;i<t.length;i++)if(t[i].indexOf("onoFactory")>=0)return t.splice(i,1),t.join("\n");return e}}e.exports=a(Error),e.exports.error=a(Error),e.exports.eval=a(EvalError),e.exports.range=a(RangeError),e.exports.reference=a(ReferenceError),e.exports.syntax=a(SyntaxError),e.exports.type=a(TypeError),e.exports.uri=a(URIError),e.exports.formatter=r;var h=!(!Object.getOwnPropertyDescriptor||!Object.defineProperty||"undefined"!=typeof navigator&&/Android/.test(navigator.userAgent))},8575:(e,t,i)=>{"use strict";var r=i(3479);e.exports=new r({explicit:[i(1292),i(9068),i(6449)]})},8582:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(2518)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},8597:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(1152),s=i(9942),o=i(3202);t.default=function(e,t,i){if(r.default.randomUUID&&!t&&!e)return r.default.randomUUID();const n=(e=e||{}).random??e.rng?.()??(0,s.default)();if(n.length<16)throw new Error("Random bytes length must be >= 16");if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){if((i=i||0)<0||i+16>t.length)throw new RangeError(`UUID byte range ${i}:${i+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[i+e]=n[e];return t}return(0,o.unsafeStringify)(n)}},8611:e=>{"use strict";e.exports=require("http")},8627:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateSchemaDeps=t.validatePropertyDeps=t.error=void 0;const r=i(6675),s=i(749),o=i(2883);t.error={message:({params:{property:e,depsCount:t,deps:i}})=>{const s=1===t?"property":"properties";return r.str`must have ${s} ${i} when property ${e} is present`},params:({params:{property:e,depsCount:t,deps:i,missingProperty:s}})=>r._`{property: ${e},
    missingProperty: ${s},
    depsCount: ${t},
    deps: ${i}}`};const n={keyword:"dependencies",type:"object",schemaType:"object",error:t.error,code(e){const[t,i]=function({schema:e}){const t={},i={};for(const r in e)"__proto__"!==r&&((Array.isArray(e[r])?t:i)[r]=e[r]);return[t,i]}(e);a(e,t),p(e,i)}};function a(e,t=e.schema){const{gen:i,data:s,it:n}=e;if(0===Object.keys(t).length)return;const a=i.let("missing");for(const p in t){const c=t[p];if(0===c.length)continue;const d=(0,o.propertyInData)(i,s,p,n.opts.ownProperties);e.setParams({property:p,depsCount:c.length,deps:c.join(", ")}),n.allErrors?i.if(d,(()=>{for(const t of c)(0,o.checkReportMissingProp)(e,t)})):(i.if(r._`${d} && (${(0,o.checkMissingProp)(e,c,a)})`),(0,o.reportMissingProp)(e,a),i.else())}}function p(e,t=e.schema){const{gen:i,data:r,keyword:n,it:a}=e,p=i.name("valid");for(const c in t)(0,s.alwaysValidSchema)(a,t[c])||(i.if((0,o.propertyInData)(i,r,c,a.opts.ownProperties),(()=>{const t=e.subschema({keyword:n,schemaProp:c},p);e.mergeValidEvaluated(t,p)}),(()=>i.var(p,!0))),e.ok(p))}t.validatePropertyDeps=a,t.validateSchemaDeps=p,t.default=n},8636:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},8644:(e,t,i)=>{"use strict";var r=i(9378);t.flowIndentCheck=function(e,t,i){if("flow-collection"===t?.type){const s=t.end[0];s.indent!==e||"]"!==s.source&&"}"!==s.source||!r.containsNewline(t)||i(s,"BAD_INDENT","Flow end indicator should be more indented than parent",!0)}}},8648:e=>{"use strict";e.exports="undefined"!=typeof Reflect&&Reflect.getPrototypeOf||null},8673:(e,t,i)=>{"use strict";var r=i(484),s=i(9125);const o={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"};class n{constructor(e,t){this.docStart=null,this.docEnd=!1,this.yaml=Object.assign({},n.defaultYaml,e),this.tags=Object.assign({},n.defaultTags,t)}clone(){const e=new n(this.yaml,this.tags);return e.docStart=this.docStart,e}atDocument(){const e=new n(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=!0;break;case"1.2":this.atNextDocument=!1,this.yaml={explicit:n.defaultYaml.explicit,version:"1.2"},this.tags=Object.assign({},n.defaultTags)}return e}add(e,t){this.atNextDocument&&(this.yaml={explicit:n.defaultYaml.explicit,version:"1.1"},this.tags=Object.assign({},n.defaultTags),this.atNextDocument=!1);const i=e.trim().split(/[ \t]+/),r=i.shift();switch(r){case"%TAG":{if(2!==i.length&&(t(0,"%TAG directive should contain exactly two parts"),i.length<2))return!1;const[e,r]=i;return this.tags[e]=r,!0}case"%YAML":{if(this.yaml.explicit=!0,1!==i.length)return t(0,"%YAML directive should contain exactly one part"),!1;const[e]=i;return"1.1"===e||"1.2"===e?(this.yaml.version=e,!0):(t(6,`Unsupported YAML version ${e}`,/^\d+\.\d+$/.test(e)),!1)}default:return t(0,`Unknown directive ${r}`,!0),!1}}tagName(e,t){if("!"===e)return"!";if("!"!==e[0])return t(`Not a valid tag: ${e}`),null;if("<"===e[1]){const i=e.slice(2,-1);return"!"===i||"!!"===i?(t(`Verbatim tags aren't resolved, so ${e} is invalid.`),null):(">"!==e[e.length-1]&&t("Verbatim tags must end with a >"),i)}const[,i,r]=e.match(/^(.*!)([^!]*)$/s);r||t(`The ${e} tag has no suffix`);const s=this.tags[i];if(s)try{return s+decodeURIComponent(r)}catch(e){return t(String(e)),null}return"!"===i?e:(t(`Could not resolve tag: ${e}`),null)}tagString(e){for(const[t,i]of Object.entries(this.tags))if(e.startsWith(i))return t+e.substring(i.length).replace(/[!,[\]{}]/g,(e=>o[e]));return"!"===e[0]?e:`!<${e}>`}toString(e){const t=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[],i=Object.entries(this.tags);let o;if(e&&i.length>0&&r.isNode(e.contents)){const t={};s.visit(e.contents,((e,i)=>{r.isNode(i)&&i.tag&&(t[i.tag]=!0)})),o=Object.keys(t)}else o=[];for(const[r,s]of i)"!!"===r&&"tag:yaml.org,2002:"===s||e&&!o.some((e=>e.startsWith(s)))||t.push(`%TAG ${r} ${s}`);return t.join("\n")}}n.defaultYaml={explicit:!1,version:"1.2"},n.defaultTags={"!!":"tag:yaml.org,2002:"},t.Directives=n},8686:(e,t,i)=>{"use strict";var r;try{r=i(181).Buffer}catch(e){}var s=i(8300),o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new s("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,i,r=0,s=e.length,n=o;for(i=0;i<s;i++)if(!((t=n.indexOf(e.charAt(i)))>64)){if(t<0)return!1;r+=6}return r%8==0},construct:function(e){var t,i,s=e.replace(/[\r\n=]/g,""),n=s.length,a=o,p=0,c=[];for(t=0;t<n;t++)t%4==0&&t&&(c.push(p>>16&255),c.push(p>>8&255),c.push(255&p)),p=p<<6|a.indexOf(s.charAt(t));return 0==(i=n%4*6)?(c.push(p>>16&255),c.push(p>>8&255),c.push(255&p)):18===i?(c.push(p>>10&255),c.push(p>>2&255)):12===i&&c.push(p>>4&255),r?r.from?r.from(c):new r(c):c},predicate:function(e){return r&&r.isBuffer(e)},represent:function(e){var t,i,r="",s=0,n=e.length,a=o;for(t=0;t<n;t++)t%3==0&&t&&(r+=a[s>>18&63],r+=a[s>>12&63],r+=a[s>>6&63],r+=a[63&s]),s=(s<<8)+e[t];return 0==(i=n%3)?(r+=a[s>>18&63],r+=a[s>>12&63],r+=a[s>>6&63],r+=a[63&s]):2===i?(r+=a[s>>10&63],r+=a[s>>4&63],r+=a[s<<2&63],r+=a[64]):1===i&&(r+=a[s>>2&63],r+=a[s<<4&63],r+=a[64],r+=a[64]),r}})},8692:(e,t,i)=>{"use strict";var r=i(8543),s=i(1893),o=i(1215);e.exports=function(e,t,i){try{e=s.stripHash(e);var n=t._add(e),a={url:e,extension:s.getExtension(e)};return function(e,t){return new Promise((function(i,s){var n=o.all(t.resolve);n=o.filter(n,"canRead",e),o.sort(n),o.run(n,"read",e).then(i,(function(t){!t||t instanceof SyntaxError?s(r.syntax('Unable to resolve $ref pointer "%s"',e.url)):s(t)}))}))}(a,i).then((function(e){return n.pathType=e.plugin.name,a.data=e.result,function(e,t){return new Promise((function(i,s){var n=o.all(t.parse),a=o.filter(n,"canParse",e),p=a.length>0?a:n;o.sort(p),o.run(p,"parse",e).then((function(t){!t.plugin.allowEmpty&&function(e){return void 0===e||"object"==typeof e&&0===Object.keys(e).length||"string"==typeof e&&0===e.trim().length||Buffer.isBuffer(e)&&0===e.length}(t.result)?s(r.syntax('Error parsing "%s" as %s. \nParsed value is empty',e.url,t.plugin.name)):i(t)}),(function(t){t?(t=t instanceof Error?t:new Error(t),s(r.syntax(t,"Error parsing %s",e.url))):s(r.syntax("Unable to parse %s",e.url))}))}))}(a,i)})).then((function(e){return n.value=e.result,e.result}))}catch(e){return Promise.reject(e)}}},8763:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=a(i(7906)),c=a(i(270)),d=n(i(6385));function u(e,t,i,r,s,o,n,a){const d=null===t?e:e[t];if(d&&"object"==typeof d&&!ArrayBuffer.isView(d))if(p.default.isAllowed$Ref(d))l(e,t,i,r,s,o,n,a);else{const e=Object.keys(d).sort(((e,t)=>"definitions"===e||"$defs"===e?-1:"definitions"===t||"$defs"===t?1:e.length-t.length));for(const t of e){const e=c.default.join(i,t),h=c.default.join(r,t),m=d[t];p.default.isAllowed$Ref(m)?l(d,t,i,h,s,o,n,a):u(d,t,e,h,s,o,n,a)}}}function l(e,t,i,r,s,o,n,a){const l=null===t?e:e[t],h=d.resolve(i,l.$ref),m=n._resolve(h,r,a);if(null===m)return;const f=c.default.parse(r).length,y=d.stripHash(m.path),g=d.getHash(m.path),x=y!==n._root$Ref.path,b=p.default.isExtended$Ref(l);s+=m.indirections;const v=function(e,t,i){for(const r of e)if(r&&r.parent===t&&r.key===i)return r}(o,e,t);if(v){if(!(f<v.depth||s<v.indirections))return;!function(e,t){const i=e.indexOf(t);e.splice(i,1)}(o,v)}o.push({$ref:l,parent:e,key:t,pathFromRoot:r,depth:f,file:y,hash:g,value:m.value,circular:m.circular,extended:b,external:x,indirections:s}),v&&!x||u(m.value,null,m.path,r,s+1,o,n,a)}t.default=function(e,t){const i=[];u(e,"schema",e.$refs._root$Ref.path+"#","#",0,i,e.$refs,t),function(e){let t,i,r;e.sort(((e,t)=>{if(e.file!==t.file)return e.file<t.file?-1:1;if(e.hash!==t.hash)return e.hash<t.hash?-1:1;if(e.circular!==t.circular)return e.circular?-1:1;if(e.extended!==t.extended)return e.extended?1:-1;if(e.indirections!==t.indirections)return e.indirections-t.indirections;if(e.depth!==t.depth)return e.depth-t.depth;{const i=Math.max(e.pathFromRoot.lastIndexOf("/definitions"),e.pathFromRoot.lastIndexOf("/$defs")),r=Math.max(t.pathFromRoot.lastIndexOf("/definitions"),t.pathFromRoot.lastIndexOf("/$defs"));return i!==r?r-i:e.pathFromRoot.length-t.pathFromRoot.length}}));for(const s of e)s.external?s.file===t&&s.hash===i?s.$ref.$ref=r:s.file===t&&0===s.hash.indexOf(i+"/")?s.$ref.$ref=c.default.join(r,c.default.parse(s.hash.replace(i,"#"))):(t=s.file,i=s.hash,r=s.pathFromRoot,s.$ref=s.parent[s.key]=p.default.dereference(s.$ref,s.value),s.circular&&(s.$ref.$ref=s.pathFromRoot)):s.$ref.$ref=s.hash}(i)}},8798:(e,t,i)=>{var r=i(8051),s=i(9500),o=i(6276);e.exports=function(e,t,i){for(var n=s(e);n.index<(n.keyedList||e).length;)r(e,t,n,(function(e,t){e?i(e,t):0!==Object.keys(n.jobs).length||i(null,n.results)})),n.index++;return o.bind(n,i)}},8801:function(e,t,i){"use strict";var r,s=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),n=0;n<i.length;n++)"default"!==i[n]&&s(t,e,i[n]);return o(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const p=i(7184),c=a(i(7906)),d=n(i(6385)),u=a(i(9983));function l(e,t){let i=Object.keys(e);return(t=Array.isArray(t[0])?t[0]:Array.prototype.slice.call(t)).length>0&&t[0]&&(i=i.filter((i=>t.includes(e[i].pathType)))),i.map((t=>({encoded:t,decoded:"file"===e[t].pathType?d.toFileSystemPath(t,!0):t})))}t.default=class{paths(...e){return l(this._$refs,e.flat()).map((e=>(0,u.default)(e.decoded)))}values(...e){const t=this._$refs;return l(t,e.flat()).reduce(((e,i)=>(e[(0,u.default)(i.decoded)]=t[i.encoded].value,e)),{})}exists(e,t){try{return this._resolve(e,"",t),!0}catch{return!1}}get(e,t){return this._resolve(e,"",t).value}set(e,t){const i=d.resolve(this._root$Ref.path,e),r=d.stripHash(i),s=this._$refs[r];if(!s)throw(0,p.ono)(`Error resolving $ref pointer "${e}". \n"${r}" not found.`);s.set(i,t)}_get$Ref(e){e=d.resolve(this._root$Ref.path,e);const t=d.stripHash(e);return this._$refs[t]}_add(e){const t=d.stripHash(e),i=new c.default(this);return i.path=t,this._$refs[t]=i,this._root$Ref=this._root$Ref||i,i}_resolve(e,t,i){const r=d.resolve(this._root$Ref.path,e),s=d.stripHash(r),o=this._$refs[s];if(!o)throw(0,p.ono)(`Error resolving $ref pointer "${e}". \n"${s}" not found.`);return o.resolve(r,i,e,t)}constructor(){this._$refs={},this.toJSON=this.values,this.circular=!1,this._$refs={},this._root$Ref=null}}},8819:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r={keyword:"anyOf",schemaType:"array",trackErrors:!0,code:i(2883).validateUnion,error:{message:"must match a schema in anyOf"}};t.default=r},8873:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(3596);t.default=function(e){return"string"==typeof e&&r.default.test(e)}},8895:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(9526),s=i(6675),o=i(749),n=i(5472),a={keyword:"uniqueItems",type:"array",schemaType:"boolean",$data:!0,error:{message:({params:{i:e,j:t}})=>s.str`must NOT have duplicate items (items ## ${t} and ${e} are identical)`,params:({params:{i:e,j:t}})=>s._`{i: ${e}, j: ${t}}`},code(e){const{gen:t,data:i,$data:a,schema:p,parentSchema:c,schemaCode:d,it:u}=e;if(!a&&!p)return;const l=t.let("valid"),h=c.items?(0,r.getSchemaTypes)(c.items):[];function m(o,n){const a=t.name("item"),p=(0,r.checkDataTypes)(h,a,u.opts.strictNumbers,r.DataType.Wrong),c=t.const("indices",s._`{}`);t.for(s._`;${o}--;`,(()=>{t.let(a,s._`${i}[${o}]`),t.if(p,s._`continue`),h.length>1&&t.if(s._`typeof ${a} == "string"`,s._`${a} += "_"`),t.if(s._`typeof ${c}[${a}] == "number"`,(()=>{t.assign(n,s._`${c}[${a}]`),e.error(),t.assign(l,!1).break()})).code(s._`${c}[${a}] = ${o}`)}))}function f(r,a){const p=(0,o.useFunc)(t,n.default),c=t.name("outer");t.label(c).for(s._`;${r}--;`,(()=>t.for(s._`${a} = ${r}; ${a}--;`,(()=>t.if(s._`${p}(${i}[${r}], ${i}[${a}])`,(()=>{e.error(),t.assign(l,!1).break(c)}))))))}e.block$data(l,(function(){const r=t.let("i",s._`${i}.length`),o=t.let("j");e.setParams({i:r,j:o}),t.assign(l,!0),t.if(s._`${r} > 1`,(()=>(h.length>0&&!h.some((e=>"object"===e||"array"===e))?m:f)(r,o)))}),s._`${d} === false`),e.ok(l)}};t.default=a},8898:(e,t,i)=>{"use strict";var r=i(6906),s=i(484),o=i(3732);t.NodeBase=class{constructor(e){Object.defineProperty(this,s.NODE_TYPE,{value:e})}clone(){const e=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return this.range&&(e.range=this.range.slice()),e}toJS(e,{mapAsMap:t,maxAliasCount:i,onAnchor:n,reviver:a}={}){if(!s.isDocument(e))throw new TypeError("A document argument is required");const p={anchors:new Map,doc:e,keep:!0,mapAsMap:!0===t,mapKeyWarned:!1,maxAliasCount:"number"==typeof i?i:100},c=o.toJS(this,"",p);if("function"==typeof n)for(const{count:e,res:t}of p.anchors.values())n(t,e);return"function"==typeof a?r.applyReviver(a,{"":c},"",c):c}}},8949:(e,t,i)=>{"use strict";var r=i(7968),s=i(8543);e.exports={parse:function(e,t){try{return r.safeLoad(e)}catch(e){throw e instanceof Error?e:s(e,e.message)}},stringify:function(e,t,i){try{var o=("string"==typeof i?i.length:i)||2;return r.safeDump(e,{indent:o})}catch(e){throw e instanceof Error?e:s(e,e.message)}}}},8959:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(2524),s=i(3202);t.default=function(e){const t=(i="string"==typeof e?(0,r.default)(e):e,Uint8Array.of((15&i[3])<<4|i[4]>>4&15,(15&i[4])<<4|(240&i[5])>>4,(15&i[5])<<4|15&i[6],i[7],(15&i[1])<<4|(240&i[2])>>4,(15&i[2])<<4|(240&i[3])>>4,16|(240&i[0])>>4,(15&i[0])<<4|(240&i[1])>>4,i[8],i[9],i[10],i[11],i[12],i[13],i[14],i[15]));var i;return"string"==typeof e?(0,s.unsafeStringify)(t):t}},8968:e=>{"use strict";e.exports=Math.floor},9023:e=>{"use strict";e.exports=require("util")},9046:(e,t,i)=>{"use strict";var r=i(1736),s=i(1614),o=i(484),n=i(7902),a=i(3732),p=i(625),c=i(1768),d=i(6261),u=i(6906),l=i(5219),h=i(8673);class m{constructor(e,t,i){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,o.NODE_TYPE,{value:o.DOC});let r=null;"function"==typeof t||Array.isArray(t)?r=t:void 0===i&&t&&(i=t,t=void 0);const s=Object.assign({intAsBigInt:!1,keepSourceTokens:!1,logLevel:"warn",prettyErrors:!0,strict:!0,stringKeys:!1,uniqueKeys:!0,version:"1.2"},i);this.options=s;let{version:n}=s;i?._directives?(this.directives=i._directives.atDocument(),this.directives.yaml.explicit&&(n=this.directives.yaml.version)):this.directives=new h.Directives({version:n}),this.setSchema(n,i),this.contents=void 0===e?null:this.createNode(e,r,i)}clone(){const e=Object.create(m.prototype,{[o.NODE_TYPE]:{value:o.DOC}});return e.commentBefore=this.commentBefore,e.comment=this.comment,e.errors=this.errors.slice(),e.warnings=this.warnings.slice(),e.options=Object.assign({},this.options),this.directives&&(e.directives=this.directives.clone()),e.schema=this.schema.clone(),e.contents=o.isNode(this.contents)?this.contents.clone(e.schema):this.contents,this.range&&(e.range=this.range.slice()),e}add(e){f(this.contents)&&this.contents.add(e)}addIn(e,t){f(this.contents)&&this.contents.addIn(e,t)}createAlias(e,t){if(!e.anchor){const i=d.anchorNames(this);e.anchor=!t||i.has(t)?d.findNewAnchor(t||"a",i):t}return new r.Alias(e.anchor)}createNode(e,t,i){let r;if("function"==typeof t)e=t.call({"":e},"",e),r=t;else if(Array.isArray(t)){const e=e=>"number"==typeof e||e instanceof String||e instanceof Number,i=t.filter(e).map(String);i.length>0&&(t=t.concat(i)),r=t}else void 0===i&&t&&(i=t,t=void 0);const{aliasDuplicateObjects:s,anchorPrefix:n,flow:a,keepUndefined:p,onTagObj:c,tag:u}=i??{},{onAnchor:h,setAnchors:m,sourceObjects:f}=d.createNodeAnchors(this,n||"a"),y={aliasDuplicateObjects:s??!0,keepUndefined:p??!1,onAnchor:h,onTagObj:c,replacer:r,schema:this.schema,sourceObjects:f},g=l.createNode(e,u,y);return a&&o.isCollection(g)&&(g.flow=!0),m(),g}createPair(e,t,i={}){const r=this.createNode(e,null,i),s=this.createNode(t,null,i);return new n.Pair(r,s)}delete(e){return!!f(this.contents)&&this.contents.delete(e)}deleteIn(e){return s.isEmptyPath(e)?null!=this.contents&&(this.contents=null,!0):!!f(this.contents)&&this.contents.deleteIn(e)}get(e,t){return o.isCollection(this.contents)?this.contents.get(e,t):void 0}getIn(e,t){return s.isEmptyPath(e)?!t&&o.isScalar(this.contents)?this.contents.value:this.contents:o.isCollection(this.contents)?this.contents.getIn(e,t):void 0}has(e){return!!o.isCollection(this.contents)&&this.contents.has(e)}hasIn(e){return s.isEmptyPath(e)?void 0!==this.contents:!!o.isCollection(this.contents)&&this.contents.hasIn(e)}set(e,t){null==this.contents?this.contents=s.collectionFromPath(this.schema,[e],t):f(this.contents)&&this.contents.set(e,t)}setIn(e,t){s.isEmptyPath(e)?this.contents=t:null==this.contents?this.contents=s.collectionFromPath(this.schema,Array.from(e),t):f(this.contents)&&this.contents.setIn(e,t)}setSchema(e,t={}){let i;switch("number"==typeof e&&(e=String(e)),e){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new h.Directives({version:"1.1"}),i={resolveKnownTags:!1,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=e:this.directives=new h.Directives({version:e}),i={resolveKnownTags:!0,schema:"core"};break;case null:this.directives&&delete this.directives,i=null;break;default:{const t=JSON.stringify(e);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${t}`)}}if(t.schema instanceof Object)this.schema=t.schema;else{if(!i)throw new Error("With a null YAML version, the { schema: Schema } option is required");this.schema=new p.Schema(Object.assign(i,t))}}toJS({json:e,jsonArg:t,mapAsMap:i,maxAliasCount:r,onAnchor:s,reviver:o}={}){const n={anchors:new Map,doc:this,keep:!e,mapAsMap:!0===i,mapKeyWarned:!1,maxAliasCount:"number"==typeof r?r:100},p=a.toJS(this.contents,t??"",n);if("function"==typeof s)for(const{count:e,res:t}of n.anchors.values())s(t,e);return"function"==typeof o?u.applyReviver(o,{"":p},"",p):p}toJSON(e,t){return this.toJS({json:!0,jsonArg:e,mapAsMap:!1,onAnchor:t})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){const t=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${t}`)}return c.stringifyDocument(this,e)}}function f(e){if(o.isCollection(e))return!0;throw new Error("Expected a YAML collection as document contents")}t.Document=m},9068:(e,t,i)=>{"use strict";var r=i(8300);e.exports=new r("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},9084:e=>{"use strict";e.exports={order:100,allowEmpty:!0,canParse:".json",parse:function(e){return new Promise((function(t,i){var r=e.data;Buffer.isBuffer(r)&&(r=r.toString()),"string"==typeof r?0===r.trim().length?t(void 0):t(JSON.parse(r)):t(r)}))}}},9092:(e,t,i)=>{"use strict";var r=i(1333);e.exports=function(){return r()&&!!Symbol.toStringTag}},9094:(e,t,i)=>{"use strict";var r=i(484),s=i(9714),o=i(4070),n=i(7571);t.composeScalar=function(e,t,i,a){const{value:p,type:c,comment:d,range:u}="block-scalar"===t.type?o.resolveBlockScalar(e,t,a):n.resolveFlowScalar(t,e.options.strict,a),l=i?e.directives.tagName(i.source,(e=>a(i,"TAG_RESOLVE_FAILED",e))):null;let h,m;h=e.options.stringKeys&&e.atKey?e.schema[r.SCALAR]:l?function(e,t,i,s,o){if("!"===i)return e[r.SCALAR];const n=[];for(const t of e.tags)if(!t.collection&&t.tag===i){if(!t.default||!t.test)return t;n.push(t)}for(const e of n)if(e.test?.test(t))return e;const a=e.knownTags[i];return a&&!a.collection?(e.tags.push(Object.assign({},a,{default:!1,test:void 0})),a):(o(s,"TAG_RESOLVE_FAILED",`Unresolved tag: ${i}`,"tag:yaml.org,2002:str"!==i),e[r.SCALAR])}(e.schema,p,l,i,a):"scalar"===t.type?function({atKey:e,directives:t,schema:i},s,o,n){const a=i.tags.find((t=>(!0===t.default||e&&"key"===t.default)&&t.test?.test(s)))||i[r.SCALAR];if(i.compat){const e=i.compat.find((e=>e.default&&e.test?.test(s)))??i[r.SCALAR];a.tag!==e.tag&&n(o,"TAG_RESOLVE_FAILED",`Value may be parsed as either ${t.tagString(a.tag)} or ${t.tagString(e.tag)}`,!0)}return a}(e,p,t,a):e.schema[r.SCALAR];try{const o=h.resolve(p,(e=>a(i??t,"TAG_RESOLVE_FAILED",e)),e.options);m=r.isScalar(o)?o:new s.Scalar(o)}catch(e){const r=e instanceof Error?e.message:String(e);a(i??t,"TAG_RESOLVE_FAILED",r),m=new s.Scalar(p)}return m.range=u,m.source=p,c&&(m.type=c),l&&(m.tag=l),h.format&&(m.format=h.format),d&&(m.comment=d),m}},9112:(e,t,i)=>{"use strict";var r=i(5141),s=i(7808),o=i(5970);t.createScalarToken=r.createScalarToken,t.resolveAsScalar=r.resolveAsScalar,t.setScalarValue=r.setScalarValue,t.stringify=s.stringify,t.visit=o.visit,t.BOM="\ufeff",t.DOCUMENT="",t.FLOW_END="",t.SCALAR="",t.isCollection=e=>!!e&&"items"in e,t.isScalar=e=>!!e&&("scalar"===e.type||"single-quoted-scalar"===e.type||"double-quoted-scalar"===e.type||"block-scalar"===e.type),t.prettyToken=function(e){switch(e){case"\ufeff":return"<BOM>";case"":return"<DOC>";case"":return"<FLOW_END>";case"":return"<SCALAR>";default:return JSON.stringify(e)}},t.tokenType=function(e){switch(e){case"\ufeff":return"byte-order-mark";case"":return"doc-mode";case"":return"flow-error-end";case"":return"scalar";case"---":return"doc-start";case"...":return"doc-end";case"":case"\n":case"\r\n":return"newline";case"-":return"seq-item-ind";case"?":return"explicit-key-ind";case":":return"map-value-ind";case"{":return"flow-map-start";case"}":return"flow-map-end";case"[":return"flow-seq-start";case"]":return"flow-seq-end";case",":return"comma"}switch(e[0]){case" ":case"\t":return"space";case"#":return"comment";case"%":return"directive-line";case"*":return"alias";case"&":return"anchor";case"!":return"tag";case"'":return"single-quoted-scalar";case'"':return"double-quoted-scalar";case"|":case">":return"block-scalar-header"}return null}},9125:(e,t,i)=>{"use strict";var r=i(484);const s=Symbol("break visit"),o=Symbol("skip children"),n=Symbol("remove node");function a(e,t){const i=u(t);r.isDocument(e)?p(null,e.contents,i,Object.freeze([e]))===n&&(e.contents=null):p(null,e,i,Object.freeze([]))}function p(e,t,i,o){const a=l(e,t,i,o);if(r.isNode(a)||r.isPair(a))return h(e,o,a),p(e,a,i,o);if("symbol"!=typeof a)if(r.isCollection(t)){o=Object.freeze(o.concat(t));for(let e=0;e<t.items.length;++e){const r=p(e,t.items[e],i,o);if("number"==typeof r)e=r-1;else{if(r===s)return s;r===n&&(t.items.splice(e,1),e-=1)}}}else if(r.isPair(t)){o=Object.freeze(o.concat(t));const e=p("key",t.key,i,o);if(e===s)return s;e===n&&(t.key=null);const r=p("value",t.value,i,o);if(r===s)return s;r===n&&(t.value=null)}return a}async function c(e,t){const i=u(t);r.isDocument(e)?await d(null,e.contents,i,Object.freeze([e]))===n&&(e.contents=null):await d(null,e,i,Object.freeze([]))}async function d(e,t,i,o){const a=await l(e,t,i,o);if(r.isNode(a)||r.isPair(a))return h(e,o,a),d(e,a,i,o);if("symbol"!=typeof a)if(r.isCollection(t)){o=Object.freeze(o.concat(t));for(let e=0;e<t.items.length;++e){const r=await d(e,t.items[e],i,o);if("number"==typeof r)e=r-1;else{if(r===s)return s;r===n&&(t.items.splice(e,1),e-=1)}}}else if(r.isPair(t)){o=Object.freeze(o.concat(t));const e=await d("key",t.key,i,o);if(e===s)return s;e===n&&(t.key=null);const r=await d("value",t.value,i,o);if(r===s)return s;r===n&&(t.value=null)}return a}function u(e){return"object"==typeof e&&(e.Collection||e.Node||e.Value)?Object.assign({Alias:e.Node,Map:e.Node,Scalar:e.Node,Seq:e.Node},e.Value&&{Map:e.Value,Scalar:e.Value,Seq:e.Value},e.Collection&&{Map:e.Collection,Seq:e.Collection},e):e}function l(e,t,i,s){return"function"==typeof i?i(e,t,s):r.isMap(t)?i.Map?.(e,t,s):r.isSeq(t)?i.Seq?.(e,t,s):r.isPair(t)?i.Pair?.(e,t,s):r.isScalar(t)?i.Scalar?.(e,t,s):r.isAlias(t)?i.Alias?.(e,t,s):void 0}function h(e,t,i){const s=t[t.length-1];if(r.isCollection(s))s.items[e]=i;else if(r.isPair(s))"key"===e?s.key=i:s.value=i;else{if(!r.isDocument(s)){const e=r.isAlias(s)?"alias":"scalar";throw new Error(`Cannot replace node with ${e} parent`)}s.contents=i}}a.BREAK=s,a.SKIP=o,a.REMOVE=n,c.BREAK=s,c.SKIP=o,c.REMOVE=n,t.visit=a,t.visitAsync=c},9138:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(2434)),o=e=>e.addKeyword((0,s.default)());t.default=o,e.exports=o},9139:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateAdditionalItems=void 0;const r=i(6675),s=i(749),o={keyword:"additionalItems",type:"array",schemaType:["boolean","object"],before:"uniqueItems",error:{message:({params:{len:e}})=>r.str`must NOT have more than ${e} items`,params:({params:{len:e}})=>r._`{limit: ${e}}`},code(e){const{parentSchema:t,it:i}=e,{items:r}=t;Array.isArray(r)?n(e,r):(0,s.checkStrictMode)(i,'"additionalItems" is ignored when "items" is not an array of schemas')}};function n(e,t){const{gen:i,schema:o,data:n,keyword:a,it:p}=e;p.items=!0;const c=i.const("len",r._`${n}.length`);if(!1===o)e.setParams({len:t.length}),e.pass(r._`${c} <= ${t.length}`);else if("object"==typeof o&&!(0,s.alwaysValidSchema)(p,o)){const o=i.var("valid",r._`${c} <= ${t.length}`);i.if((0,r.not)(o),(()=>function(o){i.forRange("i",t.length,c,(t=>{e.subschema({keyword:a,dataProp:t,dataPropType:s.Type.Num},o),p.allErrors||i.if((0,r.not)(o),(()=>i.break()))}))}(o))),e.ok(o)}}t.validateAdditionalItems=n,t.default=o},9154:e=>{"use strict";e.exports=require("vm")},9198:(e,t,i)=>{"use strict";var r=i(5388);e.exports=new r("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"})},9243:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6675),s=i(2654),o={message:({params:{schemaProp:e}})=>e?r.str`should match case "${e}" schema`:r.str`should match default case schema`,params:({params:{schemaProp:e}})=>e?r._`{failingCase: ${e}}`:r._`{failingDefault: true}`};function n(e){const t=(0,s.metaSchemaRef)(e);return[{keyword:"select",schemaType:["string","number","boolean","null"],$data:!0,error:o,dependencies:["selectCases"],code(e){const{gen:t,schemaCode:i,parentSchema:s}=e;e.block$data(r.nil,(()=>{const o=t.let("valid",!0),n=t.name("_valid"),a=t.const("value",r._`${i} === null ? "null" : ${i}`);t.if(!1);for(const i in s.selectCases){e.setParams({schemaProp:i}),t.elseIf(r._`"" + ${a} == ${i}`);const s=e.subschema({keyword:"selectCases",schemaProp:i},n);e.mergeEvaluated(s,r.Name),t.assign(o,n)}if(t.else(),void 0!==s.selectDefault){e.setParams({schemaProp:void 0});const i=e.subschema({keyword:"selectDefault"},n);e.mergeEvaluated(i,r.Name),t.assign(o,n)}t.endIf(),e.pass(o)}))}},{keyword:"selectCases",dependencies:["select"],metaSchema:{type:"object",additionalProperties:t}},{keyword:"selectDefault",dependencies:["select","selectCases"],metaSchema:t}]}t.default=n,e.exports=n},9290:e=>{"use strict";e.exports=RangeError},9311:(e,t,i)=>{"use strict";var r;try{r=i(1206)}catch(e){"undefined"!=typeof window&&(r=window.esprima)}var s=i(8300);e.exports=new s("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:function(e){if(null===e)return!1;try{var t="("+e+")",i=r.parse(t,{range:!0});return"Program"===i.type&&1===i.body.length&&"ExpressionStatement"===i.body[0].type&&("ArrowFunctionExpression"===i.body[0].expression.type||"FunctionExpression"===i.body[0].expression.type)}catch(e){return!1}},construct:function(e){var t,i="("+e+")",s=r.parse(i,{range:!0}),o=[];if("Program"!==s.type||1!==s.body.length||"ExpressionStatement"!==s.body[0].type||"ArrowFunctionExpression"!==s.body[0].expression.type&&"FunctionExpression"!==s.body[0].expression.type)throw new Error("Failed to resolve function");return s.body[0].expression.params.forEach((function(e){o.push(e.name)})),t=s.body[0].expression.body.range,"BlockStatement"===s.body[0].expression.body.type?new Function(o,i.slice(t[0]+1,t[1]-1)):new Function(o,"return "+i.slice(t[0],t[1]))},predicate:function(e){return"[object Function]"===Object.prototype.toString.call(e)},represent:function(e){return e.toString()}})},9329:(e,t,i)=>{"use strict";const r=i(737),s=i(6982),o=i(7016),n=i(6504),a=i(8611),p=i(5692),c=i(9023),d=i(3164),u=i(3106),l=i(2203),h=i(4434);function m(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}const f=m(r),y=m(s),g=m(o),x=m(n),b=m(a),v=m(p),w=m(c),I=m(d),k=m(u),P=m(l);function j(e,t){return function(){return e.apply(t,arguments)}}const{toString:A}=Object.prototype,{getPrototypeOf:O}=Object,{iterator:E,toStringTag:S}=Symbol,D=(T=Object.create(null),e=>{const t=A.call(e);return T[t]||(T[t]=t.slice(8,-1).toLowerCase())});var T;const q=e=>(e=e.toLowerCase(),t=>D(t)===e),C=e=>t=>typeof t===e,{isArray:$}=Array,_=C("undefined"),R=q("ArrayBuffer"),N=C("string"),U=C("function"),F=C("number"),L=e=>null!==e&&"object"==typeof e,V=e=>{if("object"!==D(e))return!1;const t=O(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||S in e||E in e)},M=q("Date"),z=q("File"),B=q("Blob"),K=q("FileList"),H=q("URLSearchParams"),[Z,J,G,W]=["ReadableStream","Request","Response","Headers"].map(q);function Y(e,t,{allOwnKeys:i=!1}={}){if(null==e)return;let r,s;if("object"!=typeof e&&(e=[e]),$(e))for(r=0,s=e.length;r<s;r++)t.call(null,e[r],r,e);else{const s=i?Object.getOwnPropertyNames(e):Object.keys(e),o=s.length;let n;for(r=0;r<o;r++)n=s[r],t.call(null,e[n],n,e)}}function X(e,t){t=t.toLowerCase();const i=Object.keys(e);let r,s=i.length;for(;s-- >0;)if(r=i[s],t===r.toLowerCase())return r;return null}const Q="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,ee=e=>!_(e)&&e!==Q,te=(ie="undefined"!=typeof Uint8Array&&O(Uint8Array),e=>ie&&e instanceof ie);var ie;const re=q("HTMLFormElement"),se=(({hasOwnProperty:e})=>(t,i)=>e.call(t,i))(Object.prototype),oe=q("RegExp"),ne=(e,t)=>{const i=Object.getOwnPropertyDescriptors(e),r={};Y(i,((i,s)=>{let o;!1!==(o=t(i,s,e))&&(r[s]=o||i)})),Object.defineProperties(e,r)},ae=q("AsyncFunction"),pe=(ce="function"==typeof setImmediate,de=U(Q.postMessage),ce?setImmediate:de?(ue=`axios@${Math.random()}`,le=[],Q.addEventListener("message",(({source:e,data:t})=>{e===Q&&t===ue&&le.length&&le.shift()()}),!1),e=>{le.push(e),Q.postMessage(ue,"*")}):e=>setTimeout(e));var ce,de,ue,le;const he="undefined"!=typeof queueMicrotask?queueMicrotask.bind(Q):"undefined"!=typeof process&&process.nextTick||pe,me={isArray:$,isArrayBuffer:R,isBuffer:function(e){return null!==e&&!_(e)&&null!==e.constructor&&!_(e.constructor)&&U(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&("function"==typeof FormData&&e instanceof FormData||U(e.append)&&("formdata"===(t=D(e))||"object"===t&&U(e.toString)&&"[object FormData]"===e.toString()))},isArrayBufferView:function(e){let t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&R(e.buffer),t},isString:N,isNumber:F,isBoolean:e=>!0===e||!1===e,isObject:L,isPlainObject:V,isReadableStream:Z,isRequest:J,isResponse:G,isHeaders:W,isUndefined:_,isDate:M,isFile:z,isBlob:B,isRegExp:oe,isFunction:U,isStream:e=>L(e)&&U(e.pipe),isURLSearchParams:H,isTypedArray:te,isFileList:K,forEach:Y,merge:function e(){const{caseless:t}=ee(this)&&this||{},i={},r=(r,s)=>{const o=t&&X(i,s)||s;V(i[o])&&V(r)?i[o]=e(i[o],r):V(r)?i[o]=e({},r):$(r)?i[o]=r.slice():i[o]=r};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&Y(arguments[e],r);return i},extend:(e,t,i,{allOwnKeys:r}={})=>(Y(t,((t,r)=>{i&&U(t)?e[r]=j(t,i):e[r]=t}),{allOwnKeys:r}),e),trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,i,r)=>{e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),i&&Object.assign(e.prototype,i)},toFlatObject:(e,t,i,r)=>{let s,o,n;const a={};if(t=t||{},null==e)return t;do{for(s=Object.getOwnPropertyNames(e),o=s.length;o-- >0;)n=s[o],r&&!r(n,e,t)||a[n]||(t[n]=e[n],a[n]=!0);e=!1!==i&&O(e)}while(e&&(!i||i(e,t))&&e!==Object.prototype);return t},kindOf:D,kindOfTest:q,endsWith:(e,t,i)=>{e=String(e),(void 0===i||i>e.length)&&(i=e.length),i-=t.length;const r=e.indexOf(t,i);return-1!==r&&r===i},toArray:e=>{if(!e)return null;if($(e))return e;let t=e.length;if(!F(t))return null;const i=new Array(t);for(;t-- >0;)i[t]=e[t];return i},forEachEntry:(e,t)=>{const i=(e&&e[E]).call(e);let r;for(;(r=i.next())&&!r.done;){const i=r.value;t.call(e,i[0],i[1])}},matchAll:(e,t)=>{let i;const r=[];for(;null!==(i=e.exec(t));)r.push(i);return r},isHTMLForm:re,hasOwnProperty:se,hasOwnProp:se,reduceDescriptors:ne,freezeMethods:e=>{ne(e,((t,i)=>{if(U(e)&&-1!==["arguments","caller","callee"].indexOf(i))return!1;const r=e[i];U(r)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+i+"'")}))}))},toObjectSet:(e,t)=>{const i={},r=e=>{e.forEach((e=>{i[e]=!0}))};return $(e)?r(e):r(String(e).split(t)),i},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(e,t,i){return t.toUpperCase()+i})),noop:()=>{},toFiniteNumber:(e,t)=>null!=e&&Number.isFinite(e=+e)?e:t,findKey:X,global:Q,isContextDefined:ee,isSpecCompliantForm:function(e){return!!(e&&U(e.append)&&"FormData"===e[S]&&e[E])},toJSONObject:e=>{const t=new Array(10),i=(e,r)=>{if(L(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[r]=e;const s=$(e)?[]:{};return Y(e,((e,t)=>{const o=i(e,r+1);!_(o)&&(s[t]=o)})),t[r]=void 0,s}}return e};return i(e,0)},isAsyncFn:ae,isThenable:e=>e&&(L(e)||U(e))&&U(e.then)&&U(e.catch),setImmediate:pe,asap:he,isIterable:e=>null!=e&&U(e[E])};function fe(e,t,i,r,s){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),i&&(this.config=i),r&&(this.request=r),s&&(this.response=s,this.status=s.status?s.status:null)}me.inherits(fe,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:me.toJSONObject(this.config),code:this.code,status:this.status}}});const ye=fe.prototype,ge={};function xe(e){return me.isPlainObject(e)||me.isArray(e)}function be(e){return me.endsWith(e,"[]")?e.slice(0,-2):e}function ve(e,t,i){return e?e.concat(t).map((function(e,t){return e=be(e),!i&&t?"["+e+"]":e})).join(i?".":""):t}["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{ge[e]={value:e}})),Object.defineProperties(fe,ge),Object.defineProperty(ye,"isAxiosError",{value:!0}),fe.from=(e,t,i,r,s,o)=>{const n=Object.create(ye);return me.toFlatObject(e,n,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),fe.call(n,e.message,t,i,r,s),n.cause=e,n.name=e.name,o&&Object.assign(n,o),n};const we=me.toFlatObject(me,{},null,(function(e){return/^is[A-Z]/.test(e)}));function Ie(e,t,i){if(!me.isObject(e))throw new TypeError("target must be an object");t=t||new(f.default||FormData);const r=(i=me.toFlatObject(i,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!me.isUndefined(t[e])}))).metaTokens,s=i.visitor||c,o=i.dots,n=i.indexes,a=(i.Blob||"undefined"!=typeof Blob&&Blob)&&me.isSpecCompliantForm(t);if(!me.isFunction(s))throw new TypeError("visitor must be a function");function p(e){if(null===e)return"";if(me.isDate(e))return e.toISOString();if(!a&&me.isBlob(e))throw new fe("Blob is not supported. Use a Buffer instead.");return me.isArrayBuffer(e)||me.isTypedArray(e)?a&&"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}function c(e,i,s){let a=e;if(e&&!s&&"object"==typeof e)if(me.endsWith(i,"{}"))i=r?i:i.slice(0,-2),e=JSON.stringify(e);else if(me.isArray(e)&&function(e){return me.isArray(e)&&!e.some(xe)}(e)||(me.isFileList(e)||me.endsWith(i,"[]"))&&(a=me.toArray(e)))return i=be(i),a.forEach((function(e,r){!me.isUndefined(e)&&null!==e&&t.append(!0===n?ve([i],r,o):null===n?i:i+"[]",p(e))})),!1;return!!xe(e)||(t.append(ve(s,i,o),p(e)),!1)}const d=[],u=Object.assign(we,{defaultVisitor:c,convertValue:p,isVisitable:xe});if(!me.isObject(e))throw new TypeError("data must be an object");return function e(i,r){if(!me.isUndefined(i)){if(-1!==d.indexOf(i))throw Error("Circular reference detected in "+r.join("."));d.push(i),me.forEach(i,(function(i,o){!0===(!(me.isUndefined(i)||null===i)&&s.call(t,i,me.isString(o)?o.trim():o,r,u))&&e(i,r?r.concat(o):[o])})),d.pop()}}(e),t}function ke(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function Pe(e,t){this._pairs=[],e&&Ie(e,this,t)}const je=Pe.prototype;function Ae(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Oe(e,t,i){if(!t)return e;const r=i&&i.encode||Ae;me.isFunction(i)&&(i={serialize:i});const s=i&&i.serialize;let o;if(o=s?s(t,i):me.isURLSearchParams(t)?t.toString():new Pe(t,i).toString(r),o){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}je.append=function(e,t){this._pairs.push([e,t])},je.toString=function(e){const t=e?function(t){return e.call(this,t,ke)}:ke;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};const Ee=class{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!i&&i.synchronous,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){me.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},Se={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},De=g.default.URLSearchParams,Te="abcdefghijklmnopqrstuvwxyz",qe="0123456789",Ce={DIGIT:qe,ALPHA:Te,ALPHA_DIGIT:Te+Te.toUpperCase()+qe},$e={isNode:!0,classes:{URLSearchParams:De,FormData:f.default,Blob:"undefined"!=typeof Blob&&Blob||null},ALPHABET:Ce,generateString:(e=16,t=Ce.ALPHA_DIGIT)=>{let i="";const{length:r}=t,s=new Uint32Array(e);y.default.randomFillSync(s);for(let o=0;o<e;o++)i+=t[s[o]%r];return i},protocols:["http","https","file","data"]},_e="undefined"!=typeof window&&"undefined"!=typeof document,Re="object"==typeof navigator&&navigator||void 0,Ne=_e&&(!Re||["ReactNative","NativeScript","NS"].indexOf(Re.product)<0),Ue="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,Fe=_e&&window.location.href||"http://localhost",Le={...Object.freeze({__proto__:null,hasBrowserEnv:_e,hasStandardBrowserWebWorkerEnv:Ue,hasStandardBrowserEnv:Ne,navigator:Re,origin:Fe}),...$e};function Ve(e){function t(e,i,r,s){let o=e[s++];if("__proto__"===o)return!0;const n=Number.isFinite(+o),a=s>=e.length;return o=!o&&me.isArray(r)?r.length:o,a?(me.hasOwnProp(r,o)?r[o]=[r[o],i]:r[o]=i,!n):(r[o]&&me.isObject(r[o])||(r[o]=[]),t(e,i,r[o],s)&&me.isArray(r[o])&&(r[o]=function(e){const t={},i=Object.keys(e);let r;const s=i.length;let o;for(r=0;r<s;r++)o=i[r],t[o]=e[o];return t}(r[o])),!n)}if(me.isFormData(e)&&me.isFunction(e.entries)){const i={};return me.forEachEntry(e,((e,r)=>{t(function(e){return me.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}(e),r,i,0)})),i}return null}const Me={transitional:Se,adapter:["xhr","http","fetch"],transformRequest:[function(e,t){const i=t.getContentType()||"",r=i.indexOf("application/json")>-1,s=me.isObject(e);if(s&&me.isHTMLForm(e)&&(e=new FormData(e)),me.isFormData(e))return r?JSON.stringify(Ve(e)):e;if(me.isArrayBuffer(e)||me.isBuffer(e)||me.isStream(e)||me.isFile(e)||me.isBlob(e)||me.isReadableStream(e))return e;if(me.isArrayBufferView(e))return e.buffer;if(me.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(s){if(i.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return Ie(e,new Le.classes.URLSearchParams,Object.assign({visitor:function(e,t,i,r){return Le.isNode&&me.isBuffer(e)?(this.append(t,e.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((o=me.isFileList(e))||i.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return Ie(o?{"files[]":e}:e,t&&new t,this.formSerializer)}}return s||r?(t.setContentType("application/json",!1),function(e){if(me.isString(e))try{return(0,JSON.parse)(e),me.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||Me.transitional,i=t&&t.forcedJSONParsing,r="json"===this.responseType;if(me.isResponse(e)||me.isReadableStream(e))return e;if(e&&me.isString(e)&&(i&&!this.responseType||r)){const i=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(e){if(i){if("SyntaxError"===e.name)throw fe.from(e,fe.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Le.classes.FormData,Blob:Le.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};me.forEach(["delete","get","head","post","put","patch"],(e=>{Me.headers[e]={}}));const ze=Me,Be=me.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ke=Symbol("internals");function He(e){return e&&String(e).trim().toLowerCase()}function Ze(e){return!1===e||null==e?e:me.isArray(e)?e.map(Ze):String(e)}function Je(e,t,i,r,s){return me.isFunction(r)?r.call(this,t,i):(s&&(t=i),me.isString(t)?me.isString(r)?-1!==t.indexOf(r):me.isRegExp(r)?r.test(t):void 0:void 0)}class Ge{constructor(e){e&&this.set(e)}set(e,t,i){const r=this;function s(e,t,i){const s=He(t);if(!s)throw new Error("header name must be a non-empty string");const o=me.findKey(r,s);(!o||void 0===r[o]||!0===i||void 0===i&&!1!==r[o])&&(r[o||t]=Ze(e))}const o=(e,t)=>me.forEach(e,((e,i)=>s(e,i,t)));if(me.isPlainObject(e)||e instanceof this.constructor)o(e,t);else if(me.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()))o((e=>{const t={};let i,r,s;return e&&e.split("\n").forEach((function(e){s=e.indexOf(":"),i=e.substring(0,s).trim().toLowerCase(),r=e.substring(s+1).trim(),!i||t[i]&&Be[i]||("set-cookie"===i?t[i]?t[i].push(r):t[i]=[r]:t[i]=t[i]?t[i]+", "+r:r)})),t})(e),t);else if(me.isObject(e)&&me.isIterable(e)){let i,r,s={};for(const t of e){if(!me.isArray(t))throw TypeError("Object iterator must return a key-value pair");s[r=t[0]]=(i=s[r])?me.isArray(i)?[...i,t[1]]:[i,t[1]]:t[1]}o(s,t)}else null!=e&&s(t,e,i);return this}get(e,t){if(e=He(e)){const i=me.findKey(this,e);if(i){const e=this[i];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),i=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let r;for(;r=i.exec(e);)t[r[1]]=r[2];return t}(e);if(me.isFunction(t))return t.call(this,e,i);if(me.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=He(e)){const i=me.findKey(this,e);return!(!i||void 0===this[i]||t&&!Je(0,this[i],i,t))}return!1}delete(e,t){const i=this;let r=!1;function s(e){if(e=He(e)){const s=me.findKey(i,e);!s||t&&!Je(0,i[s],s,t)||(delete i[s],r=!0)}}return me.isArray(e)?e.forEach(s):s(e),r}clear(e){const t=Object.keys(this);let i=t.length,r=!1;for(;i--;){const s=t[i];e&&!Je(0,this[s],s,e,!0)||(delete this[s],r=!0)}return r}normalize(e){const t=this,i={};return me.forEach(this,((r,s)=>{const o=me.findKey(i,s);if(o)return t[o]=Ze(r),void delete t[s];const n=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,i)=>t.toUpperCase()+i))}(s):String(s).trim();n!==s&&delete t[s],t[n]=Ze(r),i[n]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return me.forEach(this,((i,r)=>{null!=i&&!1!==i&&(t[r]=e&&me.isArray(i)?i.join(", "):i)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+": "+t)).join("\n")}getSetCookie(){return this.get("set-cookie")||[]}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const i=new this(e);return t.forEach((e=>i.set(e))),i}static accessor(e){const t=(this[Ke]=this[Ke]={accessors:{}}).accessors,i=this.prototype;function r(e){const r=He(e);t[r]||(function(e,t){const i=me.toCamelCase(" "+t);["get","set","has"].forEach((r=>{Object.defineProperty(e,r+i,{value:function(e,i,s){return this[r].call(this,t,e,i,s)},configurable:!0})}))}(i,e),t[r]=!0)}return me.isArray(e)?e.forEach(r):r(e),this}}Ge.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),me.reduceDescriptors(Ge.prototype,(({value:e},t)=>{let i=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(e){this[i]=e}}})),me.freezeMethods(Ge);const We=Ge;function Ye(e,t){const i=this||ze,r=t||i,s=We.from(r.headers);let o=r.data;return me.forEach(e,(function(e){o=e.call(i,o,s.normalize(),t?t.status:void 0)})),s.normalize(),o}function Xe(e){return!(!e||!e.__CANCEL__)}function Qe(e,t,i){fe.call(this,null==e?"canceled":e,fe.ERR_CANCELED,t,i),this.name="CanceledError"}function et(e,t,i){const r=i.config.validateStatus;i.status&&r&&!r(i.status)?t(new fe("Request failed with status code "+i.status,[fe.ERR_BAD_REQUEST,fe.ERR_BAD_RESPONSE][Math.floor(i.status/100)-4],i.config,i.request,i)):e(i)}function tt(e,t,i){let r=!function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}(t);return e&&(r||0==i)?function(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}me.inherits(Qe,fe,{__CANCEL__:!0});const it="1.9.0";function rt(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}const st=/^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/,ot=Symbol("internals");class nt extends P.default.Transform{constructor(e){super({readableHighWaterMark:(e=me.toFlatObject(e,{maxRate:0,chunkSize:65536,minChunkSize:100,timeWindow:500,ticksRate:2,samplesCount:15},null,((e,t)=>!me.isUndefined(t[e])))).chunkSize});const t=this[ot]={timeWindow:e.timeWindow,chunkSize:e.chunkSize,maxRate:e.maxRate,minChunkSize:e.minChunkSize,bytesSeen:0,isCaptured:!1,notifiedBytesLoaded:0,ts:Date.now(),bytes:0,onReadCallback:null};this.on("newListener",(e=>{"progress"===e&&(t.isCaptured||(t.isCaptured=!0))}))}_read(e){const t=this[ot];return t.onReadCallback&&t.onReadCallback(),super._read(e)}_transform(e,t,i){const r=this[ot],s=r.maxRate,o=this.readableHighWaterMark,n=r.timeWindow,a=s/(1e3/n),p=!1!==r.minChunkSize?Math.max(r.minChunkSize,.01*a):0,c=(e,t)=>{const i=Buffer.byteLength(e);r.bytesSeen+=i,r.bytes+=i,r.isCaptured&&this.emit("progress",r.bytesSeen),this.push(e)?process.nextTick(t):r.onReadCallback=()=>{r.onReadCallback=null,process.nextTick(t)}},d=(e,t)=>{const i=Buffer.byteLength(e);let d,u=null,l=o,h=0;if(s){const e=Date.now();(!r.ts||(h=e-r.ts)>=n)&&(r.ts=e,d=a-r.bytes,r.bytes=d<0?-d:0,h=0),d=a-r.bytes}if(s){if(d<=0)return setTimeout((()=>{t(null,e)}),n-h);d<l&&(l=d)}l&&i>l&&i-l>p&&(u=e.subarray(l),e=e.subarray(0,l)),c(e,u?()=>{process.nextTick(t,null,u)}:t)};d(e,(function e(t,r){if(t)return i(t);r?d(r,e):i(null)}))}}const at=nt,{asyncIterator:pt}=Symbol,ct=async function*(e){e.stream?yield*e.stream():e.arrayBuffer?yield await e.arrayBuffer():e[pt]?yield*e[pt]():yield e},dt=Le.ALPHABET.ALPHA_DIGIT+"-_",ut="function"==typeof TextEncoder?new TextEncoder:new w.default.TextEncoder,lt="\r\n",ht=ut.encode(lt);class mt{constructor(e,t){const{escapeName:i}=this.constructor,r=me.isString(t);let s=`Content-Disposition: form-data; name="${i(e)}"${!r&&t.name?`; filename="${i(t.name)}"`:""}${lt}`;r?t=ut.encode(String(t).replace(/\r?\n|\r\n?/g,lt)):s+=`Content-Type: ${t.type||"application/octet-stream"}${lt}`,this.headers=ut.encode(s+lt),this.contentLength=r?t.byteLength:t.size,this.size=this.headers.byteLength+this.contentLength+2,this.name=e,this.value=t}async*encode(){yield this.headers;const{value:e}=this;me.isTypedArray(e)?yield e:yield*ct(e),yield ht}static escapeName(e){return String(e).replace(/[\r\n"]/g,(e=>({"\r":"%0D","\n":"%0A",'"':"%22"}[e])))}}class ft extends P.default.Transform{__transform(e,t,i){this.push(e),i()}_transform(e,t,i){if(0!==e.length&&(this._transform=this.__transform,120!==e[0])){const e=Buffer.alloc(2);e[0]=120,e[1]=156,this.push(e,t)}this.__transform(e,t,i)}}const yt=ft,gt=(e,t)=>me.isAsyncFn(e)?function(...i){const r=i.pop();e.apply(this,i).then((e=>{try{t?r(null,...t(e)):r(null,e)}catch(e){r(e)}}),r)}:e,xt=(e,t,i=3)=>{let r=0;const s=function(e,t){e=e||10;const i=new Array(e),r=new Array(e);let s,o=0,n=0;return t=void 0!==t?t:1e3,function(a){const p=Date.now(),c=r[n];s||(s=p),i[o]=a,r[o]=p;let d=n,u=0;for(;d!==o;)u+=i[d++],d%=e;if(o=(o+1)%e,o===n&&(n=(n+1)%e),p-s<t)return;const l=c&&p-c;return l?Math.round(1e3*u/l):void 0}}(50,250);return function(e,t){let i,r,s=0,o=1e3/t;const n=(t,o=Date.now())=>{s=o,i=null,r&&(clearTimeout(r),r=null),e.apply(null,t)};return[(...e)=>{const t=Date.now(),a=t-s;a>=o?n(e,t):(i=e,r||(r=setTimeout((()=>{r=null,n(i)}),o-a)))},()=>i&&n(i)]}((i=>{const o=i.loaded,n=i.lengthComputable?i.total:void 0,a=o-r,p=s(a);r=o,e({loaded:o,total:n,progress:n?o/n:void 0,bytes:a,rate:p||void 0,estimated:p&&n&&o<=n?(n-o)/p:void 0,event:i,lengthComputable:null!=n,[t?"download":"upload"]:!0})}),i)},bt=(e,t)=>{const i=null!=e;return[r=>t[0]({lengthComputable:i,total:e,loaded:r}),t[1]]},vt=e=>(...t)=>me.asap((()=>e(...t))),wt={flush:k.default.constants.Z_SYNC_FLUSH,finishFlush:k.default.constants.Z_SYNC_FLUSH},It={flush:k.default.constants.BROTLI_OPERATION_FLUSH,finishFlush:k.default.constants.BROTLI_OPERATION_FLUSH},kt=me.isFunction(k.default.createBrotliDecompress),{http:Pt,https:jt}=I.default,At=/https:?/,Ot=Le.protocols.map((e=>e+":")),Et=(e,[t,i])=>(e.on("end",i).on("error",i),t);function St(e,t){e.beforeRedirects.proxy&&e.beforeRedirects.proxy(e),e.beforeRedirects.config&&e.beforeRedirects.config(e,t)}function Dt(e,t,i){let r=t;if(!r&&!1!==r){const e=x.default.getProxyForUrl(i);e&&(r=new URL(e))}if(r){if(r.username&&(r.auth=(r.username||"")+":"+(r.password||"")),r.auth){(r.auth.username||r.auth.password)&&(r.auth=(r.auth.username||"")+":"+(r.auth.password||""));const t=Buffer.from(r.auth,"utf8").toString("base64");e.headers["Proxy-Authorization"]="Basic "+t}e.headers.host=e.hostname+(e.port?":"+e.port:"");const t=r.hostname||r.host;e.hostname=t,e.host=t,e.port=r.port,e.path=i,r.protocol&&(e.protocol=r.protocol.includes(":")?r.protocol:`${r.protocol}:`)}e.beforeRedirects.proxy=function(e){Dt(e,t,e.href)}}const Tt="undefined"!=typeof process&&"process"===me.kindOf(process),qt=(e,t)=>(({address:e,family:t})=>{if(!me.isString(e))throw TypeError("address must be a string");return{address:e,family:t||(e.indexOf(".")<0?6:4)}})(me.isObject(e)?e:{address:e,family:t}),Ct=Tt&&function(e){return t=async function(t,i,r){let{data:s,lookup:o,family:n}=e;const{responseType:a,responseEncoding:p}=e,c=e.method.toUpperCase();let d,u,m=!1;if(o){const e=gt(o,(e=>me.isArray(e)?e:[e]));o=(t,i,r)=>{e(t,i,((e,t,s)=>{if(e)return r(e);const o=me.isArray(t)?t.map((e=>qt(e))):[qt(t,s)];i.all?r(e,o):r(e,o[0].address,o[0].family)}))}}const f=new h.EventEmitter,y=()=>{e.cancelToken&&e.cancelToken.unsubscribe(g),e.signal&&e.signal.removeEventListener("abort",g),f.removeAllListeners()};function g(t){f.emit("abort",!t||t.type?new Qe(null,e,u):t)}r(((e,t)=>{d=!0,t&&(m=!0,y())})),f.once("abort",i),(e.cancelToken||e.signal)&&(e.cancelToken&&e.cancelToken.subscribe(g),e.signal&&(e.signal.aborted?g():e.signal.addEventListener("abort",g)));const x=tt(e.baseURL,e.url,e.allowAbsoluteUrls),I=new URL(x,Le.hasBrowserEnv?Le.origin:void 0),j=I.protocol||Ot[0];if("data:"===j){let r;if("GET"!==c)return et(t,i,{status:405,statusText:"method not allowed",headers:{},config:e});try{r=function(e,t,i){const r=i&&i.Blob||Le.classes.Blob,s=rt(e);if(void 0===t&&r&&(t=!0),"data"===s){e=s.length?e.slice(s.length+1):e;const i=st.exec(e);if(!i)throw new fe("Invalid URL",fe.ERR_INVALID_URL);const o=i[1],n=i[2],a=i[3],p=Buffer.from(decodeURIComponent(a),n?"base64":"utf8");if(t){if(!r)throw new fe("Blob is not supported",fe.ERR_NOT_SUPPORT);return new r([p],{type:o})}return p}throw new fe("Unsupported protocol "+s,fe.ERR_NOT_SUPPORT)}(e.url,"blob"===a,{Blob:e.env&&e.env.Blob})}catch(t){throw fe.from(t,fe.ERR_BAD_REQUEST,e)}return"text"===a?(r=r.toString(p),p&&"utf8"!==p||(r=me.stripBOM(r))):"stream"===a&&(r=P.default.Readable.from(r)),et(t,i,{data:r,status:200,statusText:"OK",headers:new We,config:e})}if(-1===Ot.indexOf(j))return i(new fe("Unsupported protocol "+j,fe.ERR_BAD_REQUEST,e));const A=We.from(e.headers).normalize();A.set("User-Agent","axios/"+it,!1);const{onUploadProgress:O,onDownloadProgress:E}=e,S=e.maxRate;let D,T;if(me.isSpecCompliantForm(s)){const e=A.getContentType(/boundary=([-_\w\d]{10,70})/i);s=((e,t,i)=>{const{tag:r="form-data-boundary",size:s=25,boundary:o=r+"-"+Le.generateString(s,dt)}=i||{};if(!me.isFormData(e))throw TypeError("FormData instance required");if(o.length<1||o.length>70)throw Error("boundary must be 10-70 characters long");const n=ut.encode("--"+o+lt),a=ut.encode("--"+o+"--"+lt);let p=a.byteLength;const c=Array.from(e.entries()).map((([e,t])=>{const i=new mt(e,t);return p+=i.size,i}));p+=n.byteLength*c.length,p=me.toFiniteNumber(p);const d={"Content-Type":`multipart/form-data; boundary=${o}`};return Number.isFinite(p)&&(d["Content-Length"]=p),t&&t(d),l.Readable.from(async function*(){for(const e of c)yield n,yield*e.encode();yield a}())})(s,(e=>{A.set(e)}),{tag:`axios-${it}-boundary`,boundary:e&&e[1]||void 0})}else if(me.isFormData(s)&&me.isFunction(s.getHeaders)){if(A.set(s.getHeaders()),!A.hasContentLength())try{const e=await w.default.promisify(s.getLength).call(s);Number.isFinite(e)&&e>=0&&A.setContentLength(e)}catch(e){}}else if(me.isBlob(s)||me.isFile(s))s.size&&A.setContentType(s.type||"application/octet-stream"),A.setContentLength(s.size||0),s=P.default.Readable.from(ct(s));else if(s&&!me.isStream(s)){if(Buffer.isBuffer(s));else if(me.isArrayBuffer(s))s=Buffer.from(new Uint8Array(s));else{if(!me.isString(s))return i(new fe("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",fe.ERR_BAD_REQUEST,e));s=Buffer.from(s,"utf-8")}if(A.setContentLength(s.length,!1),e.maxBodyLength>-1&&s.length>e.maxBodyLength)return i(new fe("Request body larger than maxBodyLength limit",fe.ERR_BAD_REQUEST,e))}const q=me.toFiniteNumber(A.getContentLength());let C,$;me.isArray(S)?(D=S[0],T=S[1]):D=T=S,s&&(O||D)&&(me.isStream(s)||(s=P.default.Readable.from(s,{objectMode:!1})),s=P.default.pipeline([s,new at({maxRate:me.toFiniteNumber(D)})],me.noop),O&&s.on("progress",Et(s,bt(q,xt(vt(O),!1,3))))),e.auth&&(C=(e.auth.username||"")+":"+(e.auth.password||"")),!C&&I.username&&(C=I.username+":"+I.password),C&&A.delete("authorization");try{$=Oe(I.pathname+I.search,e.params,e.paramsSerializer).replace(/^\?/,"")}catch(t){const r=new Error(t.message);return r.config=e,r.url=e.url,r.exists=!0,i(r)}A.set("Accept-Encoding","gzip, compress, deflate"+(kt?", br":""),!1);const _={path:$,method:c,headers:A.toJSON(),agents:{http:e.httpAgent,https:e.httpsAgent},auth:C,protocol:j,family:n,beforeRedirect:St,beforeRedirects:{}};let R;!me.isUndefined(o)&&(_.lookup=o),e.socketPath?_.socketPath=e.socketPath:(_.hostname=I.hostname.startsWith("[")?I.hostname.slice(1,-1):I.hostname,_.port=I.port,Dt(_,e.proxy,j+"//"+I.hostname+(I.port?":"+I.port:"")+_.path));const N=At.test(_.protocol);if(_.agent=N?e.httpsAgent:e.httpAgent,e.transport?R=e.transport:0===e.maxRedirects?R=N?v.default:b.default:(e.maxRedirects&&(_.maxRedirects=e.maxRedirects),e.beforeRedirect&&(_.beforeRedirects.config=e.beforeRedirect),R=N?jt:Pt),e.maxBodyLength>-1?_.maxBodyLength=e.maxBodyLength:_.maxBodyLength=1/0,e.insecureHTTPParser&&(_.insecureHTTPParser=e.insecureHTTPParser),u=R.request(_,(function(r){if(u.destroyed)return;const s=[r],o=+r.headers["content-length"];if(E||T){const e=new at({maxRate:me.toFiniteNumber(T)});E&&e.on("progress",Et(e,bt(o,xt(vt(E),!0,3)))),s.push(e)}let n=r;const d=r.req||u;if(!1!==e.decompress&&r.headers["content-encoding"])switch("HEAD"!==c&&204!==r.statusCode||delete r.headers["content-encoding"],(r.headers["content-encoding"]||"").toLowerCase()){case"gzip":case"x-gzip":case"compress":case"x-compress":s.push(k.default.createUnzip(wt)),delete r.headers["content-encoding"];break;case"deflate":s.push(new yt),s.push(k.default.createUnzip(wt)),delete r.headers["content-encoding"];break;case"br":kt&&(s.push(k.default.createBrotliDecompress(It)),delete r.headers["content-encoding"])}n=s.length>1?P.default.pipeline(s,me.noop):s[0];const l=P.default.finished(n,(()=>{l(),y()})),h={status:r.statusCode,statusText:r.statusMessage,headers:new We(r.headers),config:e,request:d};if("stream"===a)h.data=n,et(t,i,h);else{const r=[];let s=0;n.on("data",(function(t){r.push(t),s+=t.length,e.maxContentLength>-1&&s>e.maxContentLength&&(m=!0,n.destroy(),i(new fe("maxContentLength size of "+e.maxContentLength+" exceeded",fe.ERR_BAD_RESPONSE,e,d)))})),n.on("aborted",(function(){if(m)return;const t=new fe("stream has been aborted",fe.ERR_BAD_RESPONSE,e,d);n.destroy(t),i(t)})),n.on("error",(function(t){u.destroyed||i(fe.from(t,null,e,d))})),n.on("end",(function(){try{let e=1===r.length?r[0]:Buffer.concat(r);"arraybuffer"!==a&&(e=e.toString(p),p&&"utf8"!==p||(e=me.stripBOM(e))),h.data=e}catch(t){return i(fe.from(t,null,e,h.request,h))}et(t,i,h)}))}f.once("abort",(e=>{n.destroyed||(n.emit("error",e),n.destroy())}))})),f.once("abort",(e=>{i(e),u.destroy(e)})),u.on("error",(function(t){i(fe.from(t,null,e,u))})),u.on("socket",(function(e){e.setKeepAlive(!0,6e4)})),e.timeout){const t=parseInt(e.timeout,10);if(Number.isNaN(t))return void i(new fe("error trying to parse `config.timeout` to int",fe.ERR_BAD_OPTION_VALUE,e,u));u.setTimeout(t,(function(){if(d)return;let t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded";const r=e.transitional||Se;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),i(new fe(t,r.clarifyTimeoutError?fe.ETIMEDOUT:fe.ECONNABORTED,e,u)),g()}))}if(me.isStream(s)){let t=!1,i=!1;s.on("end",(()=>{t=!0})),s.once("error",(e=>{i=!0,u.destroy(e)})),s.on("close",(()=>{t||i||g(new Qe("Request stream has been aborted",e,u))})),s.pipe(u)}else u.end(s)},new Promise(((e,i)=>{let r,s;const o=(e,t)=>{s||(s=!0,r&&r(e,t))},n=e=>{o(e,!0),i(e)};t((t=>{o(t),e(t)}),n,(e=>r=e)).catch(n)}));var t},$t=Le.hasStandardBrowserEnv?((e,t)=>i=>(i=new URL(i,Le.origin),e.protocol===i.protocol&&e.host===i.host&&(t||e.port===i.port)))(new URL(Le.origin),Le.navigator&&/(msie|trident)/i.test(Le.navigator.userAgent)):()=>!0,_t=Le.hasStandardBrowserEnv?{write(e,t,i,r,s,o){const n=[e+"="+encodeURIComponent(t)];me.isNumber(i)&&n.push("expires="+new Date(i).toGMTString()),me.isString(r)&&n.push("path="+r),me.isString(s)&&n.push("domain="+s),!0===o&&n.push("secure"),document.cookie=n.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}},Rt=e=>e instanceof We?{...e}:e;function Nt(e,t){t=t||{};const i={};function r(e,t,i,r){return me.isPlainObject(e)&&me.isPlainObject(t)?me.merge.call({caseless:r},e,t):me.isPlainObject(t)?me.merge({},t):me.isArray(t)?t.slice():t}function s(e,t,i,s){return me.isUndefined(t)?me.isUndefined(e)?void 0:r(void 0,e,0,s):r(e,t,0,s)}function o(e,t){if(!me.isUndefined(t))return r(void 0,t)}function n(e,t){return me.isUndefined(t)?me.isUndefined(e)?void 0:r(void 0,e):r(void 0,t)}function a(i,s,o){return o in t?r(i,s):o in e?r(void 0,i):void 0}const p={url:o,method:o,data:o,baseURL:n,transformRequest:n,transformResponse:n,paramsSerializer:n,timeout:n,timeoutMessage:n,withCredentials:n,withXSRFToken:n,adapter:n,responseType:n,xsrfCookieName:n,xsrfHeaderName:n,onUploadProgress:n,onDownloadProgress:n,decompress:n,maxContentLength:n,maxBodyLength:n,beforeRedirect:n,transport:n,httpAgent:n,httpsAgent:n,cancelToken:n,socketPath:n,responseEncoding:n,validateStatus:a,headers:(e,t,i)=>s(Rt(e),Rt(t),0,!0)};return me.forEach(Object.keys(Object.assign({},e,t)),(function(r){const o=p[r]||s,n=o(e[r],t[r],r);me.isUndefined(n)&&o!==a||(i[r]=n)})),i}const Ut=e=>{const t=Nt({},e);let i,{data:r,withXSRFToken:s,xsrfHeaderName:o,xsrfCookieName:n,headers:a,auth:p}=t;if(t.headers=a=We.from(a),t.url=Oe(tt(t.baseURL,t.url,t.allowAbsoluteUrls),e.params,e.paramsSerializer),p&&a.set("Authorization","Basic "+btoa((p.username||"")+":"+(p.password?unescape(encodeURIComponent(p.password)):""))),me.isFormData(r))if(Le.hasStandardBrowserEnv||Le.hasStandardBrowserWebWorkerEnv)a.setContentType(void 0);else if(!1!==(i=a.getContentType())){const[e,...t]=i?i.split(";").map((e=>e.trim())).filter(Boolean):[];a.setContentType([e||"multipart/form-data",...t].join("; "))}if(Le.hasStandardBrowserEnv&&(s&&me.isFunction(s)&&(s=s(t)),s||!1!==s&&$t(t.url))){const e=o&&n&&_t.read(n);e&&a.set(o,e)}return t},Ft="undefined"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,i){const r=Ut(e);let s=r.data;const o=We.from(r.headers).normalize();let n,a,p,c,d,{responseType:u,onUploadProgress:l,onDownloadProgress:h}=r;function m(){c&&c(),d&&d(),r.cancelToken&&r.cancelToken.unsubscribe(n),r.signal&&r.signal.removeEventListener("abort",n)}let f=new XMLHttpRequest;function y(){if(!f)return;const r=We.from("getAllResponseHeaders"in f&&f.getAllResponseHeaders());et((function(e){t(e),m()}),(function(e){i(e),m()}),{data:u&&"text"!==u&&"json"!==u?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:r,config:e,request:f}),f=null}f.open(r.method.toUpperCase(),r.url,!0),f.timeout=r.timeout,"onloadend"in f?f.onloadend=y:f.onreadystatechange=function(){f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))&&setTimeout(y)},f.onabort=function(){f&&(i(new fe("Request aborted",fe.ECONNABORTED,e,f)),f=null)},f.onerror=function(){i(new fe("Network Error",fe.ERR_NETWORK,e,f)),f=null},f.ontimeout=function(){let t=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded";const s=r.transitional||Se;r.timeoutErrorMessage&&(t=r.timeoutErrorMessage),i(new fe(t,s.clarifyTimeoutError?fe.ETIMEDOUT:fe.ECONNABORTED,e,f)),f=null},void 0===s&&o.setContentType(null),"setRequestHeader"in f&&me.forEach(o.toJSON(),(function(e,t){f.setRequestHeader(t,e)})),me.isUndefined(r.withCredentials)||(f.withCredentials=!!r.withCredentials),u&&"json"!==u&&(f.responseType=r.responseType),h&&([p,d]=xt(h,!0),f.addEventListener("progress",p)),l&&f.upload&&([a,c]=xt(l),f.upload.addEventListener("progress",a),f.upload.addEventListener("loadend",c)),(r.cancelToken||r.signal)&&(n=t=>{f&&(i(!t||t.type?new Qe(null,e,f):t),f.abort(),f=null)},r.cancelToken&&r.cancelToken.subscribe(n),r.signal&&(r.signal.aborted?n():r.signal.addEventListener("abort",n)));const g=rt(r.url);g&&-1===Le.protocols.indexOf(g)?i(new fe("Unsupported protocol "+g+":",fe.ERR_BAD_REQUEST,e)):f.send(s||null)}))},Lt=(e,t)=>{const{length:i}=e=e?e.filter(Boolean):[];if(t||i){let i,r=new AbortController;const s=function(e){if(!i){i=!0,n();const t=e instanceof Error?e:this.reason;r.abort(t instanceof fe?t:new Qe(t instanceof Error?t.message:t))}};let o=t&&setTimeout((()=>{o=null,s(new fe(`timeout ${t} of ms exceeded`,fe.ETIMEDOUT))}),t);const n=()=>{e&&(o&&clearTimeout(o),o=null,e.forEach((e=>{e.unsubscribe?e.unsubscribe(s):e.removeEventListener("abort",s)})),e=null)};e.forEach((e=>e.addEventListener("abort",s)));const{signal:a}=r;return a.unsubscribe=()=>me.asap(n),a}},Vt=function*(e,t){let i=e.byteLength;if(!t||i<t)return void(yield e);let r,s=0;for(;s<i;)r=s+t,yield e.slice(s,r),s=r},Mt=(e,t,i,r)=>{const s=async function*(e,t){for await(const i of async function*(e){if(e[Symbol.asyncIterator])return void(yield*e);const t=e.getReader();try{for(;;){const{done:e,value:i}=await t.read();if(e)break;yield i}}finally{await t.cancel()}}(e))yield*Vt(i,t)}(e,t);let o,n=0,a=e=>{o||(o=!0,r&&r(e))};return new ReadableStream({async pull(e){try{const{done:t,value:r}=await s.next();if(t)return a(),void e.close();let o=r.byteLength;if(i){let e=n+=o;i(e)}e.enqueue(new Uint8Array(r))}catch(e){throw a(e),e}},cancel:e=>(a(e),s.return())},{highWaterMark:2})},zt="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,Bt=zt&&"function"==typeof ReadableStream,Kt=zt&&("function"==typeof TextEncoder?(Ht=new TextEncoder,e=>Ht.encode(e)):async e=>new Uint8Array(await new Response(e).arrayBuffer()));var Ht;const Zt=(e,...t)=>{try{return!!e(...t)}catch(e){return!1}},Jt=Bt&&Zt((()=>{let e=!1;const t=new Request(Le.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!t})),Gt=Bt&&Zt((()=>me.isReadableStream(new Response("").body))),Wt={stream:Gt&&(e=>e.body)};var Yt;zt&&(Yt=new Response,["text","arrayBuffer","blob","formData","stream"].forEach((e=>{!Wt[e]&&(Wt[e]=me.isFunction(Yt[e])?t=>t[e]():(t,i)=>{throw new fe(`Response type '${e}' is not supported`,fe.ERR_NOT_SUPPORT,i)})})));const Xt=zt&&(async e=>{let{url:t,method:i,data:r,signal:s,cancelToken:o,timeout:n,onDownloadProgress:a,onUploadProgress:p,responseType:c,headers:d,withCredentials:u="same-origin",fetchOptions:l}=Ut(e);c=c?(c+"").toLowerCase():"text";let h,m=Lt([s,o&&o.toAbortSignal()],n);const f=m&&m.unsubscribe&&(()=>{m.unsubscribe()});let y;try{if(p&&Jt&&"get"!==i&&"head"!==i&&0!==(y=await(async(e,t)=>{const i=me.toFiniteNumber(e.getContentLength());return null==i?(async e=>{if(null==e)return 0;if(me.isBlob(e))return e.size;if(me.isSpecCompliantForm(e)){const t=new Request(Le.origin,{method:"POST",body:e});return(await t.arrayBuffer()).byteLength}return me.isArrayBufferView(e)||me.isArrayBuffer(e)?e.byteLength:(me.isURLSearchParams(e)&&(e+=""),me.isString(e)?(await Kt(e)).byteLength:void 0)})(t):i})(d,r))){let e,i=new Request(t,{method:"POST",body:r,duplex:"half"});if(me.isFormData(r)&&(e=i.headers.get("content-type"))&&d.setContentType(e),i.body){const[e,t]=bt(y,xt(vt(p)));r=Mt(i.body,65536,e,t)}}me.isString(u)||(u=u?"include":"omit");const s="credentials"in Request.prototype;h=new Request(t,{...l,signal:m,method:i.toUpperCase(),headers:d.normalize().toJSON(),body:r,duplex:"half",credentials:s?u:void 0});let o=await fetch(h);const n=Gt&&("stream"===c||"response"===c);if(Gt&&(a||n&&f)){const e={};["status","statusText","headers"].forEach((t=>{e[t]=o[t]}));const t=me.toFiniteNumber(o.headers.get("content-length")),[i,r]=a&&bt(t,xt(vt(a),!0))||[];o=new Response(Mt(o.body,65536,i,(()=>{r&&r(),f&&f()})),e)}c=c||"text";let g=await Wt[me.findKey(Wt,c)||"text"](o,e);return!n&&f&&f(),await new Promise(((t,i)=>{et(t,i,{data:g,headers:We.from(o.headers),status:o.status,statusText:o.statusText,config:e,request:h})}))}catch(t){if(f&&f(),t&&"TypeError"===t.name&&/Load failed|fetch/i.test(t.message))throw Object.assign(new fe("Network Error",fe.ERR_NETWORK,e,h),{cause:t.cause||t});throw fe.from(t,t&&t.code,e,h)}}),Qt={http:Ct,xhr:Ft,fetch:Xt};me.forEach(Qt,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(e){}Object.defineProperty(e,"adapterName",{value:t})}}));const ei=e=>`- ${e}`,ti=e=>me.isFunction(e)||null===e||!1===e,ii=e=>{e=me.isArray(e)?e:[e];const{length:t}=e;let i,r;const s={};for(let o=0;o<t;o++){let t;if(i=e[o],r=i,!ti(i)&&(r=Qt[(t=String(i)).toLowerCase()],void 0===r))throw new fe(`Unknown adapter '${t}'`);if(r)break;s[t||"#"+o]=r}if(!r){const e=Object.entries(s).map((([e,t])=>`adapter ${e} `+(!1===t?"is not supported by the environment":"is not available in the build")));throw new fe("There is no suitable adapter to dispatch the request "+(t?e.length>1?"since :\n"+e.map(ei).join("\n"):" "+ei(e[0]):"as no adapter specified"),"ERR_NOT_SUPPORT")}return r};function ri(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Qe(null,e)}function si(e){return ri(e),e.headers=We.from(e.headers),e.data=Ye.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1),ii(e.adapter||ze.adapter)(e).then((function(t){return ri(e),t.data=Ye.call(e,e.transformResponse,t),t.headers=We.from(t.headers),t}),(function(t){return Xe(t)||(ri(e),t&&t.response&&(t.response.data=Ye.call(e,e.transformResponse,t.response),t.response.headers=We.from(t.response.headers))),Promise.reject(t)}))}const oi={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{oi[e]=function(i){return typeof i===e||"a"+(t<1?"n ":" ")+e}}));const ni={};oi.transitional=function(e,t,i){function r(e,t){return"[Axios v1.9.0] Transitional option '"+e+"'"+t+(i?". "+i:"")}return(i,s,o)=>{if(!1===e)throw new fe(r(s," has been removed"+(t?" in "+t:"")),fe.ERR_DEPRECATED);return t&&!ni[s]&&(ni[s]=!0,console.warn(r(s," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(i,s,o)}},oi.spelling=function(e){return(t,i)=>(console.warn(`${i} is likely a misspelling of ${e}`),!0)};const ai={assertOptions:function(e,t,i){if("object"!=typeof e)throw new fe("options must be an object",fe.ERR_BAD_OPTION_VALUE);const r=Object.keys(e);let s=r.length;for(;s-- >0;){const o=r[s],n=t[o];if(n){const t=e[o],i=void 0===t||n(t,o,e);if(!0!==i)throw new fe("option "+o+" must be "+i,fe.ERR_BAD_OPTION_VALUE)}else if(!0!==i)throw new fe("Unknown option "+o,fe.ERR_BAD_OPTION)}},validators:oi},pi=ai.validators;class ci{constructor(e){this.defaults=e||{},this.interceptors={request:new Ee,response:new Ee}}async request(e,t){try{return await this._request(e,t)}catch(e){if(e instanceof Error){let t={};Error.captureStackTrace?Error.captureStackTrace(t):t=new Error;const i=t.stack?t.stack.replace(/^.+\n/,""):"";try{e.stack?i&&!String(e.stack).endsWith(i.replace(/^.+\n.+\n/,""))&&(e.stack+="\n"+i):e.stack=i}catch(e){}}throw e}}_request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},t=Nt(this.defaults,t);const{transitional:i,paramsSerializer:r,headers:s}=t;void 0!==i&&ai.assertOptions(i,{silentJSONParsing:pi.transitional(pi.boolean),forcedJSONParsing:pi.transitional(pi.boolean),clarifyTimeoutError:pi.transitional(pi.boolean)},!1),null!=r&&(me.isFunction(r)?t.paramsSerializer={serialize:r}:ai.assertOptions(r,{encode:pi.function,serialize:pi.function},!0)),void 0!==t.allowAbsoluteUrls||(void 0!==this.defaults.allowAbsoluteUrls?t.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:t.allowAbsoluteUrls=!0),ai.assertOptions(t,{baseUrl:pi.spelling("baseURL"),withXsrfToken:pi.spelling("withXSRFToken")},!0),t.method=(t.method||this.defaults.method||"get").toLowerCase();let o=s&&me.merge(s.common,s[t.method]);s&&me.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete s[e]})),t.headers=We.concat(o,s);const n=[];let a=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(a=a&&e.synchronous,n.unshift(e.fulfilled,e.rejected))}));const p=[];let c;this.interceptors.response.forEach((function(e){p.push(e.fulfilled,e.rejected)}));let d,u=0;if(!a){const e=[si.bind(this),void 0];for(e.unshift.apply(e,n),e.push.apply(e,p),d=e.length,c=Promise.resolve(t);u<d;)c=c.then(e[u++],e[u++]);return c}d=n.length;let l=t;for(u=0;u<d;){const e=n[u++],t=n[u++];try{l=e(l)}catch(e){t.call(this,e);break}}try{c=si.call(this,l)}catch(e){return Promise.reject(e)}for(u=0,d=p.length;u<d;)c=c.then(p[u++],p[u++]);return c}getUri(e){return Oe(tt((e=Nt(this.defaults,e)).baseURL,e.url,e.allowAbsoluteUrls),e.params,e.paramsSerializer)}}me.forEach(["delete","get","head","options"],(function(e){ci.prototype[e]=function(t,i){return this.request(Nt(i||{},{method:e,url:t,data:(i||{}).data}))}})),me.forEach(["post","put","patch"],(function(e){function t(t){return function(i,r,s){return this.request(Nt(s||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:i,data:r}))}}ci.prototype[e]=t(),ci.prototype[e+"Form"]=t(!0)}));const di=ci;class ui{constructor(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const i=this;this.promise.then((e=>{if(!i._listeners)return;let t=i._listeners.length;for(;t-- >0;)i._listeners[t](e);i._listeners=null})),this.promise.then=e=>{let t;const r=new Promise((e=>{i.subscribe(e),t=e})).then(e);return r.cancel=function(){i.unsubscribe(t)},r},e((function(e,r,s){i.reason||(i.reason=new Qe(e,r,s),t(i.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}toAbortSignal(){const e=new AbortController,t=t=>{e.abort(t)};return this.subscribe(t),e.signal.unsubscribe=()=>this.unsubscribe(t),e.signal}static source(){let e;return{token:new ui((function(t){e=t})),cancel:e}}}const li=ui,hi={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(hi).forEach((([e,t])=>{hi[t]=e}));const mi=hi,fi=function e(t){const i=new di(t),r=j(di.prototype.request,i);return me.extend(r,di.prototype,i,{allOwnKeys:!0}),me.extend(r,i,null,{allOwnKeys:!0}),r.create=function(i){return e(Nt(t,i))},r}(ze);fi.Axios=di,fi.CanceledError=Qe,fi.CancelToken=li,fi.isCancel=Xe,fi.VERSION=it,fi.toFormData=Ie,fi.AxiosError=fe,fi.Cancel=fi.CanceledError,fi.all=function(e){return Promise.all(e)},fi.spread=function(e){return function(t){return e.apply(null,t)}},fi.isAxiosError=function(e){return me.isObject(e)&&!0===e.isAxiosError},fi.mergeConfig=Nt,fi.AxiosHeaders=We,fi.formToJSON=e=>Ve(me.isHTMLForm(e)?new FormData(e):e),fi.getAdapter=ii,fi.HttpStatusCode=mi,fi.default=fi,e.exports=fi},9342:(e,t,i)=>{"use strict";var r=i(5388),s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new r("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,i,r=0,o=e.length,n=s;for(i=0;i<o;i++)if(!((t=n.indexOf(e.charAt(i)))>64)){if(t<0)return!1;r+=6}return r%8==0},construct:function(e){var t,i,r=e.replace(/[\r\n=]/g,""),o=r.length,n=s,a=0,p=[];for(t=0;t<o;t++)t%4==0&&t&&(p.push(a>>16&255),p.push(a>>8&255),p.push(255&a)),a=a<<6|n.indexOf(r.charAt(t));return 0==(i=o%4*6)?(p.push(a>>16&255),p.push(a>>8&255),p.push(255&a)):18===i?(p.push(a>>10&255),p.push(a>>2&255)):12===i&&p.push(a>>4&255),new Uint8Array(p)},predicate:function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)},represent:function(e){var t,i,r="",o=0,n=e.length,a=s;for(t=0;t<n;t++)t%3==0&&t&&(r+=a[o>>18&63],r+=a[o>>12&63],r+=a[o>>6&63],r+=a[63&o]),o=(o<<8)+e[t];return 0==(i=n%3)?(r+=a[o>>18&63],r+=a[o>>12&63],r+=a[o>>6&63],r+=a[63&o]):2===i?(r+=a[o>>10&63],r+=a[o>>4&63],r+=a[o<<2&63],r+=a[64]):1===i&&(r+=a[o>>2&63],r+=a[o<<4&63],r+=a[64],r+=a[64]),r}})},9343:e=>{"use strict";function t(e,t){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=t,this.message=(this.reason||"(unknown reason)")+(this.mark?" "+this.mark.toString():""),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t.prototype.toString=function(e){var t=this.name+": ";return t+=this.reason||"(unknown reason)",!e&&this.mark&&(t+=" "+this.mark.toString()),t},e.exports=t},9353:e=>{"use strict";var t=Object.prototype.toString,i=Math.max,r=function(e,t){for(var i=[],r=0;r<e.length;r+=1)i[r]=e[r];for(var s=0;s<t.length;s+=1)i[s+e.length]=t[s];return i};e.exports=function(e){var s=this;if("function"!=typeof s||"[object Function]"!==t.apply(s))throw new TypeError("Function.prototype.bind called on incompatible "+s);for(var o,n=function(e){for(var t=[],i=1,r=0;i<e.length;i+=1,r+=1)t[r]=e[i];return t}(arguments),a=i(0,s.length-n.length),p=[],c=0;c<a;c++)p[c]="$"+c;if(o=Function("binder","return function ("+function(e){for(var t="",i=0;i<e.length;i+=1)t+=e[i],i+1<e.length&&(t+=",");return t}(p)+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof o){var t=s.apply(this,r(n,arguments));return Object(t)===t?t:this}return s.apply(e,r(n,arguments))})),s.prototype){var d=function(){};d.prototype=s.prototype,o.prototype=new d,d.prototype=null}return o}},9364:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(9139),s=i(9532),o=i(928),n=i(1856),a=i(8427),p=i(8627),c=i(187),d=i(7230),u=i(3783),l=i(1107),h=i(9953),m=i(8819),f=i(6009),y=i(8538),g=i(629),x=i(1596);t.default=function(e=!1){const t=[h.default,m.default,f.default,y.default,g.default,x.default,c.default,d.default,p.default,u.default,l.default];return e?t.push(s.default,n.default):t.push(r.default,o.default),t.push(a.default),t}},9378:(e,t)=>{"use strict";t.containsNewline=function e(t){if(!t)return null;switch(t.type){case"alias":case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":if(t.source.includes("\n"))return!0;if(t.end)for(const e of t.end)if("newline"===e.type)return!0;return!1;case"flow-collection":for(const i of t.items){for(const e of i.start)if("newline"===e.type)return!0;if(i.sep)for(const e of i.sep)if("newline"===e.type)return!0;if(e(i.key)||e(i.value))return!0}return!1;default:return!0}}},9383:e=>{"use strict";e.exports=Error},9428:(e,t)=>{"use strict";function i(e,t){return{validate:e,compare:t}}Object.defineProperty(t,"__esModule",{value:!0}),t.formatNames=t.fastFormats=t.fullFormats=void 0,t.fullFormats={date:i(o,n),time:i(p(!0),c),"date-time":i(l(!0),h),"iso-time":i(p(),d),"iso-date-time":i(l(),m),duration:/^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,uri:function(e){return f.test(e)&&y.test(e)},"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,url:/^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:/^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/,ipv6:/^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,regex:function(e){if(w.test(e))return!1;try{return new RegExp(e),!0}catch(e){return!1}},uuid:/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,"json-pointer":/^(?:\/(?:[^~/]|~0|~1)*)*$/,"json-pointer-uri-fragment":/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,"relative-json-pointer":/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,byte:function(e){return g.lastIndex=0,g.test(e)},int32:{type:"number",validate:function(e){return Number.isInteger(e)&&e<=b&&e>=x}},int64:{type:"number",validate:function(e){return Number.isInteger(e)}},float:{type:"number",validate:v},double:{type:"number",validate:v},password:!0,binary:!0},t.fastFormats={...t.fullFormats,date:i(/^\d\d\d\d-[0-1]\d-[0-3]\d$/,n),time:i(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,c),"date-time":i(/^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,h),"iso-time":i(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,d),"iso-date-time":i(/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,m),uri:/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i},t.formatNames=Object.keys(t.fullFormats);const r=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,s=[0,31,28,31,30,31,30,31,31,30,31,30,31];function o(e){const t=r.exec(e);if(!t)return!1;const i=+t[1],o=+t[2],n=+t[3];return o>=1&&o<=12&&n>=1&&n<=(2===o&&function(e){return e%4==0&&(e%100!=0||e%400==0)}(i)?29:s[o])}function n(e,t){if(e&&t)return e>t?1:e<t?-1:0}const a=/^(\d\d):(\d\d):(\d\d(?:\.\d+)?)(z|([+-])(\d\d)(?::?(\d\d))?)?$/i;function p(e){return function(t){const i=a.exec(t);if(!i)return!1;const r=+i[1],s=+i[2],o=+i[3],n=i[4],p="-"===i[5]?-1:1,c=+(i[6]||0),d=+(i[7]||0);if(c>23||d>59||e&&!n)return!1;if(r<=23&&s<=59&&o<60)return!0;const u=s-d*p,l=r-c*p-(u<0?1:0);return(23===l||-1===l)&&(59===u||-1===u)&&o<61}}function c(e,t){if(!e||!t)return;const i=new Date("2020-01-01T"+e).valueOf(),r=new Date("2020-01-01T"+t).valueOf();return i&&r?i-r:void 0}function d(e,t){if(!e||!t)return;const i=a.exec(e),r=a.exec(t);return i&&r?(e=i[1]+i[2]+i[3])>(t=r[1]+r[2]+r[3])?1:e<t?-1:0:void 0}const u=/t|\s/i;function l(e){const t=p(e);return function(e){const i=e.split(u);return 2===i.length&&o(i[0])&&t(i[1])}}function h(e,t){if(!e||!t)return;const i=new Date(e).valueOf(),r=new Date(t).valueOf();return i&&r?i-r:void 0}function m(e,t){if(!e||!t)return;const[i,r]=e.split(u),[s,o]=t.split(u),a=n(i,s);return void 0!==a?a||c(r,o):void 0}const f=/\/|:/,y=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,g=/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm,x=-(2**31),b=2**31-1;function v(){return!0}const w=/[^\\]\\Z/},9500:e=>{e.exports=function(e,t){var i=!Array.isArray(e),r={index:0,keyedList:i||t?Object.keys(e):null,jobs:{},results:i?{}:[],size:i?Object.keys(e).length:e.length};return t&&r.keyedList.sort(i?t:function(i,r){return t(e[i],e[r])}),r}},9526:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.reportTypeError=t.checkDataTypes=t.checkDataType=t.coerceAndCheckDataType=t.getJSONTypes=t.getSchemaTypes=t.DataType=void 0;const r=i(3090),s=i(2081),o=i(5250),n=i(6675),a=i(749);var p;function c(e){const t=Array.isArray(e)?e:e?[e]:[];if(t.every(r.isJSONType))return t;throw new Error("type must be JSONType or JSONType[]: "+t.join(","))}!function(e){e[e.Correct=0]="Correct",e[e.Wrong=1]="Wrong"}(p||(t.DataType=p={})),t.getSchemaTypes=function(e){const t=c(e.type);if(t.includes("null")){if(!1===e.nullable)throw new Error("type: null contradicts nullable: false")}else{if(!t.length&&void 0!==e.nullable)throw new Error('"nullable" cannot be used without "type"');!0===e.nullable&&t.push("null")}return t},t.getJSONTypes=c,t.coerceAndCheckDataType=function(e,t){const{gen:i,data:r,opts:o}=e,a=function(e,t){return t?e.filter((e=>d.has(e)||"array"===t&&"array"===e)):[]}(t,o.coerceTypes),c=t.length>0&&!(0===a.length&&1===t.length&&(0,s.schemaHasRulesForType)(e,t[0]));if(c){const s=l(t,r,o.strictNumbers,p.Wrong);i.if(s,(()=>{a.length?function(e,t,i){const{gen:r,data:s,opts:o}=e,a=r.let("dataType",n._`typeof ${s}`),p=r.let("coerced",n._`undefined`);"array"===o.coerceTypes&&r.if(n._`${a} == 'object' && Array.isArray(${s}) && ${s}.length == 1`,(()=>r.assign(s,n._`${s}[0]`).assign(a,n._`typeof ${s}`).if(l(t,s,o.strictNumbers),(()=>r.assign(p,s))))),r.if(n._`${p} !== undefined`);for(const e of i)(d.has(e)||"array"===e&&"array"===o.coerceTypes)&&c(e);function c(e){switch(e){case"string":return void r.elseIf(n._`${a} == "number" || ${a} == "boolean"`).assign(p,n._`"" + ${s}`).elseIf(n._`${s} === null`).assign(p,n._`""`);case"number":return void r.elseIf(n._`${a} == "boolean" || ${s} === null
              || (${a} == "string" && ${s} && ${s} == +${s})`).assign(p,n._`+${s}`);case"integer":return void r.elseIf(n._`${a} === "boolean" || ${s} === null
              || (${a} === "string" && ${s} && ${s} == +${s} && !(${s} % 1))`).assign(p,n._`+${s}`);case"boolean":return void r.elseIf(n._`${s} === "false" || ${s} === 0 || ${s} === null`).assign(p,!1).elseIf(n._`${s} === "true" || ${s} === 1`).assign(p,!0);case"null":return r.elseIf(n._`${s} === "" || ${s} === 0 || ${s} === false`),void r.assign(p,null);case"array":r.elseIf(n._`${a} === "string" || ${a} === "number"
              || ${a} === "boolean" || ${s} === null`).assign(p,n._`[${s}]`)}}r.else(),m(e),r.endIf(),r.if(n._`${p} !== undefined`,(()=>{r.assign(s,p),function({gen:e,parentData:t,parentDataProperty:i},r){e.if(n._`${t} !== undefined`,(()=>e.assign(n._`${t}[${i}]`,r)))}(e,p)}))}(e,t,a):m(e)}))}return c};const d=new Set(["string","number","integer","boolean","null"]);function u(e,t,i,r=p.Correct){const s=r===p.Correct?n.operators.EQ:n.operators.NEQ;let o;switch(e){case"null":return n._`${t} ${s} null`;case"array":o=n._`Array.isArray(${t})`;break;case"object":o=n._`${t} && typeof ${t} == "object" && !Array.isArray(${t})`;break;case"integer":o=a(n._`!(${t} % 1) && !isNaN(${t})`);break;case"number":o=a();break;default:return n._`typeof ${t} ${s} ${e}`}return r===p.Correct?o:(0,n.not)(o);function a(e=n.nil){return(0,n.and)(n._`typeof ${t} == "number"`,e,i?n._`isFinite(${t})`:n.nil)}}function l(e,t,i,r){if(1===e.length)return u(e[0],t,i,r);let s;const o=(0,a.toHash)(e);if(o.array&&o.object){const e=n._`typeof ${t} != "object"`;s=o.null?e:n._`!${t} || ${e}`,delete o.null,delete o.array,delete o.object}else s=n.nil;o.number&&delete o.integer;for(const e in o)s=(0,n.and)(s,u(e,t,i,r));return s}t.checkDataType=u,t.checkDataTypes=l;const h={message:({schema:e})=>`must be ${e}`,params:({schema:e,schemaValue:t})=>"string"==typeof e?n._`{type: ${e}}`:n._`{type: ${t}}`};function m(e){const t=function(e){const{gen:t,data:i,schema:r}=e,s=(0,a.schemaRefOrVal)(e,r,"type");return{gen:t,keyword:"type",data:i,schema:r.type,schemaCode:s,schemaValue:s,parentSchema:r,params:{},it:e}}(e);(0,o.reportError)(t,h)}t.reportTypeError=m},9532:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(928),s={keyword:"prefixItems",type:"array",schemaType:["array"],before:"uniqueItems",code:e=>(0,r.validateTuple)(e,"items")};t.default=s},9538:e=>{"use strict";e.exports=ReferenceError},9541:(e,t,i)=>{const{log:r}=i(7775),s=i(5827),{loadDescription:o}=i(5849);t.resolveDetectedTests=async function({config:e,detectedTests:t}){const i={config:e,specs:[]};r(e,"info","Resolving test specs.");for(const r of t){const t=await p({config:e,spec:r});i.specs.push(t)}return i};const n=["click","find","goTo","record","screenshot","stopRecord","type"];async function a({config:e,documentArray:t}){const i=[];if(e?.integrations?.openApi?.length>0&&i.push(...e.integrations.openApi),t?.length>0)for(const s of t){try{const e=await o(s.descriptionPath);s.definition=e}catch(t){r(e,"error",`Failed to load OpenAPI definition from ${s.descriptionPath}: ${t.message}`);continue}const t=i.findIndex((e=>e.name===s.name));t>-1&&i.splice(t,1),i.push(s)}return i}async function p({config:e,spec:t}){const i=t.specId||s.v4();r(e,"debug",`SPEC: ${i}`);const o={...t,specId:i,runOn:t.runOn||e.runOn||[],openApi:await a({config:e,documentArray:t.openApi}),tests:[]};for(const i of t.tests){const t=await c({config:e,spec:o,test:i});o.tests.push(t)}return o}async function c({config:e,spec:t,test:i}){const o=i.testId||s.v4();r(e,"debug",`TEST: ${o}`);const p={...i,testId:o,runOn:i.runOn||t.runOn,openApi:await a({config:e,documentArray:[...t.openApi,...i.openApi||[]]}),contexts:[]};delete p.steps;const c=function({contexts:e,test:t,config:i}){const r=[];let s=!1;return t.steps.forEach((e=>{n.forEach((t=>{void 0!==e[t]&&(s=!0)}))})),e.forEach((e=>{e.browsers&&(("string"==typeof e.browsers||"object"==typeof e.browsers&&!Array.isArray(e.browsers))&&(e.browsers=[e.browsers]),e.browsers=e.browsers.map((e=>("string"==typeof e&&(e={name:e}),"safari"===e.name&&(e.name="webkit"),e)))),e.platforms&&"string"==typeof e.platforms&&(e.platforms=[e.platforms])})),e.forEach((e=>{const t=[];e.platforms.forEach((i=>{if(s)e.browsers.forEach((e=>{const r={platform:i,browser:e};t.push(r)}));else{const e={platform:i};t.push(e)}})),t.forEach((e=>{r.find((t=>t.platform===e.platform&&JSON.stringify(t.browser)===JSON.stringify(e.browser)))||r.push(e)}))})),0===r.length&&r.push({}),r}({test:i,contexts:p.runOn,config:e});for(const t of c){const r=await d({config:e,test:i,context:t});p.contexts.push(r)}return p}async function d({config:e,test:t,context:i}){const o=i.contextId||s.v4();return r(e,"debug",`CONTEXT: ${o}`),{...i,openApi:t.openApi||[],steps:[...t.steps],contextId:o}}},9547:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(8873);t.default=function(e){if(!(0,r.default)(e))throw TypeError("Invalid UUID");return parseInt(e.slice(14,15),16)}},9605:(e,t,i)=>{"use strict";var r=i(453)("%Object.defineProperty%",!0),s=i(9092)(),o=i(9957),n=i(9675),a=s?Symbol.toStringTag:null;e.exports=function(e,t){var i=arguments.length>2&&!!arguments[2]&&arguments[2].force,s=arguments.length>2&&!!arguments[2]&&arguments[2].nonConfigurable;if(void 0!==i&&"boolean"!=typeof i||void 0!==s&&"boolean"!=typeof s)throw new n("if provided, the `overrideIfSet` and `nonConfigurable` options must be booleans");!a||!i&&o(e,a)||(r?r(e,a,{configurable:!s,enumerable:!1,value:t,writable:!1}):e[a]=t)}},9612:e=>{"use strict";e.exports=Object},9613:(e,t)=>{"use strict";function i(){return{keyword:"allRequired",type:"object",schemaType:"boolean",macro(e,t){if(!e)return!0;const i=Object.keys(t.properties);return 0===i.length||{required:i}},dependencies:["properties"]}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i,e.exports=i},9637:(e,t,i)=>{"use strict";var r=i(484),s=i(9714);const o="<<",n={identify:e=>e===o||"symbol"==typeof e&&e.description===o,default:"key",tag:"tag:yaml.org,2002:merge",test:/^<<$/,resolve:()=>Object.assign(new s.Scalar(Symbol(o)),{addToJSMap:a}),stringify:()=>o};function a(e,t,i){if(i=e&&r.isAlias(i)?i.resolve(e.doc):i,r.isSeq(i))for(const r of i.items)p(e,t,r);else if(Array.isArray(i))for(const r of i)p(e,t,r);else p(e,t,i)}function p(e,t,i){const s=e&&r.isAlias(i)?i.resolve(e.doc):i;if(!r.isMap(s))throw new Error("Merge sources must be maps or map aliases");const o=s.toJSON(null,e,Map);for(const[e,i]of o)t instanceof Map?t.has(e)||t.set(e,i):t instanceof Set?t.add(e):Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{value:i,writable:!0,enumerable:!0,configurable:!0});return t}t.addMergeToJSMap=a,t.isMergeKey=(e,t)=>(n.identify(t)||r.isScalar(t)&&(!t.type||t.type===s.Scalar.PLAIN)&&n.identify(t.value))&&e?.doc.schema.tags.some((e=>e.tag===n.tag&&e.default)),t.merge=n},9675:e=>{"use strict";e.exports=TypeError},9714:(e,t,i)=>{"use strict";var r=i(484),s=i(8898),o=i(3732);class n extends s.NodeBase{constructor(e){super(r.SCALAR),this.value=e}toJSON(e,t){return t?.keep?this.value:o.toJS(this.value,e,t)}toString(){return String(this.value)}}n.BLOCK_FOLDED="BLOCK_FOLDED",n.BLOCK_LITERAL="BLOCK_LITERAL",n.PLAIN="PLAIN",n.QUOTE_DOUBLE="QUOTE_DOUBLE",n.QUOTE_SINGLE="QUOTE_SINGLE",t.Scalar=n,t.isScalarValue=e=>!e||"function"!=typeof e&&"object"!=typeof e},9806:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(7335)),o=(e,t)=>{if(Array.isArray(t)){for(const i of t)n(i)(e);return e}if(t)return n(t)(e),e;for(t in s.default)n(t)(e);return e};function n(e){const t=s.default[e];if(!t)throw new Error("Unknown keyword "+e);return t}o.get=n,t.default=o,e.exports=o,e.exports.default=o},9870:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=[i(7391).default];t.default=r},9889:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i={keyword:"id",code(){throw new Error('NOT SUPPORTED: keyword "id", use "$id" for schema ID')}};t.default=i},9896:e=>{"use strict";e.exports=require("fs")},9933:e=>{"use strict";var t=/\.(txt|htm|html|md|xml|js|min|map|css|scss|less|svg)$/i;e.exports={order:300,allowEmpty:!0,encoding:"utf8",canParse:function(e){return("string"==typeof e.data||Buffer.isBuffer(e.data))&&t.test(e.url)},parse:function(e){if("string"==typeof e.data)return e.data;if(Buffer.isBuffer(e.data))return e.data.toString(this.encoding);throw new Error("data is not text")}}},9942:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(6982),s=new Uint8Array(256);let o=s.length;t.default=function(){return o>s.length-16&&((0,r.randomFillSync)(s),o=0),s.slice(o,o+=16)}},9953:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=i(749),s={keyword:"not",schemaType:["object","boolean"],trackErrors:!0,code(e){const{gen:t,schema:i,it:s}=e;if((0,r.alwaysValidSchema)(s,i))return void e.fail();const o=t.name("valid");e.subschema({keyword:"not",compositeRule:!0,createErrors:!1,allErrors:!1},o),e.failResult(o,(()=>e.reset()),(()=>e.error()))},error:{message:"must NOT be valid"}};t.default=s},9957:(e,t,i)=>{"use strict";var r=Function.prototype.call,s=Object.prototype.hasOwnProperty,o=i(6743);e.exports=o.call(r,s)},9983:function(e,t,i){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.startsWith("\\\\?\\")?e:e.split(s.default?.win32?.sep).join(s.default?.posix?.sep??"/")};const s=r(i(6928))}},t={};function i(r){var s=t[r];if(void 0!==s)return s.exports;var o=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(o.exports,o,o.exports,i),o.loaded=!0,o.exports}i.c=t,i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r=i(i.s=4265);module.exports=r})();